
{
	"openapi": "3.0.0",
	"info":
	{
		"title": "IBM Cognos TM1 Server, OData Compliant, RESTful API\n",
		"description": "This is a swagger.json representation of TM1's RESTful API describing all the available types and root set of paths. The set of paths made available here are those advertised in the service document, those leading to contained properties and function and actions that can be applied, grouped by the type they return.\n",
		"version": "11.5.0"
	},
	"servers": [
		{
			"url": "http://tm1server:8888/api/v1"
		}
	],
	"tags": [
		{
			"name": "ActiveConfiguration"
		},
		{
			"name": "ActiveSession"
		},
		{
			"name": "ActiveUser"
		},
		{
			"name": "Annotations",
			"description": "An element that represents a single annotation."
		},
		{
			"name": "ApplicationContextFacets",
			"description": "The facet of the application context."
		},
		{
			"name": "Cellsets",
			"description": "The result of an execution of a view or an MDX expression."
		},
		{
			"name": "ChoreAttributes",
			"description": "An interface to describe an attribute."
		},
		{
			"name": "Chores",
			"description": "Objects that execute one or more processes of TM1 at a user-defined frequency."
		},
		{
			"name": "Configuration"
		},
		{
			"name": "Contents",
			"description": "A container for related TM1 objects."
		},
		{
			"name": "CubeAttributes",
			"description": "An interface to describe an attribute."
		},
		{
			"name": "Cubes",
			"description": "Represents a single cube on a TM1 server."
		},
		{
			"name": "DimensionAttributes",
			"description": "An interface to describe an attribute."
		},
		{
			"name": "Dimensions",
			"description": "Represents a single dimension on a TM1 server."
		},
		{
			"name": "ErrorLogFiles",
			"description": "An error log file"
		},
		{
			"name": "Groups",
			"description": "A user group on a TM1 server."
		},
		{
			"name": "Loggers",
			"description": "A logger to be configured for a TM1 server."
		},
		{
			"name": "MemberSets"
		},
		{
			"name": "MessageLogEntries",
			"description": "An entry in the message log."
		},
		{
			"name": "ProcessAttributes",
			"description": "An interface to describe an attribute."
		},
		{
			"name": "ProcessDebugContexts",
			"description": "A debug session of a TurboIntegrator process."
		},
		{
			"name": "Processes",
			"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata."
		},
		{
			"name": "SQLDataSources",
			"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running."
		},
		{
			"name": "Sandboxes",
			"description": "A sandbox that allows you to work with your data without affecting your base."
		},
		{
			"name": "Server"
		},
		{
			"name": "Sessions",
			"description": "Represents a unique user session with the server."
		},
		{
			"name": "StaticConfiguration"
		},
		{
			"name": "Threads",
			"description": "A thread that can run queries concurrently on the TM1 server."
		},
		{
			"name": "TransactionLogEntries",
			"description": "An entry in the transaction log."
		},
		{
			"name": "Users",
			"description": "A user on a TM1 server."
		}
	],
	"paths":
	{
		"/ActiveConfiguration":
		{
			"get":
			{
				"summary": "Get ActiveConfiguration",
				"tags": ["ActiveConfiguration"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ServerName", "Access", "Administration", "Modelling", "Performance"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerSettings"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update ActiveConfiguration",
				"tags": ["ActiveConfiguration"],
				"requestBody":
				{
					"required": true,
					"description": "The settings for a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerSettings-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveSession":
		{
			"get":
			{
				"summary": "Get ActiveSession",
				"tags": ["ActiveSession"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update ActiveSession",
				"tags": ["ActiveSession"],
				"requestBody":
				{
					"required": true,
					"description": "Represents a unique user session with the server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveSession/tm1.Close":
		{
			"post":
			{
				"summary": "Invoke action Close",
				"description": "Closes the session.",
				"tags": ["ActiveSession"],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveSession/User":
		{
			"get":
			{
				"summary": "Get related User",
				"tags": ["ActiveSession", "Users"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of User",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveSession/Threads":
		{
			"get":
			{
				"summary": "Get related Threads",
				"tags": ["ActiveSession", "Threads"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Type", "Type desc", "Name", "Name desc", "Context", "Context desc", "State", "State desc", "Function", "Function desc", "ObjectType", "ObjectType desc", "ObjectName", "ObjectName desc", "RLocks", "RLocks desc", "IXLocks", "IXLocks desc", "WLocks", "WLocks desc", "ElapsedTime", "ElapsedTime desc", "WaitTime", "WaitTime desc", "Info", "Info desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Type", "Name", "Context", "State", "Function", "ObjectType", "ObjectName", "RLocks", "IXLocks", "WLocks", "ElapsedTime", "WaitTime", "Info"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Session"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Thread",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Thread",
				"tags": ["ActiveSession", "Threads"],
				"parameters": [],
				"requestBody":
				{
					"required": true,
					"description": "A thread that can run queries concurrently on the TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveUser":
		{
			"get":
			{
				"summary": "Get ActiveUser",
				"tags": ["ActiveUser"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update ActiveUser",
				"tags": ["ActiveUser"],
				"requestBody":
				{
					"required": true,
					"description": "A user on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.User-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveUser/tm1.Disconnect":
		{
			"post":
			{
				"summary": "Invoke action Disconnect",
				"description": "Disconnects a user but lets threads that are active continue to run until they are done.",
				"tags": ["ActiveUser"],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveUser/Groups":
		{
			"get":
			{
				"summary": "Get related Groups",
				"tags": ["ActiveUser", "Groups"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Users"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Group",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Group",
				"tags": ["ActiveUser", "Groups"],
				"parameters": [],
				"requestBody":
				{
					"required": true,
					"description": "A user group on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Group-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ActiveUser/Sessions":
		{
			"get":
			{
				"summary": "Get related Sessions",
				"tags": ["ActiveUser", "Sessions"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Context", "Context desc", "Active", "Active desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Session",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Session",
				"tags": ["ActiveUser", "Sessions"],
				"parameters": [],
				"requestBody":
				{
					"required": true,
					"description": "Represents a unique user session with the server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Annotations":
		{
			"get":
			{
				"summary": "Get entities from Annotations",
				"tags": ["Annotations"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Text", "Text desc", "Creator", "Creator desc", "Created", "Created desc", "LastUpdatedBy", "LastUpdatedBy desc", "LastUpdated", "LastUpdated desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Text", "Creator", "Created", "LastUpdatedBy", "LastUpdated"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "ApplicationContext", "DimensionalContext", "Attachments"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Annotation",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Annotations",
				"tags": ["Annotations"],
				"requestBody":
				{
					"required": true,
					"description": "An element that represents a single annotation.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Annotations('{ID}')":
		{
			"get":
			{
				"summary": "Get entity from Annotations by key",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Text", "Creator", "Created", "LastUpdatedBy", "LastUpdated"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "ApplicationContext", "DimensionalContext", "Attachments"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Annotations",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An element that represents a single annotation.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Annotations",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Annotations('{ID}')/ApplicationContext":
		{
			"get":
			{
				"summary": "Get related ApplicationContext",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Value", "Value desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Value"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Facet"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ApplicationContextFacetValue",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Annotations('{ID}')/DimensionalContext":
		{
			"get":
			{
				"summary": "Get related DimensionalContext",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "UniqueName", "UniqueName desc", "Type", "Type desc", "Ordinal", "Ordinal desc", "IsPlaceholder", "IsPlaceholder desc", "Weight", "Weight desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "Type", "Ordinal", "IsPlaceholder", "Weight", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchy", "Level", "Element", "Parent", "Children", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Member",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Annotations('{ID}')/Attachments":
		{
			"get":
			{
				"summary": "Get related Attachments",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Description", "Description desc", "ContentType", "ContentType desc", "Size", "Size desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Description", "ContentType", "Size"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Attachment",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Attachment"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Attachment",
				"tags": ["Annotations"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the annotation.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An attached document that provides details and background.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attachment-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Attachment"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ApplicationContextFacets":
		{
			"get":
			{
				"summary": "Get entities from ApplicationContextFacets",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Values"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ApplicationContextFacet",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to ApplicationContextFacets",
				"tags": ["ApplicationContextFacets"],
				"requestBody":
				{
					"required": true,
					"description": "The facet of the application context.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ApplicationContextFacets('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from ApplicationContextFacets by key",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the application context facet.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Values"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in ApplicationContextFacets",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the application context facet.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "The facet of the application context.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from ApplicationContextFacets",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the application context facet.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ApplicationContextFacets('{Name}')/Values":
		{
			"get":
			{
				"summary": "Get related Values",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the application context facet.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Value", "Value desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Value"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Facet"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ApplicationContextFacetValue",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related ApplicationContextFacetValue",
				"tags": ["ApplicationContextFacets"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the application context facet.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A value for a facet of the application context.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/BeginChangeSet":
		{
			"post":
			{
				"summary": "Invoke action BeginChangeSet",
				"description": "Begins a change set.",
				"tags": ["Service Operations"],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"type": "string"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets":
		{
			"get":
			{
				"summary": "Get entities from Cellsets",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Cube", "Axes", "Cells"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Cellset",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Cellsets",
				"tags": ["Cellsets"],
				"requestBody":
				{
					"required": true,
					"description": "The result of an execution of a view or an MDX expression.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')":
		{
			"get":
			{
				"summary": "Get entity from Cellsets by key",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Cube", "Axes", "Cells"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Cellsets",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "The result of an execution of a view or an MDX expression.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Cellsets",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/tm1.GetPartition(Begin={Begin},End={End})":
		{
			"get":
			{
				"summary": "Invoke function GetPartition",
				"description": "Retrieves the cells of a cellset in multiple partitions.  \nThis allows the application to manage processing of the area of the partition based on a defined boundary.",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "Begin",
						"in": "path",
						"required": true,
						"description": "Defines the cell ordinal of the left or right corner of the closest rectangular area of your cellset.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"nullable": true,
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "End",
						"in": "path",
						"required": true,
						"description": "Defines the cell ordinal of the other edge of the closest rectangular area of your cellset.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"nullable": true,
							"format": "int64",
							"example": "42"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of CellsetCell",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/tm1.SaveViewAs":
		{
			"post":
			{
				"summary": "Invoke action SaveViewAs",
				"description": "Saves a view.",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Name":
									{
										"type": "string",
										"description": "The name to save the view as."
									},
									"Overwrite":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to overwrite the view that was passed in if it already exists."
									},
									"MakePrivate":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to save this view as private."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/tm1.Update":
		{
			"post":
			{
				"summary": "Invoke action Update",
				"description": "Applies updates to a cell, or a range of cells, depending on the value of the parameters provided.",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"BeginOrdinal":
									{
										"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
										],
										"format": "int64",
										"example": "42",
										"description": "Specifies the cell to update if updating a single cell, or the beginning of the range if updating more than one cell."
									},
									"EndOrdinal":
									{
										"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
										],
										"nullable": true,
										"format": "int64",
										"example": "42",
										"description": "The last cell position when updating a range of cells."
									},
									"ReferenceCube":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										],
										"description": "The cube from which the data for the ReferenceCell is sourced."
									},
									"ReferenceCell":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "The cell, or slice, containing the source data required by the spreading command."
									},
									"Value":
									{
										"type": "string",
										"description": "The actual value, typically a spreading command, with which the cell is updated."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/tm1.UpdateCells":
		{
			"post":
			{
				"summary": "Invoke action UpdateCells",
				"description": "Applies updates to cells in a cellset.",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Updates":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetUpdate"
										},
										"description": "Specifies the cells to update and the values with which to update the cells."
									},
									"Order":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.UpdateOrder"
											}
										],
										"description": "The update order to use. Specify 0 for no ordering.  \nThe spreading commands are executed on each cell in the order that they are provided in Updates. Specify 1 to order the cells by level. Leaf cell values are set first and these leaf cells are held. Then, their parents are set and held, and so on, until the highest level consolidations are reached."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/Cube":
		{
			"get":
			{
				"summary": "Get related Cube",
				"tags": ["Cellsets", "Cubes"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Rules", "DrillthroughRules", "LastSchemaUpdate", "LastDataUpdate", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimensions", "Views", "ViewAttributes", "PrivateViews", "Annotations", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Cube",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/Axes":
		{
			"get":
			{
				"summary": "Get related Axes",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Ordinal desc", "Cardinality", "Cardinality desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Cardinality"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "Tuples"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of CellsetAxis",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related CellsetAxis",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "New entity",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cellsets('{ID}')/Cells":
		{
			"get":
			{
				"summary": "Get related Cells",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Ordinal desc", "Status", "Status desc", "Value", "Value desc", "FormatString", "FormatString desc", "FormattedValue", "FormattedValue desc", "Updateable", "Updateable desc", "RuleDerived", "RuleDerived desc", "Annotated", "Annotated desc", "Consolidated", "Consolidated desc", "NullIntersected", "NullIntersected desc", "Language", "Language desc", "HasPicklist", "HasPicklist desc", "PicklistValues", "PicklistValues desc", "HasDrillthrough", "HasDrillthrough desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Status", "Value", "FormatString", "FormattedValue", "Updateable", "RuleDerived", "Annotated", "Consolidated", "NullIntersected", "Language", "HasPicklist", "PicklistValues", "HasDrillthrough"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "DrillthroughScripts", "Members"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of CellsetCell",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related CellsetCell",
				"tags": ["Cellsets"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A cell in a cellset.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ChoreAttributes":
		{
			"get":
			{
				"summary": "Get entities from ChoreAttributes",
				"tags": ["ChoreAttributes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to ChoreAttributes",
				"tags": ["ChoreAttributes"],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ChoreAttributes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from ChoreAttributes by key",
				"tags": ["ChoreAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in ChoreAttributes",
				"tags": ["ChoreAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from ChoreAttributes",
				"tags": ["ChoreAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores":
		{
			"get":
			{
				"summary": "Get entities from Chores",
				"tags": ["Chores"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "StartTime", "StartTime desc", "DSTSensitive", "DSTSensitive desc", "Active", "Active desc", "ExecutionMode", "ExecutionMode desc", "Frequency", "Frequency desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "StartTime", "DSTSensitive", "Active", "ExecutionMode", "Frequency", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "LocalizedAttributes", "Tasks"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Chore",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Chores",
				"tags": ["Chores"],
				"requestBody":
				{
					"required": true,
					"description": "Objects that execute one or more processes of TM1 at a user-defined frequency.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Chores by key",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "StartTime", "DSTSensitive", "Active", "ExecutionMode", "Frequency", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "LocalizedAttributes", "Tasks"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Chores",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Objects that execute one or more processes of TM1 at a user-defined frequency.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Chores",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/tm1.Activate":
		{
			"post":
			{
				"summary": "Invoke action Activate",
				"description": "Activates a chore.",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/tm1.Deactivate":
		{
			"post":
			{
				"summary": "Invoke action Deactivate",
				"description": "Deactivates a chore.",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/tm1.Execute":
		{
			"post":
			{
				"summary": "Invoke action Execute",
				"description": "Executes a chore.",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/tm1.SetServerLocalStartTime":
		{
			"post":
			{
				"summary": "Invoke action SetServerLocalStartTime",
				"description": "Sets the local start time for a server.",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"StartDate":
									{
										"type": "string",
										"format": "date",
										"example": "2017-04-13",
										"description": "The start date to set for this chore."
									},
									"StartTime":
									{
										"type": "string",
										"format": "time",
										"example": "15:51:04",
										"description": "The start time to set for this chore."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/LocalizedAttributes":
		{
			"get":
			{
				"summary": "Get related LocalizedAttributes",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "LocaleID desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "Attributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of LocalizedAttributes",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related LocalizedAttributes",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Chores('{Name}')/Tasks":
		{
			"get":
			{
				"summary": "Get related Tasks",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Step", "Step desc", "Parameters", "Parameters desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Step", "Parameters"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Process", "Chore"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ChoreTask",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTask"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related ChoreTask",
				"tags": ["Chores"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the chore.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A task to be completed as part of a Chore.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTask-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTask"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/CompileProcess":
		{
			"post":
			{
				"summary": "Invoke action CompileProcess",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Process":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessSyntaxError",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessSyntaxError"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Configuration":
		{
			"get":
			{
				"summary": "Get Configuration",
				"tags": ["Configuration"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ServerName", "AdminHost", "ProductVersion", "PortNumber", "ClientMessagePortNumber", "HTTPPortNumber", "IntegratedSecurityMode", "SecurityMode", "PrincipalName", "SecurityPackageName", "ClientCAMURIs", "WebCAMURI", "ClientPingCAMPassport", "ServerCAMURI", "AllowSeparateNandCRules", "DistributedOutputDir", "DisableSandboxing", "JobQueuing", "ForceReevaluationOfFeedersForFedCellsOnDataChange", "DataBaseDirectory", "UnicodeUpperLowerCase"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Configuration"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update Configuration",
				"tags": ["Configuration"],
				"requestBody":
				{
					"required": true,
					"description": "Specifies configuration parameters as defined in the Tm1s.cfg file for an IBM Cognos TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Configuration-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Contents":
		{
			"get":
			{
				"summary": "Get entities from Contents",
				"tags": ["Contents"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Contents", "PrivateContents"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Folder",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Contents",
				"tags": ["Contents"],
				"requestBody":
				{
					"required": true,
					"description": "A container for related TM1 objects.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Contents('{ID}')":
		{
			"get":
			{
				"summary": "Get entity from Contents by key",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Contents", "PrivateContents"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Contents",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A container for related TM1 objects.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Contents",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Contents('{ID}')/Contents":
		{
			"get":
			{
				"summary": "Get related Contents",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Name", "Name desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Name", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "ContainedBy", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Entry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Entry",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An entry.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Contents('{ID}')/PrivateContents":
		{
			"get":
			{
				"summary": "Get related PrivateContents",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Name", "Name desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Name", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "ContainedBy", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Entry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Entry",
				"tags": ["Contents"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID of the entry.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An entry.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ControlCubes()":
		{
			"get":
			{
				"summary": "Invoke function ControlCubes",
				"description": "Returns only control cubes in the model.  \nControl cubes are used for \"system use\" (for example, localized attribute values) to TM1 (identified with '}'). Control cubes don't contain your actual data.",
				"tags": ["Cubes"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Cube",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ControlDimensions()":
		{
			"get":
			{
				"summary": "Invoke function ControlDimensions",
				"description": "Return only control dimensions.",
				"tags": ["Dimensions"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Dimension",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/CubeAttributes":
		{
			"get":
			{
				"summary": "Get entities from CubeAttributes",
				"tags": ["CubeAttributes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to CubeAttributes",
				"tags": ["CubeAttributes"],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/CubeAttributes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from CubeAttributes by key",
				"tags": ["CubeAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in CubeAttributes",
				"tags": ["CubeAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from CubeAttributes",
				"tags": ["CubeAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes":
		{
			"get":
			{
				"summary": "Get entities from Cubes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Rules", "Rules desc", "DrillthroughRules", "DrillthroughRules desc", "LastSchemaUpdate", "LastSchemaUpdate desc", "LastDataUpdate", "LastDataUpdate desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Rules", "DrillthroughRules", "LastSchemaUpdate", "LastDataUpdate", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimensions", "Views", "ViewAttributes", "PrivateViews", "Annotations", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Cube",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Cubes",
				"tags": ["Cubes"],
				"requestBody":
				{
					"required": true,
					"description": "Represents a single cube on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Cubes by key",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Rules", "DrillthroughRules", "LastSchemaUpdate", "LastDataUpdate", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimensions", "Views", "ViewAttributes", "PrivateViews", "Annotations", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Cubes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Represents a single cube on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Cubes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.DimensionsStorageOrder()":
		{
			"get":
			{
				"summary": "Invoke function DimensionsStorageOrder",
				"description": "Gets a Cube's Dimensions in current storage order.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Dimension",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.CheckFeeders":
		{
			"post":
			{
				"summary": "Invoke action CheckFeeders",
				"description": "Returns a list of components of a consolidation that are not properly fed.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Tuple":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "Coordinates of the cell that should be checked."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of FedCellDescriptor",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.FedCellDescriptor"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.CheckRules":
		{
			"post":
			{
				"summary": "Invoke action CheckRules",
				"description": "Checks the Cube rules for errors.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of RuleSyntaxError",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.RuleSyntaxError"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.Lock":
		{
			"post":
			{
				"summary": "Invoke action Lock",
				"description": "Locks a cube, preventing any users from modifying it until the cube is unlocked.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.ReorderDimensions":
		{
			"post":
			{
				"summary": "Invoke action ReorderDimensions",
				"description": "Reorders a Cube's Dimensions.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Dimensions":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
										},
										"description": "The new order of Dimensions."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"anyOf": [
										{
											"type": "number"
										},
										{
											"type": "string"
										}
									],
									"format": "double",
									"example": 3.14
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.TraceCellCalculation":
		{
			"post":
			{
				"summary": "Invoke action TraceCellCalculation",
				"description": "Traces the calculation of a single cell. The result will contain, recursively, any components of the calculation.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Tuple":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "Coordinates of the cell that should be traced."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationComponent"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.TraceFeeders":
		{
			"post":
			{
				"summary": "Invoke action TraceFeeders",
				"description": "Get a list of cells that are fed by the specified cell.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Tuple":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "Coordinates of the cell that should be traced."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.FeederTrace"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.Unlock":
		{
			"post":
			{
				"summary": "Invoke action Unlock",
				"description": "Unlocks a cube, allowing modifications.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.Update":
		{
			"post":
			{
				"summary": "Invoke action Update",
				"description": "Applies updates to a cube, a slice of a cube, or cells of a cube, depending on the value of the parameters provided.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Slice":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "The slice of the cube targeted by the update."
									},
									"Cells":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.CellDescriptor"
										},
										"description": "The cells of the cube targeted by the update."
									},
									"ReferenceCube":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										],
										"description": "The cube containing the source data required by the spreading command."
									},
									"ReferenceCell":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "The cell containing the source data required by the spreading command."
									},
									"Value":
									{
										"type": "string",
										"description": "The actual value, typically a spreading command, with which the cell is updated."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/tm1.UpdateCells":
		{
			"post":
			{
				"summary": "Invoke action UpdateCells",
				"description": "Applies updates to cells of a cube.",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Updates":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.CubeUpdate"
										},
										"description": "The cells of the cube targeted by the update and the values with which to update those cells."
									},
									"Order":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.UpdateOrder"
											}
										],
										"description": "The update order to use. Specify 0 for no ordering.  \nThe spreading commands are executed on each cell in the order that they are provided in Updates. Specify 1 to order the cells by level. Leaf cell values are set first and these leaf cells are held. Then, their parents are set and held, and so on, until the highest level consolidations are reached."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/Dimensions":
		{
			"get":
			{
				"summary": "Get related Dimensions",
				"tags": ["Cubes", "Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "UniqueName", "UniqueName desc", "AllLeavesHierarchyName", "AllLeavesHierarchyName desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "AllLeavesHierarchyName", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "DefaultHierarchy", "HierarchyAttributes", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Dimension",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Dimension",
				"tags": ["Cubes", "Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Represents a single dimension on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/Views":
		{
			"get":
			{
				"summary": "Get related Views",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Cube", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of View",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related View",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A view of data in a cube.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/ViewAttributes":
		{
			"get":
			{
				"summary": "Get related ViewAttributes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related AttributeDefinition",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/PrivateViews":
		{
			"get":
			{
				"summary": "Get related PrivateViews",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Cube", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of View",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related View",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A view of data in a cube.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/Annotations":
		{
			"get":
			{
				"summary": "Get related Annotations",
				"tags": ["Cubes", "Annotations"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Text", "Text desc", "Creator", "Creator desc", "Created", "Created desc", "LastUpdatedBy", "LastUpdatedBy desc", "LastUpdated", "LastUpdated desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Text", "Creator", "Created", "LastUpdatedBy", "LastUpdated"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "ApplicationContext", "DimensionalContext", "Attachments"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Annotation",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Annotation",
				"tags": ["Cubes", "Annotations"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An element that represents a single annotation.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Cubes('{Name}')/LocalizedAttributes":
		{
			"get":
			{
				"summary": "Get related LocalizedAttributes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "LocaleID desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "Attributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of LocalizedAttributes",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related LocalizedAttributes",
				"tags": ["Cubes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "Name of the cube as it is registered on the server.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/DecryptDataFile":
		{
			"post":
			{
				"summary": "Invoke action DecryptDataFile",
				"description": "Decrypts a single file. Must be performed by a full admin.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"SourcePath":
									{
										"type": "string",
										"nullable": true,
										"description": "The path to the file to be decrypted."
									},
									"DestinationPath":
									{
										"type": "string",
										"nullable": true,
										"description": "The path to the directory where the decrypted file should be stored. If unspecified, the file will be decrypted and replaced."
									},
									"FileType":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.EncryptionFileType"
											}
										],
										"description": "The file type of the source file."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/DecryptDataModel":
		{
			"post":
			{
				"summary": "Invoke action DecryptDataModel",
				"description": "Decrypts the data model. Must be performed by a full admin. Will result in a server shutdown.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"TimeUntilShutdown":
									{
										"type": "string",
										"nullable": true,
										"format": "duration",
										"example": "P4DT15H51M04S",
										"description": "The time until the server shuts down, rounded up to the minute."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/DeleteAnnotationArtifacts":
		{
			"post":
			{
				"summary": "Invoke action DeleteAnnotationArtifacts",
				"description": "Removes all annotation-related control cubes and all things related to annotations for the entire model including context facets, comments, attachments, and so on. Use this action with caution because it cannot be undone.",
				"tags": ["Service Operations"],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/DimensionAttributes":
		{
			"get":
			{
				"summary": "Get entities from DimensionAttributes",
				"tags": ["DimensionAttributes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to DimensionAttributes",
				"tags": ["DimensionAttributes"],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/DimensionAttributes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from DimensionAttributes by key",
				"tags": ["DimensionAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in DimensionAttributes",
				"tags": ["DimensionAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from DimensionAttributes",
				"tags": ["DimensionAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions":
		{
			"get":
			{
				"summary": "Get entities from Dimensions",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "UniqueName", "UniqueName desc", "AllLeavesHierarchyName", "AllLeavesHierarchyName desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "AllLeavesHierarchyName", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "DefaultHierarchy", "HierarchyAttributes", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Dimension",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Dimensions",
				"tags": ["Dimensions"],
				"requestBody":
				{
					"required": true,
					"description": "Represents a single dimension on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Dimensions by key",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "AllLeavesHierarchyName", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "DefaultHierarchy", "HierarchyAttributes", "LocalizedAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Dimensions",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Represents a single dimension on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Dimensions",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/tm1.AddAllLeavesHierarchy":
		{
			"post":
			{
				"summary": "Invoke action AddAllLeavesHierarchy",
				"description": "Adds the all leaves hierarchy to a single hierarchy dimension and implicitly converts that dimension into a multi hierarchy dimension.",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"AllLeavesHierarchyName":
									{
										"type": "string",
										"nullable": true,
										"description": "The name of the all leaves hierarchy (default='Leaves')"
									},
									"Visible":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean indicating if the visible property of the new all leaves hierarchy should be set to true (default=false)."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/tm1.Lock":
		{
			"post":
			{
				"summary": "Invoke action Lock",
				"description": "Locks a dimension, preventing any users from modifying it until the dimension is unlocked.",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/tm1.SaveAs":
		{
			"post":
			{
				"summary": "Invoke action SaveAs",
				"description": "Saves a dimension.",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Name":
									{
										"type": "string",
										"description": "The name to save the dimension as."
									},
									"Overwrite":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to overwrite the dimension that was passed in if it already exists."
									},
									"KeepExistingAttributes":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether overwrite any existing attributes for the dimension, and all contained objects, we might be replacing with an overwrite. If the save is not overwriting, and this value is set to true, then no attributes will be created for the new dimension."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/tm1.Unlock":
		{
			"post":
			{
				"summary": "Invoke action Unlock",
				"description": "Unlocks a dimension, allowing modifications.",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/Hierarchies":
		{
			"get":
			{
				"summary": "Get related Hierarchies",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "UniqueName", "UniqueName desc", "Cardinality", "Cardinality desc", "Structure", "Structure desc", "Visible", "Visible desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "Cardinality", "Structure", "Visible", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimension", "Elements", "Edges", "Subsets", "PrivateSubsets", "SessionSubsets", "Members", "AllMember", "DefaultMember", "Levels", "LocalizedAttributes", "ElementAttributes", "SubsetAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Hierarchy",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Hierarchy",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A hierarchy organizes dimensions into a hierarchical structure, with each dimension representing a different level of the hierarchy.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/DefaultHierarchy":
		{
			"get":
			{
				"summary": "Get related Hierarchy",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "Cardinality", "Structure", "Visible", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimension", "Elements", "Edges", "Subsets", "PrivateSubsets", "SessionSubsets", "Members", "AllMember", "DefaultMember", "Levels", "LocalizedAttributes", "ElementAttributes", "SubsetAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Hierarchy",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/HierarchyAttributes":
		{
			"get":
			{
				"summary": "Get related HierarchyAttributes",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related AttributeDefinition",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Dimensions('{Name}')/LocalizedAttributes":
		{
			"get":
			{
				"summary": "Get related LocalizedAttributes",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "LocaleID desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "Attributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of LocalizedAttributes",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related LocalizedAttributes",
				"tags": ["Dimensions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the dimension.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/EncryptDataFile":
		{
			"post":
			{
				"summary": "Invoke action EncryptDataFile",
				"description": "Encrypts a single file. Must be performed by a full admin.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"SourcePath":
									{
										"type": "string",
										"nullable": true,
										"description": "The path to the file to be encrypted."
									},
									"DestinationPath":
									{
										"type": "string",
										"nullable": true,
										"description": "The path to the directory where the encrypted file should be stored. If unspecified, the file will be encrypted and replaced."
									},
									"FileType":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.EncryptionFileType"
											}
										],
										"description": "The file type of the source file."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/EncryptDataModel":
		{
			"post":
			{
				"summary": "Invoke action EncryptDataModel",
				"description": "Encrypts the data model. Must be performed by a full admin. Will result in a server shutdown.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"TimeUntilShutdown":
									{
										"type": "string",
										"nullable": true,
										"format": "duration",
										"example": "P4DT15H51M04S",
										"description": "The time until the server shuts down, rounded up to the minute."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/EndChangeSet":
		{
			"post":
			{
				"summary": "Invoke action EndChangeSet",
				"description": "Ends a change set.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"ChangeSetID":
									{
										"type": "string",
										"description": "The ID of the change set to end."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"anyOf": [
										{
											"type": "integer"
										},
										{
											"type": "string"
										}
									],
									"format": "int64",
									"example": "42"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ErrorLogFiles":
		{
			"get":
			{
				"summary": "Get entities from ErrorLogFiles",
				"tags": ["ErrorLogFiles"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Filename", "Filename desc", "Content", "Content desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Filename", "Content"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ErrorLogFile",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to ErrorLogFiles",
				"tags": ["ErrorLogFiles"],
				"requestBody":
				{
					"required": true,
					"description": "An error log file",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ErrorLogFiles('{Filename}')":
		{
			"get":
			{
				"summary": "Get entity from ErrorLogFiles by key",
				"tags": ["ErrorLogFiles"],
				"parameters": [
					{
						"name": "Filename",
						"in": "path",
						"required": true,
						"description": "The name of the error log file.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Filename", "Content"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in ErrorLogFiles",
				"tags": ["ErrorLogFiles"],
				"parameters": [
					{
						"name": "Filename",
						"in": "path",
						"required": true,
						"description": "The name of the error log file.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An error log file",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from ErrorLogFiles",
				"tags": ["ErrorLogFiles"],
				"parameters": [
					{
						"name": "Filename",
						"in": "path",
						"required": true,
						"description": "The name of the error log file.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteChore":
		{
			"post":
			{
				"summary": "Invoke action ExecuteChore",
				"description": "Runs a chore.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Chore":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore",
										"description": "Specifies the chore to be executed."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteCubeDrillthrough":
		{
			"post":
			{
				"summary": "Invoke action ExecuteCubeDrillthrough",
				"description": "Drill to the drillthrough process returned cube view.",
				"tags": ["Cellsets"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"DrillthroughProcess":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process",
										"description": "A process that returns a handle of a view."
									},
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessParameter"
										},
										"description": "Parameters used by the process."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteMDX":
		{
			"post":
			{
				"summary": "Invoke action ExecuteMDX",
				"description": "Runs an MDX expression at root level.",
				"tags": ["Cellsets"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"MDX":
									{
										"type": "string",
										"description": "A string value that represents your expression. Included in the POST body of the request."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Cellset"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteMDXSetExpression":
		{
			"post":
			{
				"summary": "Invoke action ExecuteMDXSetExpression",
				"description": "Runs an MDX set expression at root level.",
				"tags": ["MemberSets"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"MDX":
									{
										"type": "string",
										"description": "A string value that represents your expression. Included in the POST body of the request."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteProcess":
		{
			"post":
			{
				"summary": "Invoke action ExecuteProcess",
				"description": "Runs a process defined in Turbo Integrator.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Process":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process",
										"description": "Specifies the process.  \nThis value is not specified because it is obtained by the first parameter in the resource path specified in the URL of a POST operation."
									},
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.NameValuePair"
										},
										"description": "Override default values (numeric or string) defined in the model."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteProcessWithReturn":
		{
			"post":
			{
				"summary": "Invoke action ExecuteProcessWithReturn",
				"description": "Runs a process defined in Turbo Integrator and returns back the status.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Process":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process",
										"description": "Specifies the process.  \nThis value is not specified because it is obtained by the first parameter in the resource path specified in the URL of a POST operation."
									},
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.NameValuePair"
										},
										"description": "Override default values (numeric or string) defined in the model."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteResult"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ExecuteRelationalDrillthrough":
		{
			"post":
			{
				"summary": "Invoke action ExecuteRelationalDrillthrough",
				"description": "Drill to relational tables.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"DrillthroughProcess":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process",
										"description": "A process that returns a handle of a SQL or CSV table."
									},
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessParameter"
										},
										"description": "Parameters used by the process."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of DrillthroughRow",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.DrillthroughRow"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/GetOIDCKeys()":
		{
			"get":
			{
				"summary": "Invoke function GetOIDCKeys",
				"description": "Returns OIDC keys. Must be performed by a full admin.",
				"tags": ["Service Operations"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of String",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Groups":
		{
			"get":
			{
				"summary": "Get entities from Groups",
				"tags": ["Groups"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Users"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Group",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Groups",
				"tags": ["Groups"],
				"requestBody":
				{
					"required": true,
					"description": "A user group on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Group-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Groups('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Groups by key",
				"tags": ["Groups"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Users"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Groups",
				"tags": ["Groups"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A user group on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Group-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Groups",
				"tags": ["Groups"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Groups('{Name}')/Users":
		{
			"get":
			{
				"summary": "Get related Users",
				"tags": ["Groups", "Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "FriendlyName", "FriendlyName desc", "Password", "Password desc", "Type", "Type desc", "IsActive", "IsActive desc", "Enabled", "Enabled desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of User",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related User",
				"tags": ["Groups", "Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A user on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.User-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Loggers":
		{
			"get":
			{
				"summary": "Get entities from Loggers",
				"tags": ["Loggers"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Level", "Level desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Level"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Logger",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Logger"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Loggers",
				"tags": ["Loggers"],
				"requestBody":
				{
					"required": true,
					"description": "A logger to be configured for a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Logger-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Logger"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Loggers('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Loggers by key",
				"tags": ["Loggers"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the logger.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Level"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Logger"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Loggers",
				"tags": ["Loggers"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the logger.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A logger to be configured for a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Logger-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Loggers",
				"tags": ["Loggers"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the logger.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MemberSets":
		{
			"get":
			{
				"summary": "Get entities from MemberSets",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Ordinal desc", "Cardinality", "Cardinality desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Cardinality"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "Tuples"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of CellsetAxis",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to MemberSets",
				"tags": ["MemberSets"],
				"requestBody":
				{
					"required": true,
					"description": "New entity",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MemberSets({Ordinal})":
		{
			"get":
			{
				"summary": "Get entity from MemberSets by key",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Cardinality"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Hierarchies", "Tuples"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in MemberSets",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "New property values",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from MemberSets",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MemberSets({Ordinal})/Hierarchies":
		{
			"get":
			{
				"summary": "Get related Hierarchies",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "UniqueName", "UniqueName desc", "Cardinality", "Cardinality desc", "Structure", "Structure desc", "Visible", "Visible desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "UniqueName", "Cardinality", "Structure", "Visible", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Dimension", "Elements", "Edges", "Subsets", "PrivateSubsets", "SessionSubsets", "Members", "AllMember", "DefaultMember", "Levels", "LocalizedAttributes", "ElementAttributes", "SubsetAttributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Hierarchy",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MemberSets({Ordinal})/Tuples":
		{
			"get":
			{
				"summary": "Get related Tuples",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal", "Ordinal desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Ordinal"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Members"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of CellsetAxisTuple",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxisTuple"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related CellsetAxisTuple",
				"tags": ["MemberSets"],
				"parameters": [
					{
						"name": "Ordinal",
						"in": "path",
						"required": true,
						"description": "A number that identifies an entity's position in a series.",
						"schema":
						{
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "New entity",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxisTuple-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxisTuple"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MessageLog(Reverse='{Reverse}')":
		{
			"get":
			{
				"summary": "Invoke function MessageLog",
				"description": "Returns a collection of message log entries.  \nBy default, the most recent message log entry is returned first.",
				"tags": ["Service Operations"],
				"parameters": [
					{
						"name": "Reverse",
						"in": "path",
						"required": true,
						"description": "A Boolean that indicates whether to order message log entries chronologically as they occurred in time.",
						"schema":
						{
							"type": "boolean",
							"nullable": true
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of MessageLogEntry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.MessageLogEntry"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/MessageLogEntries":
		{
			"get":
			{
				"summary": "Get entities from MessageLogEntries",
				"tags": ["MessageLogEntries"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "ThreadID", "ThreadID desc", "SessionID", "SessionID desc", "Level", "Level desc", "TimeStamp", "TimeStamp desc", "Logger", "Logger desc", "Message", "Message desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ThreadID", "SessionID", "Level", "TimeStamp", "Logger", "Message"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of MessageLogEntry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.MessageLogEntry"
											}
										},
										"@odata.deltaLink":
										{
											"type": "string",
											"example": "/service-root/MessageLogEntries?$deltatoken=opaque server-generated token for fetching the delta"
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to MessageLogEntries",
				"tags": ["MessageLogEntries"],
				"requestBody":
				{
					"required": true,
					"description": "An entry in the message log.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MessageLogEntry-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.MessageLogEntry"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ModelCubes()":
		{
			"get":
			{
				"summary": "Invoke function ModelCubes",
				"description": "Returns only non-control cubes in the model.",
				"tags": ["Cubes"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Cube",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ModelDimensions()":
		{
			"get":
			{
				"summary": "Invoke function ModelDimensions",
				"description": "Returns only model dimensions.",
				"tags": ["Dimensions"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Dimension",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessAttributes":
		{
			"get":
			{
				"summary": "Get entities from ProcessAttributes",
				"tags": ["ProcessAttributes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Type", "Type desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of AttributeDefinition",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to ProcessAttributes",
				"tags": ["ProcessAttributes"],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessAttributes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from ProcessAttributes by key",
				"tags": ["ProcessAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Type"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in ProcessAttributes",
				"tags": ["ProcessAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "An interface to describe an attribute.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from ProcessAttributes",
				"tags": ["ProcessAttributes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the attribute.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts":
		{
			"get":
			{
				"summary": "Get entities from ProcessDebugContexts",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Status", "Status desc", "LastActivityDuration", "LastActivityDuration desc", "ObjectLocks", "ObjectLocks desc", "Result", "Result desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Status", "LastActivityDuration", "ObjectLocks", "Result"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "CurrentBreakpoint", "Process", "CallStack", "Breakpoints", "Thread"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessDebugContext",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to ProcessDebugContexts",
				"tags": ["ProcessDebugContexts"],
				"requestBody":
				{
					"required": true,
					"description": "A debug session of a TurboIntegrator process.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')":
		{
			"get":
			{
				"summary": "Get entity from ProcessDebugContexts by key",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Status", "LastActivityDuration", "ObjectLocks", "Result"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "CurrentBreakpoint", "Process", "CallStack", "Breakpoints", "Thread"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in ProcessDebugContexts",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A debug session of a TurboIntegrator process.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from ProcessDebugContexts",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/tm1.Continue":
		{
			"post":
			{
				"summary": "Invoke action Continue",
				"description": "Continues execution of a paused process debug context.",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/tm1.StepIn":
		{
			"post":
			{
				"summary": "Invoke action StepIn",
				"description": "Runs a single statement from the process.  \nIf that statement is an ExecuteProcess function call, pause at the first statement inside that process.",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/tm1.StepOut":
		{
			"post":
			{
				"summary": "Invoke action StepOut",
				"description": "Resumes execution and runs until the current process has finished.",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/tm1.StepOver":
		{
			"post":
			{
				"summary": "Invoke action StepOver",
				"description": "Runs a single statement from the process.  \nIf the statement is an ExecuteProcess function call, do not debug inside the function call.",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/CurrentBreakpoint":
		{
			"get":
			{
				"summary": "Get related ProcessDebugContextBreakpoint",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Enabled", "HitMode", "HitCount", "Expression"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessDebugContextBreakpoint",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/Process":
		{
			"get":
			{
				"summary": "Get related Process",
				"tags": ["ProcessDebugContexts", "Processes"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "HasSecurityAccess", "PrologProcedure", "MetadataProcedure", "DataProcedure", "EpilogProcedure", "DataSource", "Parameters", "Variables", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "LocalizedAttributes", "ErrorLogs"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Process",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/CallStack":
		{
			"get":
			{
				"summary": "Get related CallStack",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Procedure", "Procedure desc", "LineNumber", "LineNumber desc", "RecordNumber", "RecordNumber desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Procedure", "LineNumber", "RecordNumber"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Process", "Variables"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessDebugContextStackFrame",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStackFrame"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related ProcessDebugContextStackFrame",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A single frame in the execution stack.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStackFrame-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStackFrame"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/Breakpoints":
		{
			"get":
			{
				"summary": "Get related Breakpoints",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Enabled", "Enabled desc", "HitMode", "HitMode desc", "HitCount", "HitCount desc", "Expression", "Expression desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Enabled", "HitMode", "HitCount", "Expression"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessDebugContextBreakpoint",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related ProcessDebugContextBreakpoint",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A conditional expression that gets evaluated each time the breakpoint is hit. If the expression evaluates to true, execution is paused. Otherwise execution continues.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/ProcessDebugContexts('{ID}')/Thread":
		{
			"get":
			{
				"summary": "Get related Thread",
				"tags": ["ProcessDebugContexts"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Type", "Name", "Context", "State", "Function", "ObjectType", "ObjectName", "RLocks", "IXLocks", "WLocks", "ElapsedTime", "WaitTime", "Info"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Session"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Thread",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes":
		{
			"get":
			{
				"summary": "Get entities from Processes",
				"tags": ["Processes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "HasSecurityAccess", "HasSecurityAccess desc", "PrologProcedure", "PrologProcedure desc", "MetadataProcedure", "MetadataProcedure desc", "DataProcedure", "DataProcedure desc", "EpilogProcedure", "EpilogProcedure desc", "DataSource", "DataSource desc", "Parameters", "Parameters desc", "Variables", "Variables desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "HasSecurityAccess", "PrologProcedure", "MetadataProcedure", "DataProcedure", "EpilogProcedure", "DataSource", "Parameters", "Variables", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "LocalizedAttributes", "ErrorLogs"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Process",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Processes",
				"tags": ["Processes"],
				"requestBody":
				{
					"required": true,
					"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Processes by key",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "HasSecurityAccess", "PrologProcedure", "MetadataProcedure", "DataProcedure", "EpilogProcedure", "DataSource", "Parameters", "Variables", "Attributes"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "LocalizedAttributes", "ErrorLogs"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Processes",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Processes",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/tm1.Compile":
		{
			"post":
			{
				"summary": "Invoke action Compile",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessSyntaxError",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessSyntaxError"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/tm1.Debug":
		{
			"post":
			{
				"summary": "Invoke action Debug",
				"description": "Starts a debug session for a process defined in Turbo Integrator.",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.NameValuePair"
										},
										"description": "Override default values (numeric or string) defined in the model."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContext"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/tm1.Execute":
		{
			"post":
			{
				"summary": "Invoke action Execute",
				"description": "Runs a process defined in Turbo Integrator.",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.NameValuePair"
										},
										"description": "Override default values (numeric or string) defined in the model."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/tm1.ExecuteWithReturn":
		{
			"post":
			{
				"summary": "Invoke action ExecuteWithReturn",
				"description": "Runs a process defined in Turbo Integrator and returns back the status.",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Parameters":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.NameValuePair"
										},
										"description": "Override default values (numeric or string) defined in the model."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteResult"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/LocalizedAttributes":
		{
			"get":
			{
				"summary": "Get related LocalizedAttributes",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "LocaleID desc", "Attributes", "Attributes desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["LocaleID", "Attributes"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of LocalizedAttributes",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related LocalizedAttributes",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Processes('{Name}')/ErrorLogs":
		{
			"get":
			{
				"summary": "Get related ErrorLogs",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Timestamp", "Timestamp desc", "Content", "Content desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Timestamp", "Content"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of ProcessErrorLog",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessErrorLog"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related ProcessErrorLog",
				"tags": ["Processes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a TurboIntegrator process.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A process error log entry.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessErrorLog-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessErrorLog"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/RemoveOIDCKeyFromCache":
		{
			"post":
			{
				"summary": "Invoke action RemoveOIDCKeyFromCache",
				"description": "Removes OIDC key from server cache. Must be performed by a full admin.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"KeyId":
									{
										"type": "array",
										"items":
										{
											"type": "string"
										},
										"description": "Optional. The collection of keys to remove. If this parameter is omitted, all keys are removed."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/RotateDataModelKey":
		{
			"post":
			{
				"summary": "Invoke action RotateDataModelKey",
				"description": "Rotates the model key. Must be performed by a full admin.",
				"tags": ["Service Operations"],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/SQLDataSources":
		{
			"get":
			{
				"summary": "Get entities from SQLDataSources",
				"tags": ["SQLDataSources"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "Description", "Description desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Description"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of SQLDataSource",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLDataSource"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to SQLDataSources",
				"tags": ["SQLDataSources"],
				"requestBody":
				{
					"required": true,
					"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLDataSource-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLDataSource"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/SQLDataSources('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from SQLDataSources by key",
				"tags": ["SQLDataSources"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the SQL data source.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Description"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLDataSource"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in SQLDataSources",
				"tags": ["SQLDataSources"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the SQL data source.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLDataSource-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from SQLDataSources",
				"tags": ["SQLDataSources"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of the SQL data source.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes":
		{
			"get":
			{
				"summary": "Get entities from Sandboxes",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "IsLoaded", "IsLoaded desc", "IsActive", "IsActive desc", "IsQueued", "IsQueued desc", "IncludeInSandboxDimension", "IncludeInSandboxDimension desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "IsLoaded", "IsActive", "IsQueued", "IncludeInSandboxDimension"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Sandbox",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Sandboxes",
				"tags": ["Sandboxes"],
				"requestBody":
				{
					"required": true,
					"description": "A sandbox that allows you to work with your data without affecting your base.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Sandboxes by key",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "IsLoaded", "IsActive", "IsQueued", "IncludeInSandboxDimension"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Sandboxes",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A sandbox that allows you to work with your data without affecting your base.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Sandboxes",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')/tm1.DiscardChanges":
		{
			"post":
			{
				"summary": "Invoke action DiscardChanges",
				"description": "Resets the values in the sandbox back to the base.",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')/tm1.Load":
		{
			"post":
			{
				"summary": "Invoke action Load",
				"description": "Loads the sandbox into memory on the server.  \nThis action sets the IsLoaded property for Sandbox entity.",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')/tm1.Merge":
		{
			"post":
			{
				"summary": "Invoke action Merge",
				"description": "Merges the values of one sandbox with another.",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Target":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Sandbox",
										"description": "The sandbox target that you want to merge to."
									},
									"ConflictResolution":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ConflictResolution"
											}
										],
										"description": "An enumerated value that indicates whether to resolve conflicts using the source, target, or individually."
									},
									"AllowQueueing":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to allow queuing."
									},
									"CleanAfter":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to clean the sandbox after merging."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')/tm1.Publish":
		{
			"post":
			{
				"summary": "Invoke action Publish",
				"description": "Publishes the contents (values) of the sandbox back to base.  \nThe sandbox specified is still available for use and is left unchanged.",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"ConflictResolution":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.ConflictResolution"
											}
										],
										"description": "An enumerated value that indicates whether to resolve conflicts using the source, target, or individually."
									},
									"AllowQueueing":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to allow queuing."
									},
									"CleanAfter":
									{
										"type": "boolean",
										"nullable": true,
										"description": "A Boolean that indicates whether to clean the sandbox after merging."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sandboxes('{Name}')/tm1.Unload":
		{
			"post":
			{
				"summary": "Invoke action Unload",
				"description": "Unloads the sandbox from memory on the server.  \nThis action is useful for freeing up resources when they are no longer needed.",
				"tags": ["Sandboxes"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The name of a sandbox.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Server":
		{
			"get":
			{
				"summary": "Get Server",
				"tags": ["Server"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "ProductVersion", "PortNumber", "ClientMessagePortNumber", "HTTPPortNumber", "UsingSSL", "SecurityPackageName", "ServicePrincipalName", "IntegratedSecurityMode", "ClientCAMURI", "ClientPingCAMPassport"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Server"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update Server",
				"tags": ["Server"],
				"requestBody":
				{
					"required": true,
					"description": "A read-only collection of properties of the running server. Available without authenticating.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Server-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sessions":
		{
			"get":
			{
				"summary": "Get entities from Sessions",
				"tags": ["Sessions"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Context", "Context desc", "Active", "Active desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Session",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Sessions",
				"tags": ["Sessions"],
				"requestBody":
				{
					"required": true,
					"description": "Represents a unique user session with the server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sessions({ID})":
		{
			"get":
			{
				"summary": "Get entity from Sessions by key",
				"tags": ["Sessions"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Sessions",
				"tags": ["Sessions"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Represents a unique user session with the server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Sessions",
				"tags": ["Sessions"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sessions({ID})/tm1.Close":
		{
			"post":
			{
				"summary": "Invoke action Close",
				"description": "Closes the session.",
				"tags": ["Sessions"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sessions({ID})/User":
		{
			"get":
			{
				"summary": "Get related User",
				"tags": ["Sessions", "Users"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of User",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Sessions({ID})/Threads":
		{
			"get":
			{
				"summary": "Get related Threads",
				"tags": ["Sessions", "Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Type", "Type desc", "Name", "Name desc", "Context", "Context desc", "State", "State desc", "Function", "Function desc", "ObjectType", "ObjectType desc", "ObjectName", "ObjectName desc", "RLocks", "RLocks desc", "IXLocks", "IXLocks desc", "WLocks", "WLocks desc", "ElapsedTime", "ElapsedTime desc", "WaitTime", "WaitTime desc", "Info", "Info desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Type", "Name", "Context", "State", "Function", "ObjectType", "ObjectName", "RLocks", "IXLocks", "WLocks", "ElapsedTime", "WaitTime", "Info"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Session"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Thread",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Thread",
				"tags": ["Sessions", "Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "The ID uniquely identifying the session.",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A thread that can run queries concurrently on the TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/StaticConfiguration":
		{
			"get":
			{
				"summary": "Get StaticConfiguration",
				"tags": ["StaticConfiguration"],
				"parameters": [
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ServerName", "Access", "Administration", "Modelling", "Performance"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerSettings"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update StaticConfiguration",
				"tags": ["StaticConfiguration"],
				"requestBody":
				{
					"required": true,
					"description": "The settings for a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerSettings-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/TailMessageLog()":
		{
			"get":
			{
				"summary": "Invoke function TailMessageLog",
				"description": "Initiates change tracking on the message log.  \nInitiates change tracking on the message log and returns a delta link referencing the end of the message log as-is.",
				"tags": ["Service Operations"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"type": "string"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/TailTransactionLog()":
		{
			"get":
			{
				"summary": "Invoke function TailTransactionLog",
				"description": "Initiates change tracking on the transaction log.  \nInitiates change tracking on the transaction log and returns a delta link referencing the end of the transaction log as-is.",
				"tags": ["Service Operations"],
				"parameters": [],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"type": "string"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Threads":
		{
			"get":
			{
				"summary": "Get entities from Threads",
				"tags": ["Threads"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Type", "Type desc", "Name", "Name desc", "Context", "Context desc", "State", "State desc", "Function", "Function desc", "ObjectType", "ObjectType desc", "ObjectName", "ObjectName desc", "RLocks", "RLocks desc", "IXLocks", "IXLocks desc", "WLocks", "WLocks desc", "ElapsedTime", "ElapsedTime desc", "WaitTime", "WaitTime desc", "Info", "Info desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Type", "Name", "Context", "State", "Function", "ObjectType", "ObjectName", "RLocks", "IXLocks", "WLocks", "ElapsedTime", "WaitTime", "Info"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Session"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Thread",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Threads",
				"tags": ["Threads"],
				"requestBody":
				{
					"required": true,
					"description": "A thread that can run queries concurrently on the TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Threads({ID})":
		{
			"get":
			{
				"summary": "Get entity from Threads by key",
				"tags": ["Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Type", "Name", "Context", "State", "Function", "ObjectType", "ObjectName", "RLocks", "IXLocks", "WLocks", "ElapsedTime", "WaitTime", "Info"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Session"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Threads",
				"tags": ["Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A thread that can run queries concurrently on the TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Threads",
				"tags": ["Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Threads({ID})/tm1.CancelOperation":
		{
			"post":
			{
				"summary": "Invoke action CancelOperation",
				"description": "Cancels an operation.",
				"tags": ["Threads"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Threads({ID})/Session":
		{
			"get":
			{
				"summary": "Get related Session",
				"tags": ["Threads", "Sessions"],
				"parameters": [
					{
						"name": "ID",
						"in": "path",
						"required": true,
						"description": "key: ID",
						"schema":
						{
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"format": "int64",
							"example": "42"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Session",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/TransactionLog(Reverse='{Reverse}',IgnoreStatusMessages='{IgnoreStatusMessages}')":
		{
			"get":
			{
				"summary": "Invoke function TransactionLog",
				"description": "Returns a collection of transaction log entries.  \nBy default, the most recent transaction log entry is returned first.",
				"tags": ["Service Operations"],
				"parameters": [
					{
						"name": "Reverse",
						"in": "path",
						"required": true,
						"description": "A Boolean that indicates whether to order transaction log entries chronologically as they occurred in time.",
						"schema":
						{
							"type": "boolean",
							"nullable": true
						}
					},
					{
						"name": "IgnoreStatusMessages",
						"in": "path",
						"required": true,
						"description": "A Boolean that indicates whether to include or not include status messages in the translation log.",
						"schema":
						{
							"type": "boolean",
							"nullable": true
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Success",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of TransactionLogEntry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.TransactionLogEntry"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/TransactionLogEntries":
		{
			"get":
			{
				"summary": "Get entities from TransactionLogEntries",
				"tags": ["TransactionLogEntries"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "ChangeSetID", "ChangeSetID desc", "TimeStamp", "TimeStamp desc", "ReplicationTime", "ReplicationTime desc", "User", "User desc", "Cube", "Cube desc", "Tuple", "Tuple desc", "OldValue", "OldValue desc", "NewValue", "NewValue desc", "StatusMessage", "StatusMessage desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ChangeSetID", "TimeStamp", "ReplicationTime", "User", "Cube", "Tuple", "OldValue", "NewValue", "StatusMessage"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of TransactionLogEntry",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.TransactionLogEntry"
											}
										},
										"@odata.deltaLink":
										{
											"type": "string",
											"example": "/service-root/TransactionLogEntries?$deltatoken=opaque server-generated token for fetching the delta"
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to TransactionLogEntries",
				"tags": ["TransactionLogEntries"],
				"requestBody":
				{
					"required": true,
					"description": "An entry in the transaction log.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TransactionLogEntry-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.TransactionLogEntry"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/UndoChangeSet":
		{
			"post":
			{
				"summary": "Invoke action UndoChangeSet",
				"description": "Reverts a change set.  \nDeleting the change set effectively removes all changes made to-date by the session.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"ChangeSetID":
									{
										"type": "string",
										"description": "The ID of the change set to revert."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Update":
		{
			"post":
			{
				"summary": "Invoke action Update",
				"description": "Applies updates to a cube, a slice of a cube, or cells of a cube, depending on the value of the parameters provided.",
				"tags": ["Service Operations"],
				"requestBody":
				{
					"description": "Action parameters",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"type": "object",
								"properties":
								{
									"Cube":
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube",
										"description": "The cube targeted by the update, specified in the resource path of the URL."
									},
									"Slice":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "The slice of the cube targeted by the update."
									},
									"Cells":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.CellDescriptor"
										},
										"description": "The cells of the cube targeted by the update."
									},
									"ReferenceCube":
									{
										"nullable": true,
										"anyOf": [
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
											}
										],
										"description": "The cube containing the source data required by the spreading command."
									},
									"ReferenceCell":
									{
										"type": "array",
										"items":
										{
											"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
										},
										"description": "The cell containing the source data required by the spreading command."
									},
									"Value":
									{
										"type": "string",
										"description": "The actual value, typically a spreading command, with which the cell is updated."
									}
								}
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Users":
		{
			"get":
			{
				"summary": "Get entities from Users",
				"tags": ["Users"],
				"parameters": [
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc", "FriendlyName", "FriendlyName desc", "Password", "Password desc", "Type", "Type desc", "IsActive", "IsActive desc", "Enabled", "Enabled desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of User",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add new entity to Users",
				"tags": ["Users"],
				"requestBody":
				{
					"required": true,
					"description": "A user on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.User-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Users('{Name}')":
		{
			"get":
			{
				"summary": "Get entity from Users by key",
				"tags": ["Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "FriendlyName", "Password", "Type", "IsActive", "Enabled"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Groups", "Sessions"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"patch":
			{
				"summary": "Update entity in Users",
				"tags": ["Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A user on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.User-update"
							}
						}
					}
				},
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"delete":
			{
				"summary": "Delete entity from Users",
				"tags": ["Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"name": "If-Match",
						"in": "header",
						"description": "ETag",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Users('{Name}')/tm1.Disconnect":
		{
			"post":
			{
				"summary": "Invoke action Disconnect",
				"description": "Disconnects a user but lets threads that are active continue to run until they are done.",
				"tags": ["Users"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"responses":
				{
					"204":
					{
						"description": "Success"
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Users('{Name}')/Groups":
		{
			"get":
			{
				"summary": "Get related Groups",
				"tags": ["Users", "Groups"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name", "Name desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["Name"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "Users"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Group",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Group",
				"tags": ["Users", "Groups"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "A user group on a TM1 server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Group-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/Users('{Name}')/Sessions":
		{
			"get":
			{
				"summary": "Get related Sessions",
				"tags": ["Users", "Sessions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/top"
					},
					{
						"$ref": "#/components/parameters/skip"
					},
					{
						"$ref": "#/components/parameters/search"
					},
					{
						"name": "$filter",
						"in": "query",
						"description": "Filter items by property values, see [OData Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
						"schema":
						{
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/count"
					},
					{
						"name": "$orderby",
						"in": "query",
						"description": "Order items by property values, see [OData Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "ID desc", "Context", "Context desc", "Active", "Active desc"]
							}
						}
					},
					{
						"name": "$select",
						"in": "query",
						"description": "Select properties to be returned, see [OData Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["ID", "Context", "Active"]
							}
						}
					},
					{
						"name": "$expand",
						"in": "query",
						"description": "Expand related entities, see [OData Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
						"explode": false,
						"schema":
						{
							"type": "array",
							"uniqueItems": true,
							"items":
							{
								"type": "string",
								"enum": ["*", "User", "Threads"]
							}
						}
					}
				],
				"responses":
				{
					"200":
					{
						"description": "Retrieved entities",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"title": "Collection of Session",
									"type": "object",
									"properties":
									{
										"value":
										{
											"type": "array",
											"items":
											{
												"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
											}
										}
									}
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			},
			"post":
			{
				"summary": "Add related Session",
				"tags": ["Users", "Sessions"],
				"parameters": [
					{
						"name": "Name",
						"in": "path",
						"required": true,
						"description": "The unique name of the user.",
						"schema":
						{
							"type": "string"
						}
					}
				],
				"requestBody":
				{
					"required": true,
					"description": "Represents a unique user session with the server.",
					"content":
					{
						"application/json":
						{
							"schema":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-create"
							}
						}
					}
				},
				"responses":
				{
					"201":
					{
						"description": "Created entity",
						"content":
						{
							"application/json":
							{
								"schema":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
								}
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		},
		"/$batch":
		{
			"post":
			{
				"summary": "Send a group of requests",
				"description": "Group multiple requests into a single request payload, see [OData Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
				"tags": ["Batch Requests"],
				"requestBody":
				{
					"required": true,
					"description": "Batch request",
					"content":
					{
						"multipart/mixed;boundary=request-separator":
						{
							"schema":
							{
								"type": "string"
							},
							"example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Annotations HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
						}
					}
				},
				"responses":
				{
					"202":
					{
						"description": "Batch response",
						"content":
						{
							"multipart/mixed":
							{
								"schema":
								{
									"type": "string"
								},
								"example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
							}
						}
					},
					"default":
					{
						"$ref": "#/components/responses/error"
					}
				}
			}
		}
	},
	"components":
	{
		"schemas":
		{
			"ibm.tm1.api.v1.AccessSettings":
			{
				"type": "object",
				"properties":
				{
					"Network":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.NetworkSettings"
							}
						]
					},
					"Authentication":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuthenticationSettings"
							}
						]
					},
					"SSL":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SSLSettings"
							}
						]
					},
					"CAM":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAMSettings"
							}
						]
					},
					"LDAP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LDAPSettings"
							}
						]
					},
					"CAPI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAPISettings"
							}
						]
					},
					"HTTP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.HTTPSettings"
							}
						]
					}
				},
				"title": "AccessSettings"
			},
			"ibm.tm1.api.v1.AccessSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Network":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.NetworkSettings-create"
							}
						]
					},
					"Authentication":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuthenticationSettings-create"
							}
						]
					},
					"SSL":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SSLSettings-create"
							}
						]
					},
					"CAM":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAMSettings-create"
							}
						]
					},
					"LDAP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LDAPSettings-create"
							}
						]
					},
					"CAPI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAPISettings-create"
							}
						]
					},
					"HTTP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.HTTPSettings-create"
							}
						]
					}
				},
				"title": "AccessSettings (for create)"
			},
			"ibm.tm1.api.v1.AccessSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Network":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.NetworkSettings-update"
							}
						]
					},
					"Authentication":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuthenticationSettings-update"
							}
						]
					},
					"SSL":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SSLSettings-update"
							}
						]
					},
					"CAM":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAMSettings-update"
							}
						]
					},
					"LDAP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LDAPSettings-update"
							}
						]
					},
					"CAPI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CAPISettings-update"
							}
						]
					},
					"HTTP":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.HTTPSettings-update"
							}
						]
					}
				},
				"title": "AccessSettings (for update)"
			},
			"ibm.tm1.api.v1.AdministrationSettings":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"nullable": true
					},
					"AdminHost":
					{
						"type": "string",
						"nullable": true
					},
					"Language":
					{
						"type": "string",
						"nullable": true
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaskUserNameInServerTools":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllowReadOnlyChoreReschedule":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true
					},
					"RunningInBackground":
					{
						"type": "boolean",
						"nullable": true
					},
					"StartupChores":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PerformanceMonitorOn":
					{
						"type": "boolean",
						"nullable": true
					},
					"PerfMonActive":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableSandboxDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"Clients":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ClientSettings"
							}
						]
					},
					"AuditLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuditLogSettings"
							}
						]
					},
					"DebugLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.DebugLogSettings"
							}
						]
					},
					"ServerLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerLogSettings"
							}
						]
					},
					"EventLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.EventLogSettings"
							}
						]
					},
					"TopLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopLogSettings"
							}
						]
					},
					"Java":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JavaSettings"
							}
						]
					},
					"ExternalDatabase":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ExternalDatabaseSettings"
							}
						]
					},
					"TM1Web":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TM1WebSettings"
							}
						]
					},
					"FileRetry":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FileRetrySettings"
							}
						]
					},
					"DownTime":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "AdministrationSettings"
			},
			"ibm.tm1.api.v1.AdministrationSettings-create":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"nullable": true
					},
					"AdminHost":
					{
						"type": "string",
						"nullable": true
					},
					"Language":
					{
						"type": "string",
						"nullable": true
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaskUserNameInServerTools":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllowReadOnlyChoreReschedule":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true
					},
					"RunningInBackground":
					{
						"type": "boolean",
						"nullable": true
					},
					"StartupChores":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PerformanceMonitorOn":
					{
						"type": "boolean",
						"nullable": true
					},
					"PerfMonActive":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableSandboxDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"Clients":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ClientSettings-create"
							}
						]
					},
					"AuditLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuditLogSettings-create"
							}
						]
					},
					"DebugLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.DebugLogSettings-create"
							}
						]
					},
					"ServerLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerLogSettings-create"
							}
						]
					},
					"EventLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.EventLogSettings-create"
							}
						]
					},
					"TopLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopLogSettings-create"
							}
						]
					},
					"Java":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JavaSettings-create"
							}
						]
					},
					"ExternalDatabase":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ExternalDatabaseSettings-create"
							}
						]
					},
					"TM1Web":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TM1WebSettings-create"
							}
						]
					},
					"FileRetry":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FileRetrySettings-create"
							}
						]
					},
					"DownTime":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "AdministrationSettings (for create)"
			},
			"ibm.tm1.api.v1.AdministrationSettings-update":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"nullable": true
					},
					"AdminHost":
					{
						"type": "string",
						"nullable": true
					},
					"Language":
					{
						"type": "string",
						"nullable": true
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaskUserNameInServerTools":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllowReadOnlyChoreReschedule":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true
					},
					"RunningInBackground":
					{
						"type": "boolean",
						"nullable": true
					},
					"StartupChores":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PerformanceMonitorOn":
					{
						"type": "boolean",
						"nullable": true
					},
					"PerfMonActive":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableSandboxDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"Clients":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ClientSettings-update"
							}
						]
					},
					"AuditLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AuditLogSettings-update"
							}
						]
					},
					"DebugLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.DebugLogSettings-update"
							}
						]
					},
					"ServerLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ServerLogSettings-update"
							}
						]
					},
					"EventLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.EventLogSettings-update"
							}
						]
					},
					"TopLog":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopLogSettings-update"
							}
						]
					},
					"Java":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JavaSettings-update"
							}
						]
					},
					"ExternalDatabase":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ExternalDatabaseSettings-update"
							}
						]
					},
					"TM1Web":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TM1WebSettings-update"
							}
						]
					},
					"FileRetry":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FileRetrySettings-update"
							}
						]
					},
					"DownTime":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "AdministrationSettings (for update)"
			},
			"ibm.tm1.api.v1.Annotation":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "The ID of the annotation."
					},
					"Text":
					{
						"type": "string",
						"nullable": true,
						"description": "The text of the annotation."
					},
					"Creator":
					{
						"type": "string",
						"nullable": true,
						"description": "The creator of the annotation."
					},
					"Created":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date that the annotation was created."
					},
					"LastUpdatedBy":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the element that updated the annotation."
					},
					"LastUpdated":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time value of the last update of this annotation, with a time zone offset."
					},
					"ApplicationContext":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue"
						},
						"description": "An interface to the collection of configuration information for the annotation."
					},
					"DimensionalContext":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
						},
						"description": "An interface to the collection of dimensions for the annotation."
					},
					"Attachments":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Attachment"
						},
						"description": "Attached documents that provide details and background."
					}
				},
				"title": "Annotation",
				"description": "An element that represents a single annotation.  \nAn annotation applies a term to a model element and defines how to calculate a value for the term application."
			},
			"ibm.tm1.api.v1.Annotation-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "The ID of the annotation."
					},
					"Text":
					{
						"type": "string",
						"nullable": true,
						"description": "The text of the annotation."
					},
					"Creator":
					{
						"type": "string",
						"nullable": true,
						"description": "The creator of the annotation."
					},
					"Created":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date that the annotation was created."
					},
					"LastUpdatedBy":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the element that updated the annotation."
					},
					"LastUpdated":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time value of the last update of this annotation, with a time zone offset."
					},
					"ApplicationContext":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue-create"
						},
						"description": "An interface to the collection of configuration information for the annotation."
					},
					"DimensionalContext":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
						},
						"description": "An interface to the collection of dimensions for the annotation."
					},
					"Attachments":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Attachment-create"
						},
						"description": "Attached documents that provide details and background."
					}
				},
				"required": ["ID"],
				"title": "Annotation (for create)",
				"description": "An element that represents a single annotation.  \nAn annotation applies a term to a model element and defines how to calculate a value for the term application."
			},
			"ibm.tm1.api.v1.Annotation-update":
			{
				"type": "object",
				"properties":
				{
					"Text":
					{
						"type": "string",
						"nullable": true,
						"description": "The text of the annotation."
					},
					"Creator":
					{
						"type": "string",
						"nullable": true,
						"description": "The creator of the annotation."
					},
					"Created":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date that the annotation was created."
					},
					"LastUpdatedBy":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the element that updated the annotation."
					},
					"LastUpdated":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time value of the last update of this annotation, with a time zone offset."
					}
				},
				"title": "Annotation (for update)",
				"description": "An element that represents a single annotation.  \nAn annotation applies a term to a model element and defines how to calculate a value for the term application."
			},
			"ibm.tm1.api.v1.ApplicationContextFacet":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the application context facet."
					},
					"Values":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue"
						},
						"description": "The value of the application context facet, see ApplicationContextFacetValue."
					}
				},
				"title": "ApplicationContextFacet",
				"description": "The facet of the application context."
			},
			"ibm.tm1.api.v1.ApplicationContextFacet-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the application context facet."
					},
					"Values":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacetValue-create"
						},
						"description": "The value of the application context facet, see ApplicationContextFacetValue."
					}
				},
				"required": ["Name"],
				"title": "ApplicationContextFacet (for create)",
				"description": "The facet of the application context."
			},
			"ibm.tm1.api.v1.ApplicationContextFacet-update":
			{
				"type": "object",
				"title": "ApplicationContextFacet (for update)",
				"description": "The facet of the application context."
			},
			"ibm.tm1.api.v1.ApplicationContextFacetValue":
			{
				"type": "object",
				"properties":
				{
					"Value":
					{
						"type": "string",
						"description": "The application context facet value."
					},
					"Facet":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet"
							}
						],
						"description": "The description of the application context facet value, see also ApplicationContextFacet."
					}
				},
				"title": "ApplicationContextFacetValue",
				"description": "A value for a facet of the application context."
			},
			"ibm.tm1.api.v1.ApplicationContextFacetValue-create":
			{
				"type": "object",
				"properties":
				{
					"Value":
					{
						"type": "string",
						"description": "The application context facet value."
					},
					"Facet":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ApplicationContextFacet-create"
							}
						],
						"description": "The description of the application context facet value, see also ApplicationContextFacet."
					}
				},
				"required": ["Value"],
				"title": "ApplicationContextFacetValue (for create)",
				"description": "A value for a facet of the application context."
			},
			"ibm.tm1.api.v1.ApplicationContextFacetValue-update":
			{
				"type": "object",
				"title": "ApplicationContextFacetValue (for update)",
				"description": "A value for a facet of the application context."
			},
			"ibm.tm1.api.v1.Attachment":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the attachment."
					},
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the attachment."
					},
					"ContentType":
					{
						"type": "string",
						"nullable": true,
						"description": "The type of content in the attachment."
					},
					"Size":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The size of the attachment."
					}
				},
				"title": "Attachment",
				"description": "An attached document that provides details and background."
			},
			"ibm.tm1.api.v1.Attachment-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the attachment."
					},
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the attachment."
					},
					"ContentType":
					{
						"type": "string",
						"nullable": true,
						"description": "The type of content in the attachment."
					},
					"Size":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The size of the attachment."
					}
				},
				"required": ["Name"],
				"title": "Attachment (for create)",
				"description": "An attached document that provides details and background."
			},
			"ibm.tm1.api.v1.Attachment-update":
			{
				"type": "object",
				"properties":
				{
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the attachment."
					},
					"ContentType":
					{
						"type": "string",
						"nullable": true,
						"description": "The type of content in the attachment."
					},
					"Size":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The size of the attachment."
					}
				},
				"title": "Attachment (for update)",
				"description": "An attached document that provides details and background."
			},
			"ibm.tm1.api.v1.AttributeDefinition":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the attribute."
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeType",
						"description": "The type of the attribute."
					}
				},
				"title": "AttributeDefinition",
				"description": "An interface to describe an attribute."
			},
			"ibm.tm1.api.v1.AttributeDefinition-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the attribute."
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeType",
						"description": "The type of the attribute."
					}
				},
				"required": ["Name"],
				"title": "AttributeDefinition (for create)",
				"description": "An interface to describe an attribute."
			},
			"ibm.tm1.api.v1.AttributeDefinition-update":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeType",
						"description": "The type of the attribute."
					}
				},
				"title": "AttributeDefinition (for update)",
				"description": "An interface to describe an attribute."
			},
			"ibm.tm1.api.v1.AttributeType":
			{
				"type": "string",
				"enum": ["Numeric", "String", "Alias"],
				"title": "AttributeType"
			},
			"ibm.tm1.api.v1.Attributes":
			{
				"type": "object",
				"properties":
				{
					"Caption":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "Attributes"
			},
			"ibm.tm1.api.v1.Attributes-create":
			{
				"type": "object",
				"properties":
				{
					"Caption":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "Attributes (for create)"
			},
			"ibm.tm1.api.v1.Attributes-update":
			{
				"type": "object",
				"properties":
				{
					"Caption":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "Attributes (for update)"
			},
			"ibm.tm1.api.v1.AuditLogSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"UpdateInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"MaxFileSizeKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaxQueryMemoryKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					}
				},
				"title": "AuditLogSettings"
			},
			"ibm.tm1.api.v1.AuditLogSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"UpdateInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"MaxFileSizeKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaxQueryMemoryKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					}
				},
				"title": "AuditLogSettings (for create)"
			},
			"ibm.tm1.api.v1.AuditLogSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"UpdateInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"MaxFileSizeKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaxQueryMemoryKilobytes":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					}
				},
				"title": "AuditLogSettings (for update)"
			},
			"ibm.tm1.api.v1.AuthenticationSettings":
			{
				"type": "object",
				"properties":
				{
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						]
					},
					"MaximumLoginAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "AuthenticationSettings"
			},
			"ibm.tm1.api.v1.AuthenticationSettings-create":
			{
				"type": "object",
				"properties":
				{
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						]
					},
					"MaximumLoginAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "AuthenticationSettings (for create)"
			},
			"ibm.tm1.api.v1.AuthenticationSettings-update":
			{
				"type": "object",
				"properties":
				{
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						]
					},
					"MaximumLoginAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "AuthenticationSettings (for update)"
			},
			"ibm.tm1.api.v1.CAMSettings":
			{
				"type": "object",
				"properties":
				{
					"CAMUseSSL":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientURI":
					{
						"type": "string",
						"nullable": true
					},
					"ServerURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PortalVariableFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ServerCAMURIRetryAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CreateNewCAMClients":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "CAMSettings"
			},
			"ibm.tm1.api.v1.CAMSettings-create":
			{
				"type": "object",
				"properties":
				{
					"CAMUseSSL":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientURI":
					{
						"type": "string",
						"nullable": true
					},
					"ServerURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PortalVariableFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ServerCAMURIRetryAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CreateNewCAMClients":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "CAMSettings (for create)"
			},
			"ibm.tm1.api.v1.CAMSettings-update":
			{
				"type": "object",
				"properties":
				{
					"CAMUseSSL":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientURI":
					{
						"type": "string",
						"nullable": true
					},
					"ServerURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"PortalVariableFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ServerCAMURIRetryAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CreateNewCAMClients":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "CAMSettings (for update)"
			},
			"ibm.tm1.api.v1.CAPISettings":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientMessagePort":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MessageCompression":
					{
						"type": "boolean",
						"nullable": true
					},
					"ProgressMessage":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientVersionMaximum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionMinimum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionPrecision":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "CAPISettings"
			},
			"ibm.tm1.api.v1.CAPISettings-create":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientMessagePort":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MessageCompression":
					{
						"type": "boolean",
						"nullable": true
					},
					"ProgressMessage":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientVersionMaximum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionMinimum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionPrecision":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "CAPISettings (for create)"
			},
			"ibm.tm1.api.v1.CAPISettings-update":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientMessagePort":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MessageCompression":
					{
						"type": "boolean",
						"nullable": true
					},
					"ProgressMessage":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientVersionMaximum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionMinimum":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientVersionPrecision":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "CAPISettings (for update)"
			},
			"ibm.tm1.api.v1.CalculationComponent":
			{
				"type": "object",
				"properties":
				{
					"Cube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
							}
						],
						"description": "Cube containing the cell that is a component of the calculation."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "Coordinates of the cell that is a component of the calculation."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationType"
							}
						],
						"description": "The type of calculation (consolidation or rule-driven) that populates this cell."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of this cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The rule statement that populates this cell."
					},
					"Components":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationComponent"
						},
						"description": "The set of components that determine the value of this cell."
					}
				},
				"title": "CalculationComponent"
			},
			"ibm.tm1.api.v1.CalculationComponent-create":
			{
				"type": "object",
				"properties":
				{
					"Cube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
							}
						],
						"description": "Cube containing the cell that is a component of the calculation."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "Coordinates of the cell that is a component of the calculation."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationType"
							}
						],
						"description": "The type of calculation (consolidation or rule-driven) that populates this cell."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of this cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The rule statement that populates this cell."
					},
					"Components":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationComponent-create"
						},
						"description": "The set of components that determine the value of this cell."
					}
				},
				"title": "CalculationComponent (for create)"
			},
			"ibm.tm1.api.v1.CalculationComponent-update":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationType"
							}
						],
						"description": "The type of calculation (consolidation or rule-driven) that populates this cell."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of this cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The rule statement that populates this cell."
					},
					"Components":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CalculationComponent-update"
						},
						"description": "The set of components that determine the value of this cell."
					}
				},
				"title": "CalculationComponent (for update)"
			},
			"ibm.tm1.api.v1.CalculationType":
			{
				"type": "string",
				"enum": ["Simple", "Consolidation", "Rule"],
				"title": "CalculationType"
			},
			"ibm.tm1.api.v1.CellDescriptor":
			{
				"type": "object",
				"properties":
				{
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						}
					}
				},
				"title": "CellDescriptor"
			},
			"ibm.tm1.api.v1.CellDescriptor-create":
			{
				"type": "object",
				"properties":
				{
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						}
					}
				},
				"title": "CellDescriptor (for create)"
			},
			"ibm.tm1.api.v1.CellDescriptor-update":
			{
				"type": "object",
				"title": "CellDescriptor (for update)"
			},
			"ibm.tm1.api.v1.CellStatus":
			{
				"type": "string",
				"enum": ["Null", "Data", "Error"],
				"title": "CellStatus"
			},
			"ibm.tm1.api.v1.Cellset":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received."
					},
					"Cube":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube",
						"description": "The contents of the cellset."
					},
					"Axes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis"
						},
						"description": "A collection of axes for the cellset."
					},
					"Cells":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell"
						},
						"description": "Individual cell value that makes up part of the cellset."
					}
				},
				"title": "Cellset",
				"description": "The result of an execution of a view or an MDX expression.  \nA cellset represents a snapshot of your data at a certain point in time. You can use the cellset ID within a session instead of running a view or MDX multiple times. Running a view or MDX expression multiple times can yield different results each time and can have an impact on memory resources. When operations on a cellset have completed, you should delete the cellset if you are not ending the session. When a session ends, the cellset is deleted automatically."
			},
			"ibm.tm1.api.v1.Cellset-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "Read-only property that provides a unique identifier for the cellset for the current session.  \nThe ID does not persist outside of a session because a cellset is transient. You cannot depend on the ID being consistent. If you try to access a cellset by using a previous ID value after the session has ended or when the cellset has been deleted, an error is received."
					},
					"Cube":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create",
						"description": "The contents of the cellset."
					},
					"Axes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxis-create"
						},
						"description": "A collection of axes for the cellset."
					},
					"Cells":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetCell-create"
						},
						"description": "Individual cell value that makes up part of the cellset."
					}
				},
				"required": ["ID"],
				"title": "Cellset (for create)",
				"description": "The result of an execution of a view or an MDX expression.  \nA cellset represents a snapshot of your data at a certain point in time. You can use the cellset ID within a session instead of running a view or MDX multiple times. Running a view or MDX expression multiple times can yield different results each time and can have an impact on memory resources. When operations on a cellset have completed, you should delete the cellset if you are not ending the session. When a session ends, the cellset is deleted automatically."
			},
			"ibm.tm1.api.v1.Cellset-update":
			{
				"type": "object",
				"title": "Cellset (for update)",
				"description": "The result of an execution of a view or an MDX expression.  \nA cellset represents a snapshot of your data at a certain point in time. You can use the cellset ID within a session instead of running a view or MDX multiple times. Running a view or MDX expression multiple times can yield different results each time and can have an impact on memory resources. When operations on a cellset have completed, you should delete the cellset if you are not ending the session. When a session ends, the cellset is deleted automatically."
			},
			"ibm.tm1.api.v1.CellsetAxis":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"type": "integer",
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the cellset axis."
					},
					"Hierarchies":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
						},
						"description": "A collection of hierarchies for this cellset axis."
					},
					"Tuples":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxisTuple"
						},
						"description": "A collection of tuples for this cellset axis."
					}
				},
				"title": "CellsetAxis"
			},
			"ibm.tm1.api.v1.CellsetAxis-create":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"type": "integer",
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the cellset axis."
					},
					"Hierarchies":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create"
						},
						"description": "A collection of hierarchies for this cellset axis."
					},
					"Tuples":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.CellsetAxisTuple-create"
						},
						"description": "A collection of tuples for this cellset axis."
					}
				},
				"required": ["Ordinal"],
				"title": "CellsetAxis (for create)"
			},
			"ibm.tm1.api.v1.CellsetAxis-update":
			{
				"type": "object",
				"properties":
				{
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the cellset axis."
					}
				},
				"title": "CellsetAxis (for update)"
			},
			"ibm.tm1.api.v1.CellsetAxisTuple":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"type": "integer",
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.TupleMember"
						},
						"description": "A collection of members that make up this cellset axis."
					}
				},
				"title": "CellsetAxisTuple"
			},
			"ibm.tm1.api.v1.CellsetAxisTuple-create":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"type": "integer",
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.TupleMember-create"
						},
						"description": "A collection of members that make up this cellset axis."
					}
				},
				"required": ["Ordinal"],
				"title": "CellsetAxisTuple (for create)"
			},
			"ibm.tm1.api.v1.CellsetAxisTuple-update":
			{
				"type": "object",
				"title": "CellsetAxisTuple (for update)"
			},
			"ibm.tm1.api.v1.CellsetCell":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "A number that identifies an entity's position in a series."
					},
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.CellStatus",
						"description": "The status of the cell, that is, NULL, DATA, or ERROR."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of the cell in the cellset."
					},
					"FormatString":
					{
						"type": "string",
						"nullable": true,
						"description": "The format of the cell in the cellset."
					},
					"FormattedValue":
					{
						"type": "string",
						"nullable": true,
						"description": "The formatted value of the cell in the cellset."
					},
					"Updateable":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that indicates whether the cell is updateable."
					},
					"RuleDerived":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is rule derived."
					},
					"Annotated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is annotated."
					},
					"Consolidated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is consolidated."
					},
					"NullIntersected":
					{
						"type": "boolean",
						"nullable": true
					},
					"Language":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The language of the value of the cell."
					},
					"HasPicklist":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the value of the cell can be selected from a drop-down list."
					},
					"PicklistValues":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The collection of available values that can be selected from the drop-down list."
					},
					"HasDrillthrough":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether drill-through scripts are defined on the cell."
					},
					"DrillthroughScripts":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough"
						},
						"description": "The collection of drill throughs."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
						},
						"description": "A collection of all members that represent the location, the tuple if you will, of this cell in the cube. Using the cellset's Cells property and expending this Members property effectively returns the flattened cellset."
					}
				},
				"title": "CellsetCell",
				"description": "A cell in a cellset."
			},
			"ibm.tm1.api.v1.CellsetCell-create":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "A number that identifies an entity's position in a series."
					},
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.CellStatus",
						"description": "The status of the cell, that is, NULL, DATA, or ERROR."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of the cell in the cellset."
					},
					"FormatString":
					{
						"type": "string",
						"nullable": true,
						"description": "The format of the cell in the cellset."
					},
					"FormattedValue":
					{
						"type": "string",
						"nullable": true,
						"description": "The formatted value of the cell in the cellset."
					},
					"Updateable":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that indicates whether the cell is updateable."
					},
					"RuleDerived":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is rule derived."
					},
					"Annotated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is annotated."
					},
					"Consolidated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is consolidated."
					},
					"NullIntersected":
					{
						"type": "boolean",
						"nullable": true
					},
					"Language":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The language of the value of the cell."
					},
					"HasPicklist":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the value of the cell can be selected from a drop-down list."
					},
					"PicklistValues":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The collection of available values that can be selected from the drop-down list."
					},
					"HasDrillthrough":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether drill-through scripts are defined on the cell."
					},
					"DrillthroughScripts":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough-create"
						},
						"description": "The collection of drill throughs."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
						},
						"description": "A collection of all members that represent the location, the tuple if you will, of this cell in the cube. Using the cellset's Cells property and expending this Members property effectively returns the flattened cellset."
					}
				},
				"required": ["Ordinal"],
				"title": "CellsetCell (for create)",
				"description": "A cell in a cellset."
			},
			"ibm.tm1.api.v1.CellsetCell-update":
			{
				"type": "object",
				"properties":
				{
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.CellStatus",
						"description": "The status of the cell, that is, NULL, DATA, or ERROR."
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The value of the cell in the cellset."
					},
					"FormatString":
					{
						"type": "string",
						"nullable": true,
						"description": "The format of the cell in the cellset."
					},
					"FormattedValue":
					{
						"type": "string",
						"nullable": true,
						"description": "The formatted value of the cell in the cellset."
					},
					"Updateable":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that indicates whether the cell is updateable."
					},
					"RuleDerived":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is rule derived."
					},
					"Annotated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is annotated."
					},
					"Consolidated":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the cell is consolidated."
					},
					"NullIntersected":
					{
						"type": "boolean",
						"nullable": true
					},
					"Language":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The language of the value of the cell."
					},
					"HasPicklist":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the value of the cell can be selected from a drop-down list."
					},
					"PicklistValues":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "The collection of available values that can be selected from the drop-down list."
					},
					"HasDrillthrough":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether drill-through scripts are defined on the cell."
					}
				},
				"title": "CellsetCell (for update)",
				"description": "A cell in a cellset."
			},
			"ibm.tm1.api.v1.CellsetUpdate":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42"
					},
					"Value":
					{
						"type": "string"
					},
					"ReferenceCube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
							}
						]
					},
					"ReferenceCell":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						}
					}
				},
				"title": "CellsetUpdate",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.CellsetUpdate-create":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42"
					},
					"Value":
					{
						"type": "string"
					},
					"ReferenceCube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
							}
						]
					},
					"ReferenceCell":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						}
					}
				},
				"title": "CellsetUpdate (for create)",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.CellsetUpdate-update":
			{
				"type": "object",
				"properties":
				{
					"Ordinal":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42"
					},
					"Value":
					{
						"type": "string"
					}
				},
				"title": "CellsetUpdate (for update)",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.Chore":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the chore."
					},
					"StartTime":
					{
						"type": "string",
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The start time of the chore."
					},
					"DSTSensitive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore start time is sensitive to daily savings time."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore is active."
					},
					"ExecutionMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreExecutionMode",
						"description": "The execution mode of the chore, that is, single or multiple commit."
					},
					"Frequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The frequency of the chore."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the chore."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the chore."
					},
					"Tasks":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTask"
						},
						"description": "A collection of tasks that make up the chore."
					}
				},
				"title": "Chore",
				"description": "Objects that execute one or more processes of TM1 at a user-defined frequency."
			},
			"ibm.tm1.api.v1.Chore-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the chore."
					},
					"StartTime":
					{
						"type": "string",
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The start time of the chore."
					},
					"DSTSensitive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore start time is sensitive to daily savings time."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore is active."
					},
					"ExecutionMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreExecutionMode",
						"description": "The execution mode of the chore, that is, single or multiple commit."
					},
					"Frequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The frequency of the chore."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the chore."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the chore."
					},
					"Tasks":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTask-create"
						},
						"description": "A collection of tasks that make up the chore."
					}
				},
				"required": ["Name"],
				"title": "Chore (for create)",
				"description": "Objects that execute one or more processes of TM1 at a user-defined frequency."
			},
			"ibm.tm1.api.v1.Chore-update":
			{
				"type": "object",
				"properties":
				{
					"StartTime":
					{
						"type": "string",
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The start time of the chore."
					},
					"DSTSensitive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore start time is sensitive to daily savings time."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the chore is active."
					},
					"ExecutionMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreExecutionMode",
						"description": "The execution mode of the chore, that is, single or multiple commit."
					},
					"Frequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The frequency of the chore."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the chore."
					}
				},
				"title": "Chore (for update)",
				"description": "Objects that execute one or more processes of TM1 at a user-defined frequency."
			},
			"ibm.tm1.api.v1.ChoreExecutionMode":
			{
				"type": "string",
				"enum": ["SingleCommit", "MultipleCommit"],
				"title": "ChoreExecutionMode"
			},
			"ibm.tm1.api.v1.ChoreReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Chore":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore"
									}
								],
								"description": "The chore that is referenced."
							}
						}
					}
				],
				"title": "ChoreReference",
				"description": "A reference to a chore."
			},
			"ibm.tm1.api.v1.ChoreReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Chore":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore-create"
									}
								],
								"description": "The chore that is referenced."
							}
						}
					}
				],
				"title": "ChoreReference (for create)",
				"description": "A reference to a chore."
			},
			"ibm.tm1.api.v1.ChoreReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "ChoreReference (for update)",
				"description": "A reference to a chore."
			},
			"ibm.tm1.api.v1.ChoreTask":
			{
				"type": "object",
				"properties":
				{
					"Step":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "A step in a task."
					},
					"Process":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
							}
						],
						"description": "The process completed in the task."
					},
					"Chore":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore",
						"description": "The Chore that the task belongs to."
					},
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTaskParameter"
						},
						"description": "A collection of parameters for the task."
					}
				},
				"title": "ChoreTask",
				"description": "A task to be completed as part of a Chore."
			},
			"ibm.tm1.api.v1.ChoreTask-create":
			{
				"type": "object",
				"properties":
				{
					"Step":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "A step in a task."
					},
					"Process":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-create"
							}
						],
						"description": "The process completed in the task."
					},
					"Chore":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Chore-create",
						"description": "The Chore that the task belongs to."
					},
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTaskParameter-create"
						},
						"description": "A collection of parameters for the task."
					}
				},
				"required": ["Step"],
				"title": "ChoreTask (for create)",
				"description": "A task to be completed as part of a Chore."
			},
			"ibm.tm1.api.v1.ChoreTask-update":
			{
				"type": "object",
				"properties":
				{
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ChoreTaskParameter-update"
						},
						"description": "A collection of parameters for the task."
					}
				},
				"title": "ChoreTask (for update)",
				"description": "A task to be completed as part of a Chore."
			},
			"ibm.tm1.api.v1.ChoreTaskParameter":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "ChoreTaskParameter"
			},
			"ibm.tm1.api.v1.ChoreTaskParameter-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "ChoreTaskParameter (for create)"
			},
			"ibm.tm1.api.v1.ChoreTaskParameter-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "ChoreTaskParameter (for update)"
			},
			"ibm.tm1.api.v1.ClientSettings":
			{
				"type": "object",
				"properties":
				{
					"PasswordMinimumLength":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientPropertiesSyncInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"RetainNonCAMGroupMembership":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "ClientSettings"
			},
			"ibm.tm1.api.v1.ClientSettings-create":
			{
				"type": "object",
				"properties":
				{
					"PasswordMinimumLength":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientPropertiesSyncInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"RetainNonCAMGroupMembership":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "ClientSettings (for create)"
			},
			"ibm.tm1.api.v1.ClientSettings-update":
			{
				"type": "object",
				"properties":
				{
					"PasswordMinimumLength":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ClientPropertiesSyncInterval":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"RetainNonCAMGroupMembership":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "ClientSettings (for update)"
			},
			"ibm.tm1.api.v1.Configuration":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"description": "The name of the server."
					},
					"AdminHost":
					{
						"type": "string",
						"nullable": true,
						"description": "The location where TM1 Admin Server is running."
					},
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"IntegratedSecurityMode":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server uses integrated security modes."
					},
					"SecurityMode":
					{
						"type": "string",
						"nullable": true,
						"description": "The user authentication mode to be used by TM1 server."
					},
					"PrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ClientCAMURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of URIs used to authenticate TM1 clients."
					},
					"WebCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI used to authenticate TM1 Web clients."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					},
					"ServerCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the URI for the internal dispatcher that the TM1 server should use to connect to Cognos Authentication Manager (CAM)."
					},
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Lets you specify rule expressions for N: and C: levels on separate lines using identical AREA definitions."
					},
					"DistributedOutputDir":
					{
						"type": "string",
						"nullable": true,
						"description": "Defines the directory to which TUnits are written when a Cognos Insight distributed application is deployed."
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether users have the ability to use sandboxes across the server."
					},
					"JobQueuing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server should use queues to merge sandboxes."
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true,
						"description": "When this parameter is set, a feeder statement is forced to be re-evaluated when data changes."
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the data directory from which the server loads cubes, dimensions, and other objects."
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Instructs the TM1 server to identify and handle Unicode object names, preventing the creation of identical Unicode object names that vary only in case."
					}
				},
				"title": "Configuration",
				"description": "Specifies configuration parameters as defined in the Tm1s.cfg file for an IBM Cognos TM1 server.  \nFor details about all of the parameters, refer to the comments in the Tm1s.cfg file and the Operations Guide."
			},
			"ibm.tm1.api.v1.Configuration-create":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"description": "The name of the server."
					},
					"AdminHost":
					{
						"type": "string",
						"nullable": true,
						"description": "The location where TM1 Admin Server is running."
					},
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"IntegratedSecurityMode":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server uses integrated security modes."
					},
					"SecurityMode":
					{
						"type": "string",
						"nullable": true,
						"description": "The user authentication mode to be used by TM1 server."
					},
					"PrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ClientCAMURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of URIs used to authenticate TM1 clients."
					},
					"WebCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI used to authenticate TM1 Web clients."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					},
					"ServerCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the URI for the internal dispatcher that the TM1 server should use to connect to Cognos Authentication Manager (CAM)."
					},
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Lets you specify rule expressions for N: and C: levels on separate lines using identical AREA definitions."
					},
					"DistributedOutputDir":
					{
						"type": "string",
						"nullable": true,
						"description": "Defines the directory to which TUnits are written when a Cognos Insight distributed application is deployed."
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether users have the ability to use sandboxes across the server."
					},
					"JobQueuing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server should use queues to merge sandboxes."
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true,
						"description": "When this parameter is set, a feeder statement is forced to be re-evaluated when data changes."
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the data directory from which the server loads cubes, dimensions, and other objects."
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Instructs the TM1 server to identify and handle Unicode object names, preventing the creation of identical Unicode object names that vary only in case."
					}
				},
				"required": ["ServerName"],
				"title": "Configuration (for create)",
				"description": "Specifies configuration parameters as defined in the Tm1s.cfg file for an IBM Cognos TM1 server.  \nFor details about all of the parameters, refer to the comments in the Tm1s.cfg file and the Operations Guide."
			},
			"ibm.tm1.api.v1.Configuration-update":
			{
				"type": "object",
				"properties":
				{
					"AdminHost":
					{
						"type": "string",
						"nullable": true,
						"description": "The location where TM1 Admin Server is running."
					},
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"IntegratedSecurityMode":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server uses integrated security modes."
					},
					"SecurityMode":
					{
						"type": "string",
						"nullable": true,
						"description": "The user authentication mode to be used by TM1 server."
					},
					"PrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ClientCAMURIs":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of URIs used to authenticate TM1 clients."
					},
					"WebCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI used to authenticate TM1 Web clients."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					},
					"ServerCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the URI for the internal dispatcher that the TM1 server should use to connect to Cognos Authentication Manager (CAM)."
					},
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Lets you specify rule expressions for N: and C: levels on separate lines using identical AREA definitions."
					},
					"DistributedOutputDir":
					{
						"type": "string",
						"nullable": true,
						"description": "Defines the directory to which TUnits are written when a Cognos Insight distributed application is deployed."
					},
					"DisableSandboxing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether users have the ability to use sandboxes across the server."
					},
					"JobQueuing":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the TM1 server should use queues to merge sandboxes."
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true,
						"description": "When this parameter is set, a feeder statement is forced to be re-evaluated when data changes."
					},
					"DataBaseDirectory":
					{
						"type": "string",
						"nullable": true,
						"description": "Specifies the data directory from which the server loads cubes, dimensions, and other objects."
					},
					"UnicodeUpperLowerCase":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Instructs the TM1 server to identify and handle Unicode object names, preventing the creation of identical Unicode object names that vary only in case."
					}
				},
				"title": "Configuration (for update)",
				"description": "Specifies configuration parameters as defined in the Tm1s.cfg file for an IBM Cognos TM1 server.  \nFor details about all of the parameters, refer to the comments in the Tm1s.cfg file and the Operations Guide."
			},
			"ibm.tm1.api.v1.ConflictResolution":
			{
				"type": "string",
				"enum": ["UsingSource", "UsingTarget", "Individually"],
				"title": "ConflictResolution"
			},
			"ibm.tm1.api.v1.Cube":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "Name of the cube as it is registered on the server."
					},
					"Rules":
					{
						"type": "string",
						"nullable": true,
						"description": "Cube rules expand the standard hierarchical consolidation operations that you may define within a dimension."
					},
					"DrillthroughRules":
					{
						"type": "string",
						"nullable": true,
						"description": "Rules associating drill-through scripts with regions of cells in the cube.  \nDrill-through processes can return query results against either cubes or relational tables."
					},
					"LastSchemaUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last schema update date of the cube."
					},
					"LastDataUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last data update date of the cube."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "Captions and resource attributes of the cube."
					},
					"Dimensions":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
						},
						"description": "Represents dimensions that perform calculations, control labels, and format data entry."
					},
					"Views":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
						},
						"description": "Represents a View object on the TM1 Server.  \nA View is a child object of a Cube. You can retrieve a list of available Views, or find a specific View using the appropriate methods in the Cube class. View objects can be queried for information (such as name or subsets) or changed. Executing a View results in a Cellset object, which can be used to read the actual cell data."
					},
					"ViewAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
						},
						"description": "Specific attributes for each View object of the cube."
					},
					"PrivateViews":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
						},
						"description": "Private views are accessible only by the user who registered them.  \nA private registered view is a named object. It persists after the termination of a client session."
					},
					"Annotations":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation"
						},
						"description": "Comments that provide additional information about the cube."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the cube."
					}
				},
				"title": "Cube",
				"description": "Represents a single cube on a TM1 server."
			},
			"ibm.tm1.api.v1.Cube-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "Name of the cube as it is registered on the server."
					},
					"Rules":
					{
						"type": "string",
						"nullable": true,
						"description": "Cube rules expand the standard hierarchical consolidation operations that you may define within a dimension."
					},
					"DrillthroughRules":
					{
						"type": "string",
						"nullable": true,
						"description": "Rules associating drill-through scripts with regions of cells in the cube.  \nDrill-through processes can return query results against either cubes or relational tables."
					},
					"LastSchemaUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last schema update date of the cube."
					},
					"LastDataUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last data update date of the cube."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "Captions and resource attributes of the cube."
					},
					"Dimensions":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-create"
						},
						"description": "Represents dimensions that perform calculations, control labels, and format data entry."
					},
					"Views":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
						},
						"description": "Represents a View object on the TM1 Server.  \nA View is a child object of a Cube. You can retrieve a list of available Views, or find a specific View using the appropriate methods in the Cube class. View objects can be queried for information (such as name or subsets) or changed. Executing a View results in a Cellset object, which can be used to read the actual cell data."
					},
					"ViewAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
						},
						"description": "Specific attributes for each View object of the cube."
					},
					"PrivateViews":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
						},
						"description": "Private views are accessible only by the user who registered them.  \nA private registered view is a named object. It persists after the termination of a client session."
					},
					"Annotations":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Annotation-create"
						},
						"description": "Comments that provide additional information about the cube."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the cube."
					}
				},
				"required": ["Name"],
				"title": "Cube (for create)",
				"description": "Represents a single cube on a TM1 server."
			},
			"ibm.tm1.api.v1.Cube-update":
			{
				"type": "object",
				"properties":
				{
					"Rules":
					{
						"type": "string",
						"nullable": true,
						"description": "Cube rules expand the standard hierarchical consolidation operations that you may define within a dimension."
					},
					"DrillthroughRules":
					{
						"type": "string",
						"nullable": true,
						"description": "Rules associating drill-through scripts with regions of cells in the cube.  \nDrill-through processes can return query results against either cubes or relational tables."
					},
					"LastSchemaUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last schema update date of the cube."
					},
					"LastDataUpdate":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "Last data update date of the cube."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "Captions and resource attributes of the cube."
					}
				},
				"title": "Cube (for update)",
				"description": "Represents a single cube on a TM1 server."
			},
			"ibm.tm1.api.v1.CubeDrillthrough":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough"
					},
					{
						"type": "object"
					}
				],
				"title": "CubeDrillthrough",
				"description": "A drill through that drills to a view of a cube."
			},
			"ibm.tm1.api.v1.CubeDrillthrough-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough-create"
					},
					{
						"type": "object"
					}
				],
				"title": "CubeDrillthrough (for create)",
				"description": "A drill through that drills to a view of a cube."
			},
			"ibm.tm1.api.v1.CubeDrillthrough-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough-update"
					},
					{
						"type": "object"
					}
				],
				"title": "CubeDrillthrough (for update)",
				"description": "A drill through that drills to a view of a cube."
			},
			"ibm.tm1.api.v1.CubeReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Cube":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
									}
								],
								"description": "The cube that is referenced."
							}
						}
					}
				],
				"title": "CubeReference",
				"description": "A reference to a cube."
			},
			"ibm.tm1.api.v1.CubeReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Cube":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
									}
								],
								"description": "The cube that is referenced."
							}
						}
					}
				],
				"title": "CubeReference (for create)",
				"description": "A reference to a cube."
			},
			"ibm.tm1.api.v1.CubeReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "CubeReference (for update)",
				"description": "A reference to a cube."
			},
			"ibm.tm1.api.v1.CubeUpdate":
			{
				"type": "object",
				"properties":
				{
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						}
					},
					"Value":
					{
						"type": "string"
					},
					"ReferenceCube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
							}
						]
					},
					"ReferenceCell":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						}
					}
				},
				"title": "CubeUpdate",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.CubeUpdate-create":
			{
				"type": "object",
				"properties":
				{
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						}
					},
					"Value":
					{
						"type": "string"
					},
					"ReferenceCube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
							}
						]
					},
					"ReferenceCell":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						}
					}
				},
				"title": "CubeUpdate (for create)",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.CubeUpdate-update":
			{
				"type": "object",
				"properties":
				{
					"Value":
					{
						"type": "string"
					}
				},
				"title": "CubeUpdate (for update)",
				"description": "Contains the information necessary to perform a spread to a single cell.  \nThe spreading command indicated by Value is applied to the cell specified by Tuple. Optionally, a reference cube and cell can also be specified."
			},
			"ibm.tm1.api.v1.DebugLogSettings":
			{
				"type": "object",
				"properties":
				{
					"LoggingDirectory":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "DebugLogSettings"
			},
			"ibm.tm1.api.v1.DebugLogSettings-create":
			{
				"type": "object",
				"properties":
				{
					"LoggingDirectory":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "DebugLogSettings (for create)"
			},
			"ibm.tm1.api.v1.DebugLogSettings-update":
			{
				"type": "object",
				"properties":
				{
					"LoggingDirectory":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "DebugLogSettings (for update)"
			},
			"ibm.tm1.api.v1.Dimension":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the dimension."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption for the dimension."
					},
					"AllLeavesHierarchyName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the all leaves hierarchy in a dimension with alternate hierarchies. Defaults to 'Leaves' if no name is specified.  \nA dimension with more than one hierarchy automatically gets a, system maintained, all leaves hierarchy. The name of this hierarchy, if no name is specified this hierarchy is called \"Leaves\", can be controlled with this AllLeavesHierarchyName property. Note that the all leaves hierarchy can also be added by calling the AddAllLeavesHierarchy action, which converts the dimension into a multi hierarchy dimension, if not one already, by adding a second, in this case the all leaves, hierarchy."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "A property of the dimension.  \nAttributes have a finite domain within the context of the dimension that they belong to. For example, a dimension for a customer may have attributes that describe the city, region, and country that the customer belongs to."
					},
					"Hierarchies":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
						},
						"description": "More specific groupings within a dimension.  \nFor example, for the Years dimension, data can be organized into smaller groups, such as Years, Current Month, and All Dates."
					},
					"DefaultHierarchy":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy"
							}
						],
						"description": "The default hierarchy of the dimension."
					},
					"HierarchyAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
						},
						"description": "Attributes of a hierarchy."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the dimensions."
					}
				},
				"title": "Dimension",
				"description": "Represents a single dimension on a TM1 server.  \nA dimension is a broad grouping of descriptive data about a major aspect of a business, such as products, dates, or locations. Each dimension includes different levels of members in one or more hierarchies and an optional set of calculated members or special categories."
			},
			"ibm.tm1.api.v1.Dimension-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the dimension."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption for the dimension."
					},
					"AllLeavesHierarchyName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the all leaves hierarchy in a dimension with alternate hierarchies. Defaults to 'Leaves' if no name is specified.  \nA dimension with more than one hierarchy automatically gets a, system maintained, all leaves hierarchy. The name of this hierarchy, if no name is specified this hierarchy is called \"Leaves\", can be controlled with this AllLeavesHierarchyName property. Note that the all leaves hierarchy can also be added by calling the AddAllLeavesHierarchy action, which converts the dimension into a multi hierarchy dimension, if not one already, by adding a second, in this case the all leaves, hierarchy."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "A property of the dimension.  \nAttributes have a finite domain within the context of the dimension that they belong to. For example, a dimension for a customer may have attributes that describe the city, region, and country that the customer belongs to."
					},
					"Hierarchies":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create"
						},
						"description": "More specific groupings within a dimension.  \nFor example, for the Years dimension, data can be organized into smaller groups, such as Years, Current Month, and All Dates."
					},
					"DefaultHierarchy":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create"
							}
						],
						"description": "The default hierarchy of the dimension."
					},
					"HierarchyAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
						},
						"description": "Attributes of a hierarchy."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the dimensions."
					}
				},
				"required": ["Name"],
				"title": "Dimension (for create)",
				"description": "Represents a single dimension on a TM1 server.  \nA dimension is a broad grouping of descriptive data about a major aspect of a business, such as products, dates, or locations. Each dimension includes different levels of members in one or more hierarchies and an optional set of calculated members or special categories."
			},
			"ibm.tm1.api.v1.Dimension-update":
			{
				"type": "object",
				"properties":
				{
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption for the dimension."
					},
					"AllLeavesHierarchyName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the all leaves hierarchy in a dimension with alternate hierarchies. Defaults to 'Leaves' if no name is specified.  \nA dimension with more than one hierarchy automatically gets a, system maintained, all leaves hierarchy. The name of this hierarchy, if no name is specified this hierarchy is called \"Leaves\", can be controlled with this AllLeavesHierarchyName property. Note that the all leaves hierarchy can also be added by calling the AddAllLeavesHierarchy action, which converts the dimension into a multi hierarchy dimension, if not one already, by adding a second, in this case the all leaves, hierarchy."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "A property of the dimension.  \nAttributes have a finite domain within the context of the dimension that they belong to. For example, a dimension for a customer may have attributes that describe the city, region, and country that the customer belongs to."
					}
				},
				"title": "Dimension (for update)",
				"description": "Represents a single dimension on a TM1 server.  \nA dimension is a broad grouping of descriptive data about a major aspect of a business, such as products, dates, or locations. Each dimension includes different levels of members in one or more hierarchies and an optional set of calculated members or special categories."
			},
			"ibm.tm1.api.v1.DimensionReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Dimension":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension"
									}
								],
								"description": "The dimension that is referenced."
							}
						}
					}
				],
				"title": "DimensionReference",
				"description": "A reference to a dimension."
			},
			"ibm.tm1.api.v1.DimensionReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Dimension":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-create"
									}
								],
								"description": "The dimension that is referenced."
							}
						}
					}
				],
				"title": "DimensionReference (for create)",
				"description": "A reference to a dimension."
			},
			"ibm.tm1.api.v1.DimensionReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "DimensionReference (for update)",
				"description": "A reference to a dimension."
			},
			"ibm.tm1.api.v1.Document":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Size":
							{
								"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
								],
								"nullable": true,
								"format": "int64",
								"example": "42",
								"description": "The size of the document."
							},
							"LastUpdated":
							{
								"type": "string",
								"nullable": true,
								"format": "date-time",
								"example": "2017-04-13T15:51:04Z",
								"description": "The date and time value of the last update of this document, with a time zone offset."
							},
							"Content":
							{
								"type": "string",
								"nullable": true,
								"format": "base64url",
								"description": "The contents of the document."
							}
						}
					}
				],
				"title": "Document",
				"description": "An attached document."
			},
			"ibm.tm1.api.v1.Document-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Size":
							{
								"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
								],
								"nullable": true,
								"format": "int64",
								"example": "42",
								"description": "The size of the document."
							},
							"LastUpdated":
							{
								"type": "string",
								"nullable": true,
								"format": "date-time",
								"example": "2017-04-13T15:51:04Z",
								"description": "The date and time value of the last update of this document, with a time zone offset."
							},
							"Content":
							{
								"type": "string",
								"nullable": true,
								"format": "base64url",
								"description": "The contents of the document."
							}
						}
					}
				],
				"title": "Document (for create)",
				"description": "An attached document."
			},
			"ibm.tm1.api.v1.Document-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object",
						"properties":
						{
							"Size":
							{
								"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
								],
								"nullable": true,
								"format": "int64",
								"example": "42",
								"description": "The size of the document."
							},
							"LastUpdated":
							{
								"type": "string",
								"nullable": true,
								"format": "date-time",
								"example": "2017-04-13T15:51:04Z",
								"description": "The date and time value of the last update of this document, with a time zone offset."
							},
							"Content":
							{
								"type": "string",
								"nullable": true,
								"format": "base64url",
								"description": "The contents of the document."
							}
						}
					}
				],
				"title": "Document (for update)",
				"description": "An attached document."
			},
			"ibm.tm1.api.v1.DocumentReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Document":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Document"
									}
								],
								"description": "The document that is referenced."
							}
						}
					}
				],
				"title": "DocumentReference",
				"description": "A reference to a document."
			},
			"ibm.tm1.api.v1.DocumentReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Document":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Document-create"
									}
								],
								"description": "The document that is referenced."
							}
						}
					}
				],
				"title": "DocumentReference (for create)",
				"description": "A reference to a document."
			},
			"ibm.tm1.api.v1.DocumentReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "DocumentReference (for update)",
				"description": "A reference to a document."
			},
			"ibm.tm1.api.v1.Drillthrough":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the drill through."
					}
				},
				"title": "Drillthrough",
				"description": "The definition of a drill through on the current cell."
			},
			"ibm.tm1.api.v1.Drillthrough-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the drill through."
					}
				},
				"required": ["Name"],
				"title": "Drillthrough (for create)",
				"description": "The definition of a drill through on the current cell."
			},
			"ibm.tm1.api.v1.Drillthrough-update":
			{
				"type": "object",
				"title": "Drillthrough (for update)",
				"description": "The definition of a drill through on the current cell."
			},
			"ibm.tm1.api.v1.DrillthroughRow":
			{
				"type": "object",
				"title": "DrillthroughRow"
			},
			"ibm.tm1.api.v1.DrillthroughRow-create":
			{
				"type": "object",
				"title": "DrillthroughRow (for create)"
			},
			"ibm.tm1.api.v1.DrillthroughRow-update":
			{
				"type": "object",
				"title": "DrillthroughRow (for update)"
			},
			"ibm.tm1.api.v1.Edge":
			{
				"type": "object",
				"properties":
				{
					"ParentName":
					{
						"type": "string",
						"description": "The name of the parent of the component in the hierarchy."
					},
					"ComponentName":
					{
						"type": "string",
						"description": "The name of the component in the hierarchy."
					},
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the component in the edge."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy",
						"description": "The hierarchy of the component in the edge."
					},
					"Parent":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element",
						"description": "The parent of the component."
					},
					"Component":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element",
						"description": "The component."
					}
				},
				"title": "Edge",
				"description": "Represents the relationship between two or more hierarchies and their weight."
			},
			"ibm.tm1.api.v1.Edge-create":
			{
				"type": "object",
				"properties":
				{
					"ParentName":
					{
						"type": "string",
						"description": "The name of the parent of the component in the hierarchy."
					},
					"ComponentName":
					{
						"type": "string",
						"description": "The name of the component in the hierarchy."
					},
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the component in the edge."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create",
						"description": "The hierarchy of the component in the edge."
					},
					"Parent":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create",
						"description": "The parent of the component."
					},
					"Component":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create",
						"description": "The component."
					}
				},
				"required": ["ParentName", "ComponentName"],
				"title": "Edge (for create)",
				"description": "Represents the relationship between two or more hierarchies and their weight."
			},
			"ibm.tm1.api.v1.Edge-update":
			{
				"type": "object",
				"properties":
				{
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the component in the edge."
					}
				},
				"title": "Edge (for update)",
				"description": "Represents the relationship between two or more hierarchies and their weight."
			},
			"ibm.tm1.api.v1.Element":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the element."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The element's invariant name."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ElementType"
							}
						],
						"description": "The type of the element, one of Numeric, String, or Consolidated."
					},
					"Level":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The level to which the element belongs within the dimension hierarchy.  \nLevel 0 identifies leaf elements. Each level of consolidation within the dimension hierarchy is incremented by 1."
					},
					"Index":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that corresponds to the position of the element within a dimension.  \nThe first element within a dimension has an index value of 1, the second element has an index value of 2, and so on."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the element."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy",
						"description": "The hierarchy of the element in the dimension."
					},
					"Parents":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "The parent element of the element in the hierarchy."
					},
					"Components":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "The collection of elements in the dimension."
					},
					"Edges":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Edge"
						},
						"description": "The collection of edges in the dimension."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the element."
					}
				},
				"title": "Element",
				"description": "An element in a dimension that identifies the location of a cell in a cube."
			},
			"ibm.tm1.api.v1.Element-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the element."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The element's invariant name."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ElementType"
							}
						],
						"description": "The type of the element, one of Numeric, String, or Consolidated."
					},
					"Level":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The level to which the element belongs within the dimension hierarchy.  \nLevel 0 identifies leaf elements. Each level of consolidation within the dimension hierarchy is incremented by 1."
					},
					"Index":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that corresponds to the position of the element within a dimension.  \nThe first element within a dimension has an index value of 1, the second element has an index value of 2, and so on."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the element."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create",
						"description": "The hierarchy of the element in the dimension."
					},
					"Parents":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "The parent element of the element in the hierarchy."
					},
					"Components":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "The collection of elements in the dimension."
					},
					"Edges":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Edge-create"
						},
						"description": "The collection of edges in the dimension."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the element."
					}
				},
				"required": ["Name"],
				"title": "Element (for create)",
				"description": "An element in a dimension that identifies the location of a cell in a cube."
			},
			"ibm.tm1.api.v1.Element-update":
			{
				"type": "object",
				"properties":
				{
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The element's invariant name."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ElementType"
							}
						],
						"description": "The type of the element, one of Numeric, String, or Consolidated."
					},
					"Level":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The level to which the element belongs within the dimension hierarchy.  \nLevel 0 identifies leaf elements. Each level of consolidation within the dimension hierarchy is incremented by 1."
					},
					"Index":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A value that corresponds to the position of the element within a dimension.  \nThe first element within a dimension has an index value of 1, the second element has an index value of 2, and so on."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the element."
					}
				},
				"title": "Element (for update)",
				"description": "An element in a dimension that identifies the location of a cell in a cube."
			},
			"ibm.tm1.api.v1.ElementType":
			{
				"type": "string",
				"enum": ["Numeric", "String", "Consolidated"],
				"title": "ElementType"
			},
			"ibm.tm1.api.v1.EncryptionFileType":
			{
				"type": "string",
				"enum": ["Object", "TransactionLog", "AuditLog"],
				"title": "EncryptionFileType"
			},
			"ibm.tm1.api.v1.Entry":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "The ID of the entry."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the entry."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the entry."
					},
					"ContainedBy":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder"
							}
						],
						"description": "The folder that contains the entries."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the entry."
					}
				},
				"title": "Entry",
				"description": "An entry."
			},
			"ibm.tm1.api.v1.Entry-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string",
						"description": "The ID of the entry."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the entry."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the entry."
					},
					"ContainedBy":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Folder-create"
							}
						],
						"description": "The folder that contains the entries."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the entry."
					}
				},
				"required": ["ID"],
				"title": "Entry (for create)",
				"description": "An entry."
			},
			"ibm.tm1.api.v1.Entry-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the entry."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the entry."
					}
				},
				"title": "Entry (for update)",
				"description": "An entry."
			},
			"ibm.tm1.api.v1.ErrorLogFile":
			{
				"type": "object",
				"properties":
				{
					"Filename":
					{
						"type": "string",
						"description": "The name of the error log file."
					},
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"title": "ErrorLogFile",
				"description": "An error log file"
			},
			"ibm.tm1.api.v1.ErrorLogFile-create":
			{
				"type": "object",
				"properties":
				{
					"Filename":
					{
						"type": "string",
						"description": "The name of the error log file."
					},
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"required": ["Filename"],
				"title": "ErrorLogFile (for create)",
				"description": "An error log file"
			},
			"ibm.tm1.api.v1.ErrorLogFile-update":
			{
				"type": "object",
				"properties":
				{
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"title": "ErrorLogFile (for update)",
				"description": "An error log file"
			},
			"ibm.tm1.api.v1.EventLogSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadRunningTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadWaitingTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadBlockingNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ThresholdForPooledMemoryInMB":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "EventLogSettings"
			},
			"ibm.tm1.api.v1.EventLogSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadRunningTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadWaitingTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadBlockingNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ThresholdForPooledMemoryInMB":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "EventLogSettings (for create)"
			},
			"ibm.tm1.api.v1.EventLogSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadRunningTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadWaitingTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThresholdForThreadBlockingNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ThresholdForPooledMemoryInMB":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "EventLogSettings (for update)"
			},
			"ibm.tm1.api.v1.ExternalDatabaseSettings":
			{
				"type": "object",
				"properties":
				{
					"OracleErrorForceRowStatus":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.OracleErrorForceRowStatus"
							}
						]
					},
					"SQLFetchType":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLFetchType"
							}
						]
					},
					"SQLRowsetSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ODBCLibraryPath":
					{
						"type": "string",
						"nullable": true
					},
					"TM1ConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseNewConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"ODBCTimeoutInSeconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ExternalDatabaseSettings"
			},
			"ibm.tm1.api.v1.ExternalDatabaseSettings-create":
			{
				"type": "object",
				"properties":
				{
					"OracleErrorForceRowStatus":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.OracleErrorForceRowStatus"
							}
						]
					},
					"SQLFetchType":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLFetchType"
							}
						]
					},
					"SQLRowsetSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ODBCLibraryPath":
					{
						"type": "string",
						"nullable": true
					},
					"TM1ConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseNewConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"ODBCTimeoutInSeconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ExternalDatabaseSettings (for create)"
			},
			"ibm.tm1.api.v1.ExternalDatabaseSettings-update":
			{
				"type": "object",
				"properties":
				{
					"OracleErrorForceRowStatus":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.OracleErrorForceRowStatus"
							}
						]
					},
					"SQLFetchType":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SQLFetchType"
							}
						]
					},
					"SQLRowsetSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"ODBCLibraryPath":
					{
						"type": "string",
						"nullable": true
					},
					"TM1ConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseNewConnectorforSAP":
					{
						"type": "boolean",
						"nullable": true
					},
					"ODBCTimeoutInSeconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ExternalDatabaseSettings (for update)"
			},
			"ibm.tm1.api.v1.FIPSMode":
			{
				"type": "string",
				"enum": ["FIPS_MODE", "FIPS_APPROVED", "FIPS_NONE"],
				"title": "FIPSMode"
			},
			"ibm.tm1.api.v1.FedCellDescriptor":
			{
				"type": "object",
				"properties":
				{
					"Cube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube"
							}
						],
						"description": "Cube containing the cell."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "Coordinates of the cell."
					},
					"Fed":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the cell is fed."
					}
				},
				"title": "FedCellDescriptor"
			},
			"ibm.tm1.api.v1.FedCellDescriptor-create":
			{
				"type": "object",
				"properties":
				{
					"Cube":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create"
							}
						],
						"description": "Cube containing the cell."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "Coordinates of the cell."
					},
					"Fed":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the cell is fed."
					}
				},
				"title": "FedCellDescriptor (for create)"
			},
			"ibm.tm1.api.v1.FedCellDescriptor-update":
			{
				"type": "object",
				"properties":
				{
					"Fed":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the cell is fed."
					}
				},
				"title": "FedCellDescriptor (for update)"
			},
			"ibm.tm1.api.v1.FeederTrace":
			{
				"type": "object",
				"properties":
				{
					"FedCells":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.FedCellDescriptor"
						},
						"description": "Collection of cells that are fed by the source cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "Collection of feeder statements that have the source cell on the left hand side."
					}
				},
				"title": "FeederTrace"
			},
			"ibm.tm1.api.v1.FeederTrace-create":
			{
				"type": "object",
				"properties":
				{
					"FedCells":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.FedCellDescriptor-create"
						},
						"description": "Collection of cells that are fed by the source cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "Collection of feeder statements that have the source cell on the left hand side."
					}
				},
				"title": "FeederTrace (for create)"
			},
			"ibm.tm1.api.v1.FeederTrace-update":
			{
				"type": "object",
				"properties":
				{
					"FedCells":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.FedCellDescriptor-update"
						},
						"description": "Collection of cells that are fed by the source cell."
					},
					"Statements":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "Collection of feeder statements that have the source cell on the left hand side."
					}
				},
				"title": "FeederTrace (for update)"
			},
			"ibm.tm1.api.v1.FileRetrySettings":
			{
				"type": "object",
				"properties":
				{
					"FileRetryCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryDelayMilliseconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryFileSpec":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					}
				},
				"title": "FileRetrySettings"
			},
			"ibm.tm1.api.v1.FileRetrySettings-create":
			{
				"type": "object",
				"properties":
				{
					"FileRetryCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryDelayMilliseconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryFileSpec":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					}
				},
				"title": "FileRetrySettings (for create)"
			},
			"ibm.tm1.api.v1.FileRetrySettings-update":
			{
				"type": "object",
				"properties":
				{
					"FileRetryCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryDelayMilliseconds":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"FileRetryFileSpec":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					}
				},
				"title": "FileRetrySettings (for update)"
			},
			"ibm.tm1.api.v1.Folder":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Contents":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
								},
								"description": "A collection of entries that are in the folder."
							},
							"PrivateContents":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
								},
								"description": "A collection of private entries that are in the folder."
							}
						}
					}
				],
				"title": "Folder",
				"description": "A container for related TM1 objects."
			},
			"ibm.tm1.api.v1.Folder-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Contents":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
								},
								"description": "A collection of entries that are in the folder."
							},
							"PrivateContents":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
								},
								"description": "A collection of private entries that are in the folder."
							}
						}
					}
				],
				"title": "Folder (for create)",
				"description": "A container for related TM1 objects."
			},
			"ibm.tm1.api.v1.Folder-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "Folder (for update)",
				"description": "A container for related TM1 objects."
			},
			"ibm.tm1.api.v1.Group":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required."
					},
					"Users":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.User"
						},
						"description": "The names of users in a given group."
					}
				},
				"title": "Group",
				"description": "A user group on a TM1 server."
			},
			"ibm.tm1.api.v1.Group-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a user group on the TM1 server.  \nThere are three predefined groups on each server: Admin, DataAdmin, and SecurityAdmin. Other user groups can be created by an administrator as required."
					},
					"Users":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.User-create"
						},
						"description": "The names of users in a given group."
					}
				},
				"required": ["Name"],
				"title": "Group (for create)",
				"description": "A user group on a TM1 server."
			},
			"ibm.tm1.api.v1.Group-update":
			{
				"type": "object",
				"title": "Group (for update)",
				"description": "A user group on a TM1 server."
			},
			"ibm.tm1.api.v1.HTTPSettings":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SessionTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "HTTPSettings"
			},
			"ibm.tm1.api.v1.HTTPSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SessionTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "HTTPSettings (for create)"
			},
			"ibm.tm1.api.v1.HTTPSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SessionTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "HTTPSettings (for update)"
			},
			"ibm.tm1.api.v1.Hierarchy":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the hierarchy."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption of the hierarchy."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of a relationship is the number of related rows for each of the two query subjects.  \nRelationships exist between two query subjects. The cardinality of a relationship is the number of related rows for each of the two query subjects. The rows are related by the expression of the relationship. This expression usually refers to the primary and foreign keys of the underlying tables."
					},
					"Structure":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Specifies whether the hierarchy is balanced or unbalanced.  \nA value of 0 indicates a balanced structure and a value of 2 indicates an unbalanced structure."
					},
					"Visible":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Indicates if this hierarchy should be visible to consumers.  \nA designer of a dimension might opt to use additional hierarchies for modeling purposes and express his or her preference to not make such hierarchy 'visible' using this property. A consumer however is free to ignore this flag, like modeling clients would obviously, if such behavior would be more appropriate. Note: this flag has absolutely no meaning to the server!"
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the hierarchy."
					},
					"Dimension":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension",
						"description": "A dimension that is part of the hierarchy."
					},
					"Elements":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "The elements of the hierarchy."
					},
					"Edges":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Edge"
						},
						"description": "The edges of the hierarchy."
					},
					"Subsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
						},
						"description": "The subsets of the hierarchy."
					},
					"PrivateSubsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
						},
						"description": "The private subsets of the hierarchy."
					},
					"SessionSubsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
						},
						"description": "The session-scoped subsets generated on this hierarchy.  \nThis collection will always appear empty, like the Cellsets collection, but generated SessionSubsets can be retrieved directly by ID."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
						},
						"description": "The members of the hierarchy."
					},
					"AllMember":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
							}
						],
						"description": "An aggregation of all of the members of the hierarchy."
					},
					"DefaultMember":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
							}
						],
						"description": "The default member of the hierarchy."
					},
					"Levels":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Level"
						},
						"description": "A collection of levels in the hierarchy."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the hierarchy."
					},
					"ElementAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
						},
						"description": "The attributes of the elements of the hierarchy."
					},
					"SubsetAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition"
						},
						"description": "The attributes of the subsets of the hierarchy."
					}
				},
				"title": "Hierarchy",
				"description": "A hierarchy organizes dimensions into a hierarchical structure, with each dimension representing a different level of the hierarchy.  \nFor example, you have separate dimensions for days, months, and quarters. You group them into a dimension called year."
			},
			"ibm.tm1.api.v1.Hierarchy-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the hierarchy."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption of the hierarchy."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of a relationship is the number of related rows for each of the two query subjects.  \nRelationships exist between two query subjects. The cardinality of a relationship is the number of related rows for each of the two query subjects. The rows are related by the expression of the relationship. This expression usually refers to the primary and foreign keys of the underlying tables."
					},
					"Structure":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Specifies whether the hierarchy is balanced or unbalanced.  \nA value of 0 indicates a balanced structure and a value of 2 indicates an unbalanced structure."
					},
					"Visible":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Indicates if this hierarchy should be visible to consumers.  \nA designer of a dimension might opt to use additional hierarchies for modeling purposes and express his or her preference to not make such hierarchy 'visible' using this property. A consumer however is free to ignore this flag, like modeling clients would obviously, if such behavior would be more appropriate. Note: this flag has absolutely no meaning to the server!"
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the hierarchy."
					},
					"Dimension":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Dimension-create",
						"description": "A dimension that is part of the hierarchy."
					},
					"Elements":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "The elements of the hierarchy."
					},
					"Edges":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Edge-create"
						},
						"description": "The edges of the hierarchy."
					},
					"Subsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
						},
						"description": "The subsets of the hierarchy."
					},
					"PrivateSubsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
						},
						"description": "The private subsets of the hierarchy."
					},
					"SessionSubsets":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
						},
						"description": "The session-scoped subsets generated on this hierarchy.  \nThis collection will always appear empty, like the Cellsets collection, but generated SessionSubsets can be retrieved directly by ID."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
						},
						"description": "The members of the hierarchy."
					},
					"AllMember":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
							}
						],
						"description": "An aggregation of all of the members of the hierarchy."
					},
					"DefaultMember":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
							}
						],
						"description": "The default member of the hierarchy."
					},
					"Levels":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Level-create"
						},
						"description": "A collection of levels in the hierarchy."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the hierarchy."
					},
					"ElementAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
						},
						"description": "The attributes of the elements of the hierarchy."
					},
					"SubsetAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.AttributeDefinition-create"
						},
						"description": "The attributes of the subsets of the hierarchy."
					}
				},
				"required": ["Name"],
				"title": "Hierarchy (for create)",
				"description": "A hierarchy organizes dimensions into a hierarchical structure, with each dimension representing a different level of the hierarchy.  \nFor example, you have separate dimensions for days, months, and quarters. You group them into a dimension called year."
			},
			"ibm.tm1.api.v1.Hierarchy-update":
			{
				"type": "object",
				"properties":
				{
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The caption of the hierarchy."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of a relationship is the number of related rows for each of the two query subjects.  \nRelationships exist between two query subjects. The cardinality of a relationship is the number of related rows for each of the two query subjects. The rows are related by the expression of the relationship. This expression usually refers to the primary and foreign keys of the underlying tables."
					},
					"Structure":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Specifies whether the hierarchy is balanced or unbalanced.  \nA value of 0 indicates a balanced structure and a value of 2 indicates an unbalanced structure."
					},
					"Visible":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Indicates if this hierarchy should be visible to consumers.  \nA designer of a dimension might opt to use additional hierarchies for modeling purposes and express his or her preference to not make such hierarchy 'visible' using this property. A consumer however is free to ignore this flag, like modeling clients would obviously, if such behavior would be more appropriate. Note: this flag has absolutely no meaning to the server!"
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the hierarchy."
					}
				},
				"title": "Hierarchy (for update)",
				"description": "A hierarchy organizes dimensions into a hierarchical structure, with each dimension representing a different level of the hierarchy.  \nFor example, you have separate dimensions for days, months, and quarters. You group them into a dimension called year."
			},
			"ibm.tm1.api.v1.IPVersion":
			{
				"type": "string",
				"enum": ["IPv4", "IPv6", "Dual"],
				"title": "IPVersion"
			},
			"ibm.tm1.api.v1.JavaSettings":
			{
				"type": "object",
				"properties":
				{
					"ClassPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMArgs":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "JavaSettings"
			},
			"ibm.tm1.api.v1.JavaSettings-create":
			{
				"type": "object",
				"properties":
				{
					"ClassPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMArgs":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "JavaSettings (for create)"
			},
			"ibm.tm1.api.v1.JavaSettings-update":
			{
				"type": "object",
				"properties":
				{
					"ClassPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMPath":
					{
						"type": "string",
						"nullable": true
					},
					"JVMArgs":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "JavaSettings (for update)"
			},
			"ibm.tm1.api.v1.JobQueuingSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ThreadSleepTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThreadPoolSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaxWaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "JobQueuingSettings"
			},
			"ibm.tm1.api.v1.JobQueuingSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ThreadSleepTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThreadPoolSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaxWaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "JobQueuingSettings (for create)"
			},
			"ibm.tm1.api.v1.JobQueuingSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ThreadSleepTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ThreadPoolSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaxWaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "JobQueuingSettings (for update)"
			},
			"ibm.tm1.api.v1.LDAPSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"Host":
					{
						"type": "string",
						"nullable": true
					},
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"UseServerAccount":
					{
						"type": "boolean",
						"nullable": true
					},
					"VerifyCertServerName":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"VerifyServerSSLCert":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCertVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCRLVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"WellKnownUserName":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordFile":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"SearchBase":
					{
						"type": "string",
						"nullable": true
					},
					"SearchField":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "LDAPSettings"
			},
			"ibm.tm1.api.v1.LDAPSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"Host":
					{
						"type": "string",
						"nullable": true
					},
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"UseServerAccount":
					{
						"type": "boolean",
						"nullable": true
					},
					"VerifyCertServerName":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"VerifyServerSSLCert":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCertVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCRLVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"WellKnownUserName":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordFile":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"SearchBase":
					{
						"type": "string",
						"nullable": true
					},
					"SearchField":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "LDAPSettings (for create)"
			},
			"ibm.tm1.api.v1.LDAPSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"Host":
					{
						"type": "string",
						"nullable": true
					},
					"Port":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"UseServerAccount":
					{
						"type": "boolean",
						"nullable": true
					},
					"VerifyCertServerName":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						}
					},
					"VerifyServerSSLCert":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCertVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipSSLCRLVerification":
					{
						"type": "boolean",
						"nullable": true
					},
					"WellKnownUserName":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordFile":
					{
						"type": "string",
						"nullable": true
					},
					"PasswordKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"SearchBase":
					{
						"type": "string",
						"nullable": true
					},
					"SearchField":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "LDAPSettings (for update)"
			},
			"ibm.tm1.api.v1.Level":
			{
				"type": "object",
				"properties":
				{
					"Number":
					{
						"type": "integer",
						"format": "int32",
						"description": "The level number."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the level."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The unique name of the level."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the level, that is, the number of elements in the level."
					},
					"Type":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The type of the level."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy",
						"description": "The hierarchy of the level."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
						},
						"description": "The members of the level."
					}
				},
				"title": "Level",
				"description": "A level in the hierarchy of a set of cubes."
			},
			"ibm.tm1.api.v1.Level-create":
			{
				"type": "object",
				"properties":
				{
					"Number":
					{
						"type": "integer",
						"format": "int32",
						"description": "The level number."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the level."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The unique name of the level."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the level, that is, the number of elements in the level."
					},
					"Type":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The type of the level."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create",
						"description": "The hierarchy of the level."
					},
					"Members":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
						},
						"description": "The members of the level."
					}
				},
				"required": ["Number"],
				"title": "Level (for create)",
				"description": "A level in the hierarchy of a set of cubes."
			},
			"ibm.tm1.api.v1.Level-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the level."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The unique name of the level."
					},
					"Cardinality":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The cardinality of the level, that is, the number of elements in the level."
					},
					"Type":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The type of the level."
					}
				},
				"title": "Level (for update)",
				"description": "A level in the hierarchy of a set of cubes."
			},
			"ibm.tm1.api.v1.Link":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"URL":
							{
								"type": "string",
								"description": "The URL of the link."
							}
						}
					}
				],
				"title": "Link",
				"description": "A link to another website or resource."
			},
			"ibm.tm1.api.v1.Link-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"URL":
							{
								"type": "string",
								"description": "The URL of the link."
							}
						}
					}
				],
				"title": "Link (for create)",
				"description": "A link to another website or resource."
			},
			"ibm.tm1.api.v1.Link-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object",
						"properties":
						{
							"URL":
							{
								"type": "string",
								"description": "The URL of the link."
							}
						}
					}
				],
				"title": "Link (for update)",
				"description": "A link to another website or resource."
			},
			"ibm.tm1.api.v1.LocalizedAttributes":
			{
				"type": "object",
				"properties":
				{
					"LocaleID":
					{
						"type": "string",
						"description": "The ID of the locale. To use the default locale, specify 'Default'."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "A set of attributes for the locale."
					}
				},
				"title": "LocalizedAttributes",
				"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.  \nFor example, \"fr\" identifies French and \"fr-CA\" identifies Canadian French."
			},
			"ibm.tm1.api.v1.LocalizedAttributes-create":
			{
				"type": "object",
				"properties":
				{
					"LocaleID":
					{
						"type": "string",
						"description": "The ID of the locale. To use the default locale, specify 'Default'."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "A set of attributes for the locale."
					}
				},
				"required": ["LocaleID"],
				"title": "LocalizedAttributes (for create)",
				"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.  \nFor example, \"fr\" identifies French and \"fr-CA\" identifies Canadian French."
			},
			"ibm.tm1.api.v1.LocalizedAttributes-update":
			{
				"type": "object",
				"properties":
				{
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "A set of attributes for the locale."
					}
				},
				"title": "LocalizedAttributes (for update)",
				"description": "A combination of international language codes defined by ISO 639-1 to identify major languages and IETF language tags to identify specific locales.  \nFor example, \"fr\" identifies French and \"fr-CA\" identifies Canadian French."
			},
			"ibm.tm1.api.v1.LockingSettings":
			{
				"type": "object",
				"properties":
				{
					"SubsetElementLockBreathing":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseLocalCopiesForPublicDynamicSubsets":
					{
						"type": "boolean",
						"nullable": true
					},
					"PullInvalidationSubsets":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "LockingSettings"
			},
			"ibm.tm1.api.v1.LockingSettings-create":
			{
				"type": "object",
				"properties":
				{
					"SubsetElementLockBreathing":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseLocalCopiesForPublicDynamicSubsets":
					{
						"type": "boolean",
						"nullable": true
					},
					"PullInvalidationSubsets":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "LockingSettings (for create)"
			},
			"ibm.tm1.api.v1.LockingSettings-update":
			{
				"type": "object",
				"properties":
				{
					"SubsetElementLockBreathing":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseLocalCopiesForPublicDynamicSubsets":
					{
						"type": "boolean",
						"nullable": true
					},
					"PullInvalidationSubsets":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "LockingSettings (for update)"
			},
			"ibm.tm1.api.v1.LogLevel":
			{
				"type": "string",
				"enum": ["Fatal", "Error", "Warning", "Info", "Debug", "Unknown", "Off"],
				"title": "LogLevel"
			},
			"ibm.tm1.api.v1.Logger":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the logger."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the logger, that is, Fatal, Error, Warning, Info, Debug, Unknown, or Off."
					}
				},
				"title": "Logger",
				"description": "A logger to be configured for a TM1 server."
			},
			"ibm.tm1.api.v1.Logger-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the logger."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the logger, that is, Fatal, Error, Warning, Info, Debug, Unknown, or Off."
					}
				},
				"required": ["Name"],
				"title": "Logger (for create)",
				"description": "A logger to be configured for a TM1 server."
			},
			"ibm.tm1.api.v1.Logger-update":
			{
				"type": "object",
				"properties":
				{
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the logger, that is, Fatal, Error, Warning, Info, Debug, Unknown, or Off."
					}
				},
				"title": "Logger (for update)",
				"description": "A logger to be configured for a TM1 server."
			},
			"ibm.tm1.api.v1.MDXView":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
					},
					{
						"type": "object",
						"properties":
						{
							"MDX":
							{
								"type": "string",
								"description": "An MDX expression that defines a cube view."
							}
						}
					}
				],
				"title": "MDXView",
				"description": "A view of a cube that is defined by an MDX expression."
			},
			"ibm.tm1.api.v1.MDXView-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
					},
					{
						"type": "object",
						"properties":
						{
							"MDX":
							{
								"type": "string",
								"description": "An MDX expression that defines a cube view."
							}
						}
					}
				],
				"title": "MDXView (for create)",
				"description": "A view of a cube that is defined by an MDX expression."
			},
			"ibm.tm1.api.v1.MDXView-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View-update"
					},
					{
						"type": "object",
						"properties":
						{
							"MDX":
							{
								"type": "string",
								"description": "An MDX expression that defines a cube view."
							}
						}
					}
				],
				"title": "MDXView (for update)",
				"description": "A view of a cube that is defined by an MDX expression."
			},
			"ibm.tm1.api.v1.MTQSettings":
			{
				"type": "object",
				"properties":
				{
					"UseAllThreads":
					{
						"type": "boolean",
						"nullable": true
					},
					"NumberOfThreadsToUse":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SingleCellConsolidation":
					{
						"type": "boolean",
						"nullable": true
					},
					"ImmediateCheckForSplit":
					{
						"type": "boolean",
						"nullable": true
					},
					"OperationProgressCheckSkipLoopSize":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MTFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"MTFeedersAtStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MTQSettings"
			},
			"ibm.tm1.api.v1.MTQSettings-create":
			{
				"type": "object",
				"properties":
				{
					"UseAllThreads":
					{
						"type": "boolean",
						"nullable": true
					},
					"NumberOfThreadsToUse":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SingleCellConsolidation":
					{
						"type": "boolean",
						"nullable": true
					},
					"ImmediateCheckForSplit":
					{
						"type": "boolean",
						"nullable": true
					},
					"OperationProgressCheckSkipLoopSize":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MTFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"MTFeedersAtStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MTQSettings (for create)"
			},
			"ibm.tm1.api.v1.MTQSettings-update":
			{
				"type": "object",
				"properties":
				{
					"UseAllThreads":
					{
						"type": "boolean",
						"nullable": true
					},
					"NumberOfThreadsToUse":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"SingleCellConsolidation":
					{
						"type": "boolean",
						"nullable": true
					},
					"ImmediateCheckForSplit":
					{
						"type": "boolean",
						"nullable": true
					},
					"OperationProgressCheckSkipLoopSize":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MTFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"MTFeedersAtStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MTQSettings (for update)"
			},
			"ibm.tm1.api.v1.Member":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the member."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the member, preceded by the name of the parent, for example, [dimension_name]:[member_name]."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemberType"
							}
						],
						"description": "The type of the member."
					},
					"Ordinal":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"IsPlaceholder":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether this member is a placeholder."
					},
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the member within a consolidation.  \nWeight is a factor applied to an individual member when summing the members of a consolidation."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the member."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy",
						"description": "The hierarchy of the member."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Level",
						"description": "The level within the hierarchy on which this member resides."
					},
					"Element":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element",
						"description": "The member element."
					},
					"Parent":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
							}
						],
						"description": "The parent of the member in the consolidation."
					},
					"Children":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
						},
						"description": "The children of the member in the consolidation."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the member."
					}
				},
				"title": "Member",
				"description": "A set of elements that are members of the consolidation."
			},
			"ibm.tm1.api.v1.Member-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the member."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the member, preceded by the name of the parent, for example, [dimension_name]:[member_name]."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemberType"
							}
						],
						"description": "The type of the member."
					},
					"Ordinal":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"IsPlaceholder":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether this member is a placeholder."
					},
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the member within a consolidation.  \nWeight is a factor applied to an individual member when summing the members of a consolidation."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the member."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create",
						"description": "The hierarchy of the member."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Level-create",
						"description": "The level within the hierarchy on which this member resides."
					},
					"Element":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create",
						"description": "The member element."
					},
					"Parent":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
							}
						],
						"description": "The parent of the member in the consolidation."
					},
					"Children":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
						},
						"description": "The children of the member in the consolidation."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the member."
					}
				},
				"required": ["Name"],
				"title": "Member (for create)",
				"description": "A set of elements that are members of the consolidation."
			},
			"ibm.tm1.api.v1.Member-update":
			{
				"type": "object",
				"properties":
				{
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the member, preceded by the name of the parent, for example, [dimension_name]:[member_name]."
					},
					"Type":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemberType"
							}
						],
						"description": "The type of the member."
					},
					"Ordinal":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A number that identifies an entity's position in a series."
					},
					"IsPlaceholder":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether this member is a placeholder."
					},
					"Weight":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14,
						"description": "The weight of the member within a consolidation.  \nWeight is a factor applied to an individual member when summing the members of a consolidation."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the member."
					}
				},
				"title": "Member (for update)",
				"description": "A set of elements that are members of the consolidation."
			},
			"ibm.tm1.api.v1.MemberType":
			{
				"type": "string",
				"enum": ["Unknown", "Regular", "All", "Measure", "Formula"],
				"title": "MemberType"
			},
			"ibm.tm1.api.v1.MemorySettings":
			{
				"type": "object",
				"properties":
				{
					"ApplyMaximumViewSizeToEntireTransaction":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableMemoryCache":
					{
						"type": "boolean",
						"nullable": true
					},
					"CacheFriendlyMalloc":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumViewSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumUserSandboxSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumMemoryForSubsetUndoKB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"LockPagesInMemory":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MemorySettings"
			},
			"ibm.tm1.api.v1.MemorySettings-create":
			{
				"type": "object",
				"properties":
				{
					"ApplyMaximumViewSizeToEntireTransaction":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableMemoryCache":
					{
						"type": "boolean",
						"nullable": true
					},
					"CacheFriendlyMalloc":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumViewSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumUserSandboxSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumMemoryForSubsetUndoKB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"LockPagesInMemory":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MemorySettings (for create)"
			},
			"ibm.tm1.api.v1.MemorySettings-update":
			{
				"type": "object",
				"properties":
				{
					"ApplyMaximumViewSizeToEntireTransaction":
					{
						"type": "boolean",
						"nullable": true
					},
					"DisableMemoryCache":
					{
						"type": "boolean",
						"nullable": true
					},
					"CacheFriendlyMalloc":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumViewSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumUserSandboxSizeMB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"MaximumMemoryForSubsetUndoKB":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"LockPagesInMemory":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "MemorySettings (for update)"
			},
			"ibm.tm1.api.v1.MessageLogEntry":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "The ID of the message log entry."
					},
					"ThreadID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The thread ID of the message log entry."
					},
					"SessionID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The session ID of the message log entry."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the message log entry, that is, Fatal, Error, Warning, Info, Debug, Unknown, Off."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the message log entry."
					},
					"Logger":
					{
						"type": "string",
						"description": "The logger of the message log entry."
					},
					"Message":
					{
						"type": "string",
						"description": "The message in the message log entry."
					}
				},
				"title": "MessageLogEntry",
				"description": "An entry in the message log.  \nThe message log displays status messages on the activity of the TM1 server in a log file. These messages contain details on activity such as executed processes, chores, loaded cubes and dimensions, and synchronized replication."
			},
			"ibm.tm1.api.v1.MessageLogEntry-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "The ID of the message log entry."
					},
					"ThreadID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The thread ID of the message log entry."
					},
					"SessionID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The session ID of the message log entry."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the message log entry, that is, Fatal, Error, Warning, Info, Debug, Unknown, Off."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the message log entry."
					},
					"Logger":
					{
						"type": "string",
						"description": "The logger of the message log entry."
					},
					"Message":
					{
						"type": "string",
						"description": "The message in the message log entry."
					}
				},
				"required": ["ID"],
				"title": "MessageLogEntry (for create)",
				"description": "An entry in the message log.  \nThe message log displays status messages on the activity of the TM1 server in a log file. These messages contain details on activity such as executed processes, chores, loaded cubes and dimensions, and synchronized replication."
			},
			"ibm.tm1.api.v1.MessageLogEntry-update":
			{
				"type": "object",
				"properties":
				{
					"ThreadID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The thread ID of the message log entry."
					},
					"SessionID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The session ID of the message log entry."
					},
					"Level":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.LogLevel",
						"description": "The level of the message log entry, that is, Fatal, Error, Warning, Info, Debug, Unknown, Off."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the message log entry."
					},
					"Logger":
					{
						"type": "string",
						"description": "The logger of the message log entry."
					},
					"Message":
					{
						"type": "string",
						"description": "The message in the message log entry."
					}
				},
				"title": "MessageLogEntry (for update)",
				"description": "An entry in the message log.  \nThe message log displays status messages on the activity of the TM1 server in a log file. These messages contain details on activity such as executed processes, chores, loaded cubes and dimensions, and synchronized replication."
			},
			"ibm.tm1.api.v1.ModellingSettings":
			{
				"type": "object",
				"properties":
				{
					"MDXSelectCalculatedMemberInputs":
					{
						"type": "boolean",
						"nullable": true
					},
					"DefaultMeasuresDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"UserDefinedCalculations":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableNewHierarchyCreation":
					{
						"type": "boolean",
						"nullable": true
					},
					"Spreading":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SpreadingSettings"
							}
						]
					},
					"TI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TISettings"
							}
						]
					},
					"Rules":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.RulesSettings"
							}
						]
					},
					"Startup":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StartupSettings"
							}
						]
					},
					"Synchronization":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SynchronizationSettings"
							}
						]
					}
				},
				"title": "ModellingSettings"
			},
			"ibm.tm1.api.v1.ModellingSettings-create":
			{
				"type": "object",
				"properties":
				{
					"MDXSelectCalculatedMemberInputs":
					{
						"type": "boolean",
						"nullable": true
					},
					"DefaultMeasuresDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"UserDefinedCalculations":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableNewHierarchyCreation":
					{
						"type": "boolean",
						"nullable": true
					},
					"Spreading":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SpreadingSettings-create"
							}
						]
					},
					"TI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TISettings-create"
							}
						]
					},
					"Rules":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.RulesSettings-create"
							}
						]
					},
					"Startup":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StartupSettings-create"
							}
						]
					},
					"Synchronization":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SynchronizationSettings-create"
							}
						]
					}
				},
				"title": "ModellingSettings (for create)"
			},
			"ibm.tm1.api.v1.ModellingSettings-update":
			{
				"type": "object",
				"properties":
				{
					"MDXSelectCalculatedMemberInputs":
					{
						"type": "boolean",
						"nullable": true
					},
					"DefaultMeasuresDimension":
					{
						"type": "boolean",
						"nullable": true
					},
					"UserDefinedCalculations":
					{
						"type": "boolean",
						"nullable": true
					},
					"EnableNewHierarchyCreation":
					{
						"type": "boolean",
						"nullable": true
					},
					"Spreading":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SpreadingSettings-update"
							}
						]
					},
					"TI":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TISettings-update"
							}
						]
					},
					"Rules":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.RulesSettings-update"
							}
						]
					},
					"Startup":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StartupSettings-update"
							}
						]
					},
					"Synchronization":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SynchronizationSettings-update"
							}
						]
					}
				},
				"title": "ModellingSettings (for update)"
			},
			"ibm.tm1.api.v1.NameValuePair":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "NameValuePair"
			},
			"ibm.tm1.api.v1.NameValuePair-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "NameValuePair (for create)"
			},
			"ibm.tm1.api.v1.NameValuePair-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "NameValuePair (for update)"
			},
			"ibm.tm1.api.v1.NativeView":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
					},
					{
						"type": "object",
						"properties":
						{
							"Columns":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection"
								},
								"description": "The dimension elements that exist on the column axis of a view."
							},
							"Rows":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection"
								},
								"description": "The dimension elements that exist on the row axis of a view."
							},
							"Titles":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewTitle"
								},
								"description": "The dimension elements that exist as title (context) elements of a view."
							},
							"SuppressEmptyColumns":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any columns that contain only zero values."
							},
							"SuppressEmptyRows":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any rows that contain only zero values."
							},
							"FormatString":
							{
								"type": "string",
								"description": "The format of the elements in the view."
							}
						}
					}
				],
				"title": "NativeView",
				"description": "A native view of a cube."
			},
			"ibm.tm1.api.v1.NativeView-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Columns":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection-create"
								},
								"description": "The dimension elements that exist on the column axis of a view."
							},
							"Rows":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection-create"
								},
								"description": "The dimension elements that exist on the row axis of a view."
							},
							"Titles":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewTitle-create"
								},
								"description": "The dimension elements that exist as title (context) elements of a view."
							},
							"SuppressEmptyColumns":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any columns that contain only zero values."
							},
							"SuppressEmptyRows":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any rows that contain only zero values."
							},
							"FormatString":
							{
								"type": "string",
								"description": "The format of the elements in the view."
							}
						}
					}
				],
				"title": "NativeView (for create)",
				"description": "A native view of a cube."
			},
			"ibm.tm1.api.v1.NativeView-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.View-update"
					},
					{
						"type": "object",
						"properties":
						{
							"Columns":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection-update"
								},
								"description": "The dimension elements that exist on the column axis of a view."
							},
							"Rows":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewAxisSelection-update"
								},
								"description": "The dimension elements that exist on the row axis of a view."
							},
							"Titles":
							{
								"type": "array",
								"items":
								{
									"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewTitle-update"
								},
								"description": "The dimension elements that exist as title (context) elements of a view."
							},
							"SuppressEmptyColumns":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any columns that contain only zero values."
							},
							"SuppressEmptyRows":
							{
								"type": "boolean",
								"nullable": true,
								"description": "A Boolean that suppresses any rows that contain only zero values."
							},
							"FormatString":
							{
								"type": "string",
								"description": "The format of the elements in the view."
							}
						}
					}
				],
				"title": "NativeView (for update)",
				"description": "A native view of a cube."
			},
			"ibm.tm1.api.v1.NetworkSettings":
			{
				"type": "object",
				"properties":
				{
					"IPAddress":
					{
						"type": "string",
						"nullable": true
					},
					"IPVersion":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.IPVersion"
							}
						]
					},
					"NetRecvBlockingWaitLimit":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"NetRecvMaxClientIOWaitWithinAPIs":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"IdleConnectionTimeOut":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ReceiveProgressResponseTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "NetworkSettings"
			},
			"ibm.tm1.api.v1.NetworkSettings-create":
			{
				"type": "object",
				"properties":
				{
					"IPAddress":
					{
						"type": "string",
						"nullable": true
					},
					"IPVersion":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.IPVersion"
							}
						]
					},
					"NetRecvBlockingWaitLimit":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"NetRecvMaxClientIOWaitWithinAPIs":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"IdleConnectionTimeOut":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ReceiveProgressResponseTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "NetworkSettings (for create)"
			},
			"ibm.tm1.api.v1.NetworkSettings-update":
			{
				"type": "object",
				"properties":
				{
					"IPAddress":
					{
						"type": "string",
						"nullable": true
					},
					"IPVersion":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.IPVersion"
							}
						]
					},
					"NetRecvBlockingWaitLimit":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"NetRecvMaxClientIOWaitWithinAPIs":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"IdleConnectionTimeOut":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					},
					"ReceiveProgressResponseTimeout":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "NetworkSettings (for update)"
			},
			"ibm.tm1.api.v1.OracleErrorForceRowStatus":
			{
				"type": "string",
				"enum": ["AutoDetect", "Default", "UseSQLULEN"],
				"title": "OracleErrorForceRowStatus"
			},
			"ibm.tm1.api.v1.PerformanceSettings":
			{
				"type": "object",
				"properties":
				{
					"PrivilegeGenerationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"Memory":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemorySettings"
							}
						]
					},
					"MTQ":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MTQSettings"
							}
						]
					},
					"Locking":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LockingSettings"
							}
						]
					},
					"ViewCalculation":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewCalculationSettings"
							}
						]
					},
					"Stargate":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StargateSettings"
							}
						]
					},
					"JobQueuing":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JobQueuingSettings"
							}
						]
					}
				},
				"title": "PerformanceSettings"
			},
			"ibm.tm1.api.v1.PerformanceSettings-create":
			{
				"type": "object",
				"properties":
				{
					"PrivilegeGenerationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"Memory":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemorySettings-create"
							}
						]
					},
					"MTQ":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MTQSettings-create"
							}
						]
					},
					"Locking":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LockingSettings-create"
							}
						]
					},
					"ViewCalculation":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewCalculationSettings-create"
							}
						]
					},
					"Stargate":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StargateSettings-create"
							}
						]
					},
					"JobQueuing":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JobQueuingSettings-create"
							}
						]
					}
				},
				"title": "PerformanceSettings (for create)"
			},
			"ibm.tm1.api.v1.PerformanceSettings-update":
			{
				"type": "object",
				"properties":
				{
					"PrivilegeGenerationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"Memory":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MemorySettings-update"
							}
						]
					},
					"MTQ":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.MTQSettings-update"
							}
						]
					},
					"Locking":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.LockingSettings-update"
							}
						]
					},
					"ViewCalculation":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ViewCalculationSettings-update"
							}
						]
					},
					"Stargate":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.StargateSettings-update"
							}
						]
					},
					"JobQueuing":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.JobQueuingSettings-update"
							}
						]
					}
				},
				"title": "PerformanceSettings (for update)"
			},
			"ibm.tm1.api.v1.Process":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a TurboIntegrator process."
					},
					"HasSecurityAccess":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the user security access to run this process."
					},
					"PrologProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Prolog stage of the process."
					},
					"MetadataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Metadata stage of the process."
					},
					"DataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Data stage of the process."
					},
					"EpilogProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Epilog stage of the process."
					},
					"DataSource":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDataSource"
							}
						],
						"description": "The source of the data for the process."
					},
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessParameter"
						},
						"description": "Parameters used by the process."
					},
					"Variables":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariable"
						},
						"description": "Variables used by the process."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the process."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the process."
					},
					"ErrorLogs":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessErrorLog"
						},
						"description": "A collection of error logs for the process."
					}
				},
				"title": "Process",
				"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata."
			},
			"ibm.tm1.api.v1.Process-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a TurboIntegrator process."
					},
					"HasSecurityAccess":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the user security access to run this process."
					},
					"PrologProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Prolog stage of the process."
					},
					"MetadataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Metadata stage of the process."
					},
					"DataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Data stage of the process."
					},
					"EpilogProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Epilog stage of the process."
					},
					"DataSource":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDataSource-create"
							}
						],
						"description": "The source of the data for the process."
					},
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessParameter-create"
						},
						"description": "Parameters used by the process."
					},
					"Variables":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariable-create"
						},
						"description": "Variables used by the process."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the process."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the process."
					},
					"ErrorLogs":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessErrorLog-create"
						},
						"description": "A collection of error logs for the process."
					}
				},
				"required": ["Name"],
				"title": "Process (for create)",
				"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata."
			},
			"ibm.tm1.api.v1.Process-update":
			{
				"type": "object",
				"properties":
				{
					"HasSecurityAccess":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the user security access to run this process."
					},
					"PrologProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Prolog stage of the process."
					},
					"MetadataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Metadata stage of the process."
					},
					"DataProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Data stage of the process."
					},
					"EpilogProcedure":
					{
						"type": "string",
						"nullable": true,
						"description": "The code that is executed during the Epilog stage of the process."
					},
					"DataSource":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDataSource-update"
							}
						],
						"description": "The source of the data for the process."
					},
					"Parameters":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessParameter-update"
						},
						"description": "Parameters used by the process."
					},
					"Variables":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariable-update"
						},
						"description": "Variables used by the process."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the process."
					}
				},
				"title": "Process (for update)",
				"description": "A TurboIntegrator process that can be used to manipulate TM1 data and metadata."
			},
			"ibm.tm1.api.v1.ProcessDataSource":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"type": "string"
					}
				},
				"title": "ProcessDataSource"
			},
			"ibm.tm1.api.v1.ProcessDataSource-create":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"type": "string"
					}
				},
				"title": "ProcessDataSource (for create)"
			},
			"ibm.tm1.api.v1.ProcessDataSource-update":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"type": "string"
					}
				},
				"title": "ProcessDataSource (for update)"
			},
			"ibm.tm1.api.v1.ProcessDebugContext":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string"
					},
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStatus",
						"description": "The state of the process that is being debugged."
					},
					"LastActivityDuration":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The number of milliseconds that have elapsed since the last debug action."
					},
					"ObjectLocks":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLock"
						},
						"description": "A collection of object locks that are held by the TurboIntegrator process under debug."
					},
					"CurrentBreakpoint":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
							}
						],
						"description": "The breakpoint that the process is currently paused at."
					},
					"Process":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Process",
						"description": "The TurboIntegrator process passed to the debug action."
					},
					"CallStack":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStackFrame"
						},
						"description": "The execution stack that represents the current execution state."
					},
					"Breakpoints":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
						},
						"description": "A list of breakpoints that apply to this debug session."
					},
					"Thread":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
							}
						],
						"description": "The thread that is executing the process for the debug session."
					},
					"Result":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteResult"
							}
						],
						"description": "Once the process execution has completed this contains the execution results."
					}
				},
				"title": "ProcessDebugContext",
				"description": "A debug session of a TurboIntegrator process."
			},
			"ibm.tm1.api.v1.ProcessDebugContext-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string"
					},
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStatus",
						"description": "The state of the process that is being debugged."
					},
					"LastActivityDuration":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The number of milliseconds that have elapsed since the last debug action."
					},
					"ObjectLocks":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLock-create"
						},
						"description": "A collection of object locks that are held by the TurboIntegrator process under debug."
					},
					"CurrentBreakpoint":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
							}
						],
						"description": "The breakpoint that the process is currently paused at."
					},
					"Process":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-create",
						"description": "The TurboIntegrator process passed to the debug action."
					},
					"CallStack":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStackFrame-create"
						},
						"description": "The execution stack that represents the current execution state."
					},
					"Breakpoints":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
						},
						"description": "A list of breakpoints that apply to this debug session."
					},
					"Thread":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-create"
							}
						],
						"description": "The thread that is executing the process for the debug session."
					},
					"Result":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteResult-create"
							}
						],
						"description": "Once the process execution has completed this contains the execution results."
					}
				},
				"required": ["ID"],
				"title": "ProcessDebugContext (for create)",
				"description": "A debug session of a TurboIntegrator process."
			},
			"ibm.tm1.api.v1.ProcessDebugContext-update":
			{
				"type": "object",
				"properties":
				{
					"Status":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextStatus",
						"description": "The state of the process that is being debugged."
					},
					"LastActivityDuration":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The number of milliseconds that have elapsed since the last debug action."
					},
					"ObjectLocks":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLock-update"
						},
						"description": "A collection of object locks that are held by the TurboIntegrator process under debug."
					},
					"Result":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteResult-update"
							}
						],
						"description": "Once the process execution has completed this contains the execution results."
					}
				},
				"title": "ProcessDebugContext (for update)",
				"description": "A debug session of a TurboIntegrator process."
			},
			"ibm.tm1.api.v1.ProcessDebugContextBreakpoint":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "integer",
						"format": "int32"
					},
					"Enabled":
					{
						"type": "boolean"
					},
					"HitMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextHitMode"
					},
					"HitCount":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"Expression":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "ProcessDebugContextBreakpoint",
				"description": "A conditional expression that gets evaluated each time the breakpoint is hit. If the expression evaluates to true, execution is paused. Otherwise execution continues.  \nValid operators are '=', '<>', '@=', '@<>', '<', '<=', '>', '>=', '&', '%', '~', '+', '-', '*', '/', '\\', '^', '|'. Parenthesis and variable names are also supported. Function calls are not allowed. These operators should have the same semantics when used here as they would if used in a TurboIntegrator script."
			},
			"ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "integer",
						"format": "int32"
					},
					"Enabled":
					{
						"type": "boolean"
					},
					"HitMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextHitMode"
					},
					"HitCount":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"Expression":
					{
						"type": "string",
						"nullable": true
					}
				},
				"required": ["ID"],
				"title": "ProcessDebugContextBreakpoint (for create)",
				"description": "A conditional expression that gets evaluated each time the breakpoint is hit. If the expression evaluates to true, execution is paused. Otherwise execution continues.  \nValid operators are '=', '<>', '@=', '@<>', '<', '<=', '>', '>=', '&', '%', '~', '+', '-', '*', '/', '\\', '^', '|'. Parenthesis and variable names are also supported. Function calls are not allowed. These operators should have the same semantics when used here as they would if used in a TurboIntegrator script."
			},
			"ibm.tm1.api.v1.ProcessDebugContextBreakpoint-update":
			{
				"type": "object",
				"properties":
				{
					"Enabled":
					{
						"type": "boolean"
					},
					"HitMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextHitMode"
					},
					"HitCount":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"Expression":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "ProcessDebugContextBreakpoint (for update)",
				"description": "A conditional expression that gets evaluated each time the breakpoint is hit. If the expression evaluates to true, execution is paused. Otherwise execution continues.  \nValid operators are '=', '<>', '@=', '@<>', '<', '<=', '>', '>=', '&', '%', '~', '+', '-', '*', '/', '\\', '^', '|'. Parenthesis and variable names are also supported. Function calls are not allowed. These operators should have the same semantics when used here as they would if used in a TurboIntegrator script."
			},
			"ibm.tm1.api.v1.ProcessDebugContextDataBreakpoint":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
					},
					{
						"type": "object",
						"properties":
						{
							"VariableName":
							{
								"type": "string"
							}
						}
					}
				],
				"title": "ProcessDebugContextDataBreakpoint",
				"description": "A breakpoint that pauses execution when the named variable is written to."
			},
			"ibm.tm1.api.v1.ProcessDebugContextDataBreakpoint-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
					},
					{
						"type": "object",
						"properties":
						{
							"VariableName":
							{
								"type": "string"
							}
						}
					}
				],
				"title": "ProcessDebugContextDataBreakpoint (for create)",
				"description": "A breakpoint that pauses execution when the named variable is written to."
			},
			"ibm.tm1.api.v1.ProcessDebugContextDataBreakpoint-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-update"
					},
					{
						"type": "object",
						"properties":
						{
							"VariableName":
							{
								"type": "string"
							}
						}
					}
				],
				"title": "ProcessDebugContextDataBreakpoint (for update)",
				"description": "A breakpoint that pauses execution when the named variable is written to."
			},
			"ibm.tm1.api.v1.ProcessDebugContextHitMode":
			{
				"type": "string",
				"enum": ["BreakAlways", "BreakEqual", "BreakGreaterOrEqual"],
				"title": "ProcessDebugContextHitMode"
			},
			"ibm.tm1.api.v1.ProcessDebugContextLineBreakpoint":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
					},
					{
						"type": "object",
						"properties":
						{
							"ProcessName":
							{
								"type": "string"
							},
							"Procedure":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
							},
							"LineNumber":
							{
								"type": "integer",
								"format": "int32"
							}
						}
					}
				],
				"title": "ProcessDebugContextLineBreakpoint",
				"description": "A breakpoint that pauses execution at a specific script line."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLineBreakpoint-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
					},
					{
						"type": "object",
						"properties":
						{
							"ProcessName":
							{
								"type": "string"
							},
							"Procedure":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
							},
							"LineNumber":
							{
								"type": "integer",
								"format": "int32"
							}
						}
					}
				],
				"title": "ProcessDebugContextLineBreakpoint (for create)",
				"description": "A breakpoint that pauses execution at a specific script line."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLineBreakpoint-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-update"
					},
					{
						"type": "object",
						"properties":
						{
							"ProcessName":
							{
								"type": "string"
							},
							"Procedure":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
							},
							"LineNumber":
							{
								"type": "integer",
								"format": "int32"
							}
						}
					}
				],
				"title": "ProcessDebugContextLineBreakpoint (for update)",
				"description": "A breakpoint that pauses execution at a specific script line."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLockBreakpoint":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint"
					},
					{
						"type": "object",
						"properties":
						{
							"ObjectName":
							{
								"type": "string"
							},
							"ObjectType":
							{
								"type": "string"
							},
							"LockMode":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
							}
						}
					}
				],
				"title": "ProcessDebugContextLockBreakpoint",
				"description": "A breakpoint that pauses execution when an object lock is acquired."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLockBreakpoint-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-create"
					},
					{
						"type": "object",
						"properties":
						{
							"ObjectName":
							{
								"type": "string"
							},
							"ObjectType":
							{
								"type": "string"
							},
							"LockMode":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
							}
						}
					}
				],
				"title": "ProcessDebugContextLockBreakpoint (for create)",
				"description": "A breakpoint that pauses execution when an object lock is acquired."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLockBreakpoint-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextBreakpoint-update"
					},
					{
						"type": "object",
						"properties":
						{
							"ObjectName":
							{
								"type": "string"
							},
							"ObjectType":
							{
								"type": "string"
							},
							"LockMode":
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
							}
						}
					}
				],
				"title": "ProcessDebugContextLockBreakpoint (for update)",
				"description": "A breakpoint that pauses execution when an object lock is acquired."
			},
			"ibm.tm1.api.v1.ProcessDebugContextLockMode":
			{
				"type": "string",
				"enum": ["None", "Read", "ReadOnly", "IntenteXclusiveNoCopy", "IntenteXclusive", "Write", "Any"],
				"title": "ProcessDebugContextLockMode"
			},
			"ibm.tm1.api.v1.ProcessDebugContextObjectLock":
			{
				"type": "object",
				"properties":
				{
					"ObjectName":
					{
						"type": "string"
					},
					"ObjectType":
					{
						"type": "string"
					},
					"LockMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
					},
					"Scope":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLockScope"
					}
				},
				"title": "ProcessDebugContextObjectLock"
			},
			"ibm.tm1.api.v1.ProcessDebugContextObjectLock-create":
			{
				"type": "object",
				"properties":
				{
					"ObjectName":
					{
						"type": "string"
					},
					"ObjectType":
					{
						"type": "string"
					},
					"LockMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
					},
					"Scope":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLockScope"
					}
				},
				"title": "ProcessDebugContextObjectLock (for create)"
			},
			"ibm.tm1.api.v1.ProcessDebugContextObjectLock-update":
			{
				"type": "object",
				"properties":
				{
					"ObjectName":
					{
						"type": "string"
					},
					"ObjectType":
					{
						"type": "string"
					},
					"LockMode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextLockMode"
					},
					"Scope":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextObjectLockScope"
					}
				},
				"title": "ProcessDebugContextObjectLock (for update)"
			},
			"ibm.tm1.api.v1.ProcessDebugContextObjectLockScope":
			{
				"type": "string",
				"enum": ["Sandbox", "Shared", "Temporary"],
				"title": "ProcessDebugContextObjectLockScope"
			},
			"ibm.tm1.api.v1.ProcessDebugContextStackFrame":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string"
					},
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"RecordNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"Process":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
					},
					"Variables":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextVariable"
						},
						"description": "The entire list of active variables available to the process."
					}
				},
				"title": "ProcessDebugContextStackFrame",
				"description": "A single frame in the execution stack."
			},
			"ibm.tm1.api.v1.ProcessDebugContextStackFrame-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"type": "string"
					},
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"RecordNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"Process":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-create"
					},
					"Variables":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessDebugContextVariable-create"
						},
						"description": "The entire list of active variables available to the process."
					}
				},
				"required": ["ID"],
				"title": "ProcessDebugContextStackFrame (for create)",
				"description": "A single frame in the execution stack."
			},
			"ibm.tm1.api.v1.ProcessDebugContextStackFrame-update":
			{
				"type": "object",
				"properties":
				{
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"RecordNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ProcessDebugContextStackFrame (for update)",
				"description": "A single frame in the execution stack."
			},
			"ibm.tm1.api.v1.ProcessDebugContextStatus":
			{
				"type": "string",
				"enum": ["Unknown", "Running", "Paused", "Complete"],
				"title": "ProcessDebugContextStatus"
			},
			"ibm.tm1.api.v1.ProcessDebugContextVariable":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "ProcessDebugContextVariable"
			},
			"ibm.tm1.api.v1.ProcessDebugContextVariable-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"required": ["Name"],
				"title": "ProcessDebugContextVariable (for create)"
			},
			"ibm.tm1.api.v1.ProcessDebugContextVariable-update":
			{
				"type": "object",
				"properties":
				{
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					}
				},
				"title": "ProcessDebugContextVariable (for update)"
			},
			"ibm.tm1.api.v1.ProcessErrorLog":
			{
				"type": "object",
				"properties":
				{
					"Timestamp":
					{
						"type": "string",
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the process error."
					},
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"title": "ProcessErrorLog",
				"description": "A process error log entry."
			},
			"ibm.tm1.api.v1.ProcessErrorLog-create":
			{
				"type": "object",
				"properties":
				{
					"Timestamp":
					{
						"type": "string",
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the process error."
					},
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"required": ["Timestamp"],
				"title": "ProcessErrorLog (for create)",
				"description": "A process error log entry."
			},
			"ibm.tm1.api.v1.ProcessErrorLog-update":
			{
				"type": "object",
				"properties":
				{
					"Content":
					{
						"type": "string",
						"nullable": true,
						"format": "base64url",
						"description": "The content of the process error."
					}
				},
				"title": "ProcessErrorLog (for update)",
				"description": "A process error log entry."
			},
			"ibm.tm1.api.v1.ProcessExecuteResult":
			{
				"type": "object",
				"properties":
				{
					"ProcessExecuteStatusCode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteStatusCode",
						"description": "The status code return value."
					},
					"ErrorLogFile":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile"
							}
						],
						"description": "The error log for the process."
					}
				},
				"title": "ProcessExecuteResult",
				"description": "A process execution return value."
			},
			"ibm.tm1.api.v1.ProcessExecuteResult-create":
			{
				"type": "object",
				"properties":
				{
					"ProcessExecuteStatusCode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteStatusCode",
						"description": "The status code return value."
					},
					"ErrorLogFile":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ErrorLogFile-create"
							}
						],
						"description": "The error log for the process."
					}
				},
				"title": "ProcessExecuteResult (for create)",
				"description": "A process execution return value."
			},
			"ibm.tm1.api.v1.ProcessExecuteResult-update":
			{
				"type": "object",
				"properties":
				{
					"ProcessExecuteStatusCode":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessExecuteStatusCode",
						"description": "The status code return value."
					}
				},
				"title": "ProcessExecuteResult (for update)",
				"description": "A process execution return value."
			},
			"ibm.tm1.api.v1.ProcessExecuteStatusCode":
			{
				"type": "string",
				"enum": ["CompletedSuccessfully", "Aborted", "HasMinorErrors", "QuitCalled", "CompletedWithMessages", "RollbackCalled"],
				"title": "ProcessExecuteStatusCode"
			},
			"ibm.tm1.api.v1.ProcessParameter":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Prompt":
					{
						"type": "string",
						"nullable": true
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					}
				},
				"title": "ProcessParameter"
			},
			"ibm.tm1.api.v1.ProcessParameter-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Prompt":
					{
						"type": "string",
						"nullable": true
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					}
				},
				"title": "ProcessParameter (for create)"
			},
			"ibm.tm1.api.v1.ProcessParameter-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Prompt":
					{
						"type": "string",
						"nullable": true
					},
					"Value":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					}
				},
				"title": "ProcessParameter (for update)"
			},
			"ibm.tm1.api.v1.ProcessProcedure":
			{
				"type": "string",
				"enum": ["Prolog", "Metadata", "Data", "Epilog"],
				"title": "ProcessProcedure"
			},
			"ibm.tm1.api.v1.ProcessReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Process":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process"
									}
								],
								"description": "The process that is referenced."
							}
						}
					}
				],
				"title": "ProcessReference",
				"description": "A reference to a process."
			},
			"ibm.tm1.api.v1.ProcessReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Process":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Process-create"
									}
								],
								"description": "The process that is referenced."
							}
						}
					}
				],
				"title": "ProcessReference (for create)",
				"description": "A reference to a process."
			},
			"ibm.tm1.api.v1.ProcessReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "ProcessReference (for update)",
				"description": "A reference to a process."
			},
			"ibm.tm1.api.v1.ProcessSyntaxError":
			{
				"type": "object",
				"properties":
				{
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"Message":
					{
						"type": "string"
					}
				},
				"title": "ProcessSyntaxError"
			},
			"ibm.tm1.api.v1.ProcessSyntaxError-create":
			{
				"type": "object",
				"properties":
				{
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"Message":
					{
						"type": "string"
					}
				},
				"title": "ProcessSyntaxError (for create)"
			},
			"ibm.tm1.api.v1.ProcessSyntaxError-update":
			{
				"type": "object",
				"properties":
				{
					"Procedure":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessProcedure"
					},
					"LineNumber":
					{
						"type": "integer",
						"format": "int32"
					},
					"Message":
					{
						"type": "string"
					}
				},
				"title": "ProcessSyntaxError (for update)"
			},
			"ibm.tm1.api.v1.ProcessVariable":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					},
					"Position":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"StartByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EndByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ProcessVariable"
			},
			"ibm.tm1.api.v1.ProcessVariable-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					},
					"Position":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"StartByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EndByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ProcessVariable (for create)"
			},
			"ibm.tm1.api.v1.ProcessVariable-update":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string"
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ProcessVariableType"
					},
					"Position":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"StartByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EndByte":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ProcessVariable (for update)"
			},
			"ibm.tm1.api.v1.ProcessVariableType":
			{
				"type": "string",
				"enum": ["String", "Numeric"],
				"title": "ProcessVariableType"
			},
			"ibm.tm1.api.v1.RelationalDrillthrough":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough"
					},
					{
						"type": "object"
					}
				],
				"title": "RelationalDrillthrough",
				"description": "A drill through that drills to an Open Database Connectivity (ODBC) table."
			},
			"ibm.tm1.api.v1.RelationalDrillthrough-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough-create"
					},
					{
						"type": "object"
					}
				],
				"title": "RelationalDrillthrough (for create)",
				"description": "A drill through that drills to an Open Database Connectivity (ODBC) table."
			},
			"ibm.tm1.api.v1.RelationalDrillthrough-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Drillthrough-update"
					},
					{
						"type": "object"
					}
				],
				"title": "RelationalDrillthrough (for update)",
				"description": "A drill through that drills to an Open Database Connectivity (ODBC) table."
			},
			"ibm.tm1.api.v1.RuleSyntaxError":
			{
				"type": "object",
				"properties":
				{
					"LineNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The number of the line containing the error."
					},
					"Message":
					{
						"type": "string",
						"nullable": true,
						"description": "The error message."
					}
				},
				"title": "RuleSyntaxError"
			},
			"ibm.tm1.api.v1.RuleSyntaxError-create":
			{
				"type": "object",
				"properties":
				{
					"LineNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The number of the line containing the error."
					},
					"Message":
					{
						"type": "string",
						"nullable": true,
						"description": "The error message."
					}
				},
				"title": "RuleSyntaxError (for create)"
			},
			"ibm.tm1.api.v1.RuleSyntaxError-update":
			{
				"type": "object",
				"properties":
				{
					"LineNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The number of the line containing the error."
					},
					"Message":
					{
						"type": "string",
						"nullable": true,
						"description": "The error message."
					}
				},
				"title": "RuleSyntaxError (for update)"
			},
			"ibm.tm1.api.v1.RulesSettings":
			{
				"type": "object",
				"properties":
				{
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true
					},
					"AutomaticallyAddCubeDependencies":
					{
						"type": "boolean",
						"nullable": true
					},
					"RulesOverwriteCellsOnLoad":
					{
						"type": "boolean",
						"nullable": true
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "RulesSettings"
			},
			"ibm.tm1.api.v1.RulesSettings-create":
			{
				"type": "object",
				"properties":
				{
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true
					},
					"AutomaticallyAddCubeDependencies":
					{
						"type": "boolean",
						"nullable": true
					},
					"RulesOverwriteCellsOnLoad":
					{
						"type": "boolean",
						"nullable": true
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "RulesSettings (for create)"
			},
			"ibm.tm1.api.v1.RulesSettings-update":
			{
				"type": "object",
				"properties":
				{
					"AllowSeparateNandCRules":
					{
						"type": "boolean",
						"nullable": true
					},
					"AutomaticallyAddCubeDependencies":
					{
						"type": "boolean",
						"nullable": true
					},
					"RulesOverwriteCellsOnLoad":
					{
						"type": "boolean",
						"nullable": true
					},
					"ForceReevaluationOfFeedersForFedCellsOnDataChange":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "RulesSettings (for update)"
			},
			"ibm.tm1.api.v1.SQLDataSource":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the SQL data source."
					},
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the data source."
					}
				},
				"title": "SQLDataSource",
				"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running."
			},
			"ibm.tm1.api.v1.SQLDataSource-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the SQL data source."
					},
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the data source."
					}
				},
				"required": ["Name"],
				"title": "SQLDataSource (for create)",
				"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running."
			},
			"ibm.tm1.api.v1.SQLDataSource-update":
			{
				"type": "object",
				"properties":
				{
					"Description":
					{
						"type": "string",
						"nullable": true,
						"description": "A description of the data source."
					}
				},
				"title": "SQLDataSource (for update)",
				"description": "A representation of a SQL (read: ODBC) data source available on the host on which the TM1 server is running."
			},
			"ibm.tm1.api.v1.SQLFetchType":
			{
				"type": "string",
				"enum": ["ExtendedFetch", "FetchScroll", "Fetch"],
				"title": "SQLFetchType"
			},
			"ibm.tm1.api.v1.SSLSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientExportServerCertificate":
					{
						"type": "boolean",
						"nullable": true
					},
					"CertificateID":
					{
						"type": "string",
						"nullable": true
					},
					"CertificateFile":
					{
						"type": "string",
						"nullable": true
					},
					"PrivateKeyPwdFile":
					{
						"type": "string",
						"nullable": true
					},
					"PwdKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"CertAuthority":
					{
						"type": "string",
						"nullable": true
					},
					"CertRevocationFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientExportServerKeyID":
					{
						"type": "string",
						"nullable": true
					},
					"KeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyStashFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyLabel":
					{
						"type": "string",
						"nullable": true
					},
					"TLSCipherList":
					{
						"type": "string",
						"nullable": true
					},
					"FIPSOperationMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FIPSMode"
							}
						]
					},
					"NIST_SP800_131A_MODE":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SSLSettings"
			},
			"ibm.tm1.api.v1.SSLSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientExportServerCertificate":
					{
						"type": "boolean",
						"nullable": true
					},
					"CertificateID":
					{
						"type": "string",
						"nullable": true
					},
					"CertificateFile":
					{
						"type": "string",
						"nullable": true
					},
					"PrivateKeyPwdFile":
					{
						"type": "string",
						"nullable": true
					},
					"PwdKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"CertAuthority":
					{
						"type": "string",
						"nullable": true
					},
					"CertRevocationFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientExportServerKeyID":
					{
						"type": "string",
						"nullable": true
					},
					"KeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyStashFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyLabel":
					{
						"type": "string",
						"nullable": true
					},
					"TLSCipherList":
					{
						"type": "string",
						"nullable": true
					},
					"FIPSOperationMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FIPSMode"
							}
						]
					},
					"NIST_SP800_131A_MODE":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SSLSettings (for create)"
			},
			"ibm.tm1.api.v1.SSLSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ClientExportServerCertificate":
					{
						"type": "boolean",
						"nullable": true
					},
					"CertificateID":
					{
						"type": "string",
						"nullable": true
					},
					"CertificateFile":
					{
						"type": "string",
						"nullable": true
					},
					"PrivateKeyPwdFile":
					{
						"type": "string",
						"nullable": true
					},
					"PwdKeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"CertAuthority":
					{
						"type": "string",
						"nullable": true
					},
					"CertRevocationFile":
					{
						"type": "string",
						"nullable": true
					},
					"ClientExportServerKeyID":
					{
						"type": "string",
						"nullable": true
					},
					"KeyFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyStashFile":
					{
						"type": "string",
						"nullable": true
					},
					"KeyLabel":
					{
						"type": "string",
						"nullable": true
					},
					"TLSCipherList":
					{
						"type": "string",
						"nullable": true
					},
					"FIPSOperationMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.FIPSMode"
							}
						]
					},
					"NIST_SP800_131A_MODE":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SSLSettings (for update)"
			},
			"ibm.tm1.api.v1.Sandbox":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a sandbox."
					},
					"IsLoaded":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that specifies whether the sandbox is loaded into memory. Read-only."
					},
					"IsActive":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is an active sandbox.  \nUsed when the !sandbox parameter is used as a query option."
					},
					"IsQueued":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is queued and therefore read-only."
					},
					"IncludeInSandboxDimension":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the sandbox is to be included in the sandbox dimension."
					}
				},
				"title": "Sandbox",
				"description": "A sandbox that allows you to work with your data without affecting your base.  \nSandboxes allow you to work with your data in different versions, allowing you to add or modify it to see the results without affecting your base. Changes that you make in a sandbox are not made public until you commit the changes. You can continue to work with your data until you are satisfied with the result."
			},
			"ibm.tm1.api.v1.Sandbox-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of a sandbox."
					},
					"IsLoaded":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that specifies whether the sandbox is loaded into memory. Read-only."
					},
					"IsActive":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is an active sandbox.  \nUsed when the !sandbox parameter is used as a query option."
					},
					"IsQueued":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is queued and therefore read-only."
					},
					"IncludeInSandboxDimension":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the sandbox is to be included in the sandbox dimension."
					}
				},
				"required": ["Name"],
				"title": "Sandbox (for create)",
				"description": "A sandbox that allows you to work with your data without affecting your base.  \nSandboxes allow you to work with your data in different versions, allowing you to add or modify it to see the results without affecting your base. Changes that you make in a sandbox are not made public until you commit the changes. You can continue to work with your data until you are satisfied with the result."
			},
			"ibm.tm1.api.v1.Sandbox-update":
			{
				"type": "object",
				"properties":
				{
					"IsLoaded":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that specifies whether the sandbox is loaded into memory. Read-only."
					},
					"IsActive":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is an active sandbox.  \nUsed when the !sandbox parameter is used as a query option."
					},
					"IsQueued":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the current context is queued and therefore read-only."
					},
					"IncludeInSandboxDimension":
					{
						"type": "boolean",
						"nullable": true,
						"description": "A Boolean that indicates whether the sandbox is to be included in the sandbox dimension."
					}
				},
				"title": "Sandbox (for update)",
				"description": "A sandbox that allows you to work with your data without affecting your base.  \nSandboxes allow you to work with your data in different versions, allowing you to add or modify it to see the results without affecting your base. Changes that you make in a sandbox are not made public until you commit the changes. You can continue to work with your data until you are satisfied with the result."
			},
			"ibm.tm1.api.v1.SecurityMode":
			{
				"type": "string",
				"enum": ["Basic", "Integrated", "Mixed", "CAM"],
				"title": "SecurityMode"
			},
			"ibm.tm1.api.v1.Server":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the server."
					},
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"UsingSSL":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the server is configured to use SSL for client connections."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						],
						"description": "The authentication scheme supported by TM1 Server."
					},
					"ClientCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI clients use to connect to the CAM provider to retrieve a CAM passport."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					}
				},
				"title": "Server",
				"description": "A read-only collection of properties of the running server. Available without authenticating."
			},
			"ibm.tm1.api.v1.Server-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the server."
					},
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"UsingSSL":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the server is configured to use SSL for client connections."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						],
						"description": "The authentication scheme supported by TM1 Server."
					},
					"ClientCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI clients use to connect to the CAM provider to retrieve a CAM passport."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					}
				},
				"required": ["Name"],
				"title": "Server (for create)",
				"description": "A read-only collection of properties of the running server. Available without authenticating."
			},
			"ibm.tm1.api.v1.Server-update":
			{
				"type": "object",
				"properties":
				{
					"ProductVersion":
					{
						"type": "string",
						"nullable": true,
						"description": "The product version of the TM1 server."
					},
					"PortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number of the TM1 server, which is used to distinguish between multiple servers running on the same computer."
					},
					"ClientMessagePortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A secondary port used to accept client messages concerning the progress and ultimate cancellation of a lengthy operation without tying up thread reserves."
					},
					"HTTPPortNumber":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "The port number on which the TM1 server listens for incoming HTTP(S) requests."
					},
					"UsingSSL":
					{
						"type": "boolean",
						"nullable": true,
						"description": "Whether or not the server is configured to use SSL for client connections."
					},
					"SecurityPackageName":
					{
						"type": "string",
						"nullable": true,
						"description": "If you configure the TM1 server to use Integrated Login, the SecurityPackageName parameter defines the security package that authenticates your user name and password in Microsoft Windows."
					},
					"ServicePrincipalName":
					{
						"type": "string",
						"nullable": true,
						"description": "The service principal name (SPN) when using Integrated Login with TM1 Web and constrained delegation."
					},
					"IntegratedSecurityMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.SecurityMode"
							}
						],
						"description": "The authentication scheme supported by TM1 Server."
					},
					"ClientCAMURI":
					{
						"type": "string",
						"nullable": true,
						"description": "The URI clients use to connect to the CAM provider to retrieve a CAM passport."
					},
					"ClientPingCAMPassport":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "Indicates the interval, in seconds, that a client should ping the CAM server to keep their passport alive."
					}
				},
				"title": "Server (for update)",
				"description": "A read-only collection of properties of the running server. Available without authenticating."
			},
			"ibm.tm1.api.v1.ServerLogSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"LogReleaseLineCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ServerLogSettings"
			},
			"ibm.tm1.api.v1.ServerLogSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"LogReleaseLineCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ServerLogSettings (for create)"
			},
			"ibm.tm1.api.v1.ServerLogSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"LogReleaseLineCount":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "ServerLogSettings (for update)"
			},
			"ibm.tm1.api.v1.ServerSettings":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"description": "The name of the TM1 server."
					},
					"Access":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AccessSettings"
							}
						],
						"description": "The access settings of the TM1 server, that is, network, authentication, SSL, CAM, LDAP, CAPI, and HTTP settings."
					},
					"Administration":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AdministrationSettings"
							}
						],
						"description": "The administration settings, including client, audit log, debug log, server log, Java, external database, and TM1 Web settings."
					},
					"Modelling":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ModellingSettings"
							}
						],
						"description": "The modelling settings of the TM1 server."
					},
					"Performance":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.PerformanceSettings"
							}
						],
						"description": "The performance settings of the TM1 server."
					}
				},
				"title": "ServerSettings",
				"description": "The settings for a TM1 server."
			},
			"ibm.tm1.api.v1.ServerSettings-create":
			{
				"type": "object",
				"properties":
				{
					"ServerName":
					{
						"type": "string",
						"description": "The name of the TM1 server."
					},
					"Access":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AccessSettings-create"
							}
						],
						"description": "The access settings of the TM1 server, that is, network, authentication, SSL, CAM, LDAP, CAPI, and HTTP settings."
					},
					"Administration":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AdministrationSettings-create"
							}
						],
						"description": "The administration settings, including client, audit log, debug log, server log, Java, external database, and TM1 Web settings."
					},
					"Modelling":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ModellingSettings-create"
							}
						],
						"description": "The modelling settings of the TM1 server."
					},
					"Performance":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.PerformanceSettings-create"
							}
						],
						"description": "The performance settings of the TM1 server."
					}
				},
				"required": ["ServerName"],
				"title": "ServerSettings (for create)",
				"description": "The settings for a TM1 server."
			},
			"ibm.tm1.api.v1.ServerSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Access":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AccessSettings-update"
							}
						],
						"description": "The access settings of the TM1 server, that is, network, authentication, SSL, CAM, LDAP, CAPI, and HTTP settings."
					},
					"Administration":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.AdministrationSettings-update"
							}
						],
						"description": "The administration settings, including client, audit log, debug log, server log, Java, external database, and TM1 Web settings."
					},
					"Modelling":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.ModellingSettings-update"
							}
						],
						"description": "The modelling settings of the TM1 server."
					},
					"Performance":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.PerformanceSettings-update"
							}
						],
						"description": "The performance settings of the TM1 server."
					}
				},
				"title": "ServerSettings (for update)",
				"description": "The settings for a TM1 server."
			},
			"ibm.tm1.api.v1.Session":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The ID uniquely identifying the session."
					},
					"Context":
					{
						"type": "string",
						"nullable": true,
						"maxLength": 250,
						"description": "The Context specified by the client to help identifying the consumer of this session."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean indicating that the session is still considered active vs. closed with threads actively executing requests."
					},
					"User":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.User",
						"description": "The user that is associated to this session."
					},
					"Threads":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread"
						},
						"description": "The names of users in a given group."
					}
				},
				"title": "Session",
				"description": "Represents a unique user session with the server."
			},
			"ibm.tm1.api.v1.Session-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42",
						"description": "The ID uniquely identifying the session."
					},
					"Context":
					{
						"type": "string",
						"nullable": true,
						"maxLength": 250,
						"description": "The Context specified by the client to help identifying the consumer of this session."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean indicating that the session is still considered active vs. closed with threads actively executing requests."
					},
					"User":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.User-create",
						"description": "The user that is associated to this session."
					},
					"Threads":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Thread-create"
						},
						"description": "The names of users in a given group."
					}
				},
				"required": ["ID"],
				"title": "Session (for create)",
				"description": "Represents a unique user session with the server."
			},
			"ibm.tm1.api.v1.Session-update":
			{
				"type": "object",
				"properties":
				{
					"Context":
					{
						"type": "string",
						"nullable": true,
						"maxLength": 250,
						"description": "The Context specified by the client to help identifying the consumer of this session."
					},
					"Active":
					{
						"type": "boolean",
						"description": "A Boolean indicating that the session is still considered active vs. closed with threads actively executing requests."
					}
				},
				"title": "Session (for update)",
				"description": "Represents a unique user session with the server."
			},
			"ibm.tm1.api.v1.SpreadingSettings":
			{
				"type": "object",
				"properties":
				{
					"SpreadingPrecision":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14
					},
					"ProportionSpreadToZeroCells":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SpreadingSettings"
			},
			"ibm.tm1.api.v1.SpreadingSettings-create":
			{
				"type": "object",
				"properties":
				{
					"SpreadingPrecision":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14
					},
					"ProportionSpreadToZeroCells":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SpreadingSettings (for create)"
			},
			"ibm.tm1.api.v1.SpreadingSettings-update":
			{
				"type": "object",
				"properties":
				{
					"SpreadingPrecision":
					{
						"anyOf": [
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "double",
						"example": 3.14
					},
					"ProportionSpreadToZeroCells":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "SpreadingSettings (for update)"
			},
			"ibm.tm1.api.v1.StargateSettings":
			{
				"type": "object",
				"properties":
				{
					"ZeroWeightOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllRuleCalcStargateOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseStargateForRules":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StargateSettings"
			},
			"ibm.tm1.api.v1.StargateSettings-create":
			{
				"type": "object",
				"properties":
				{
					"ZeroWeightOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllRuleCalcStargateOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseStargateForRules":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StargateSettings (for create)"
			},
			"ibm.tm1.api.v1.StargateSettings-update":
			{
				"type": "object",
				"properties":
				{
					"ZeroWeightOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"AllRuleCalcStargateOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"UseStargateForRules":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StargateSettings (for update)"
			},
			"ibm.tm1.api.v1.StartupSettings":
			{
				"type": "object",
				"properties":
				{
					"PersistentFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipLoadingAliases":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumCubeLoadThreads":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"LoadPrivateSubsetsOnStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StartupSettings"
			},
			"ibm.tm1.api.v1.StartupSettings-create":
			{
				"type": "object",
				"properties":
				{
					"PersistentFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipLoadingAliases":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumCubeLoadThreads":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"LoadPrivateSubsetsOnStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StartupSettings (for create)"
			},
			"ibm.tm1.api.v1.StartupSettings-update":
			{
				"type": "object",
				"properties":
				{
					"PersistentFeeders":
					{
						"type": "boolean",
						"nullable": true
					},
					"SkipLoadingAliases":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumCubeLoadThreads":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"LoadPrivateSubsetsOnStartup":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "StartupSettings (for update)"
			},
			"ibm.tm1.api.v1.Subset":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the subset."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the subset, preceded by the parent dimension and separated by a colon, for example, [dimension_name]:[subset_name]."
					},
					"Expression":
					{
						"type": "string",
						"nullable": true,
						"description": "An MDX expression that defines the subset."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the subset."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy",
						"description": "The hierarchies that are included in the subset."
					},
					"Elements":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
						},
						"description": "The elements that are included in the subset."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the subset."
					}
				},
				"title": "Subset"
			},
			"ibm.tm1.api.v1.Subset-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the subset."
					},
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the subset, preceded by the parent dimension and separated by a colon, for example, [dimension_name]:[subset_name]."
					},
					"Expression":
					{
						"type": "string",
						"nullable": true,
						"description": "An MDX expression that defines the subset."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the subset."
					},
					"Hierarchy":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Hierarchy-create",
						"description": "The hierarchies that are included in the subset."
					},
					"Elements":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
						},
						"description": "The elements that are included in the subset."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the subset."
					}
				},
				"required": ["Name"],
				"title": "Subset (for create)"
			},
			"ibm.tm1.api.v1.Subset-update":
			{
				"type": "object",
				"properties":
				{
					"UniqueName":
					{
						"type": "string",
						"nullable": true,
						"description": "The name of the subset, preceded by the parent dimension and separated by a colon, for example, [dimension_name]:[subset_name]."
					},
					"Expression":
					{
						"type": "string",
						"nullable": true,
						"description": "An MDX expression that defines the subset."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the subset."
					}
				},
				"title": "Subset (for update)"
			},
			"ibm.tm1.api.v1.SubsetReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"Subset":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
									}
								],
								"description": "The subset that is referenced."
							}
						}
					}
				],
				"title": "SubsetReference",
				"description": "A reference to a subset."
			},
			"ibm.tm1.api.v1.SubsetReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"Subset":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
									}
								],
								"description": "The subset that is referenced."
							}
						}
					}
				],
				"title": "SubsetReference (for create)",
				"description": "A reference to a subset."
			},
			"ibm.tm1.api.v1.SubsetReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "SubsetReference (for update)",
				"description": "A reference to a subset."
			},
			"ibm.tm1.api.v1.SynchronizationSettings":
			{
				"type": "object",
				"properties":
				{
					"SyncUnitSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaximumSynchAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "SynchronizationSettings"
			},
			"ibm.tm1.api.v1.SynchronizationSettings-create":
			{
				"type": "object",
				"properties":
				{
					"SyncUnitSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaximumSynchAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "SynchronizationSettings (for create)"
			},
			"ibm.tm1.api.v1.SynchronizationSettings-update":
			{
				"type": "object",
				"properties":
				{
					"SyncUnitSize":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"MaximumSynchAttempts":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					}
				},
				"title": "SynchronizationSettings (for update)"
			},
			"ibm.tm1.api.v1.TISettings":
			{
				"type": "object",
				"properties":
				{
					"CognosTM1InterfacePath":
					{
						"type": "string",
						"nullable": true
					},
					"UseExcelSerialDate":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumTILockObjects":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EnableTIDebugging":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TISettings"
			},
			"ibm.tm1.api.v1.TISettings-create":
			{
				"type": "object",
				"properties":
				{
					"CognosTM1InterfacePath":
					{
						"type": "string",
						"nullable": true
					},
					"UseExcelSerialDate":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumTILockObjects":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EnableTIDebugging":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TISettings (for create)"
			},
			"ibm.tm1.api.v1.TISettings-update":
			{
				"type": "object",
				"properties":
				{
					"CognosTM1InterfacePath":
					{
						"type": "string",
						"nullable": true
					},
					"UseExcelSerialDate":
					{
						"type": "boolean",
						"nullable": true
					},
					"MaximumTILockObjects":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"EnableTIDebugging":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TISettings (for update)"
			},
			"ibm.tm1.api.v1.TM1WebSettings":
			{
				"type": "object",
				"properties":
				{
					"ExcelWebPublishEnabled":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TM1WebSettings"
			},
			"ibm.tm1.api.v1.TM1WebSettings-create":
			{
				"type": "object",
				"properties":
				{
					"ExcelWebPublishEnabled":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TM1WebSettings (for create)"
			},
			"ibm.tm1.api.v1.TM1WebSettings-update":
			{
				"type": "object",
				"properties":
				{
					"ExcelWebPublishEnabled":
					{
						"type": "boolean",
						"nullable": true
					}
				},
				"title": "TM1WebSettings (for update)"
			},
			"ibm.tm1.api.v1.Thread":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42"
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ThreadType",
						"description": "The type of thread, that is, user, worker, chore, system."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the thread."
					},
					"Context":
					{
						"type": "string",
						"description": "The context of the thread."
					},
					"State":
					{
						"type": "string",
						"description": "The state of the thread."
					},
					"Function":
					{
						"type": "string",
						"description": "The function of the thread."
					},
					"ObjectType":
					{
						"type": "string",
						"description": "The object type of the thread."
					},
					"ObjectName":
					{
						"type": "string",
						"description": "The name of the object that the thread acts on."
					},
					"RLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A shared lock that allows many threads to read from an object at the same time, but does not allow another thread to modify or write to this object until all R-locks have been released."
					},
					"IXLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A lock that reserves the right for a thread to obtain a W-lock on an object when all R-locks have been released."
					},
					"WLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "An exclusive lock that allows only one thread at a time to access and write changes to an object."
					},
					"ElapsedTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The elapsed time of a thread in seconds."
					},
					"WaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The wait time (delay) before a thread should start the process."
					},
					"Info":
					{
						"type": "string",
						"description": "The info of the thread."
					},
					"Session":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
							}
						],
						"description": "The Session that this thread is currently servicing."
					}
				},
				"title": "Thread",
				"description": "A thread that can run queries concurrently on the TM1 server."
			},
			"ibm.tm1.api.v1.Thread-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42"
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ThreadType",
						"description": "The type of thread, that is, user, worker, chore, system."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the thread."
					},
					"Context":
					{
						"type": "string",
						"description": "The context of the thread."
					},
					"State":
					{
						"type": "string",
						"description": "The state of the thread."
					},
					"Function":
					{
						"type": "string",
						"description": "The function of the thread."
					},
					"ObjectType":
					{
						"type": "string",
						"description": "The object type of the thread."
					},
					"ObjectName":
					{
						"type": "string",
						"description": "The name of the object that the thread acts on."
					},
					"RLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A shared lock that allows many threads to read from an object at the same time, but does not allow another thread to modify or write to this object until all R-locks have been released."
					},
					"IXLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A lock that reserves the right for a thread to obtain a W-lock on an object when all R-locks have been released."
					},
					"WLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "An exclusive lock that allows only one thread at a time to access and write changes to an object."
					},
					"ElapsedTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The elapsed time of a thread in seconds."
					},
					"WaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The wait time (delay) before a thread should start the process."
					},
					"Info":
					{
						"type": "string",
						"description": "The info of the thread."
					},
					"Session":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-create"
							}
						],
						"description": "The Session that this thread is currently servicing."
					}
				},
				"required": ["ID"],
				"title": "Thread (for create)",
				"description": "A thread that can run queries concurrently on the TM1 server."
			},
			"ibm.tm1.api.v1.Thread-update":
			{
				"type": "object",
				"properties":
				{
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.ThreadType",
						"description": "The type of thread, that is, user, worker, chore, system."
					},
					"Name":
					{
						"type": "string",
						"description": "The name of the thread."
					},
					"Context":
					{
						"type": "string",
						"description": "The context of the thread."
					},
					"State":
					{
						"type": "string",
						"description": "The state of the thread."
					},
					"Function":
					{
						"type": "string",
						"description": "The function of the thread."
					},
					"ObjectType":
					{
						"type": "string",
						"description": "The object type of the thread."
					},
					"ObjectName":
					{
						"type": "string",
						"description": "The name of the object that the thread acts on."
					},
					"RLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A shared lock that allows many threads to read from an object at the same time, but does not allow another thread to modify or write to this object until all R-locks have been released."
					},
					"IXLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "A lock that reserves the right for a thread to obtain a W-lock on an object when all R-locks have been released."
					},
					"WLocks":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32",
						"description": "An exclusive lock that allows only one thread at a time to access and write changes to an object."
					},
					"ElapsedTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The elapsed time of a thread in seconds."
					},
					"WaitTime":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S",
						"description": "The wait time (delay) before a thread should start the process."
					},
					"Info":
					{
						"type": "string",
						"description": "The info of the thread."
					}
				},
				"title": "Thread (for update)",
				"description": "A thread that can run queries concurrently on the TM1 server."
			},
			"ibm.tm1.api.v1.ThreadType":
			{
				"type": "string",
				"enum": ["User", "Worker", "Chore", "System"],
				"title": "ThreadType"
			},
			"ibm.tm1.api.v1.TopLogSettings":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopScanMode"
							}
						]
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "TopLogSettings"
			},
			"ibm.tm1.api.v1.TopLogSettings-create":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopScanMode"
							}
						]
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "TopLogSettings (for create)"
			},
			"ibm.tm1.api.v1.TopLogSettings-update":
			{
				"type": "object",
				"properties":
				{
					"Enable":
					{
						"type": "boolean",
						"nullable": true
					},
					"ScanMode":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.TopScanMode"
							}
						]
					},
					"ScanFrequency":
					{
						"type": "string",
						"nullable": true,
						"format": "duration",
						"example": "P4DT15H51M04S"
					}
				},
				"title": "TopLogSettings (for update)"
			},
			"ibm.tm1.api.v1.TopScanMode":
			{
				"type": "string",
				"enum": ["Threads", "Sandboxes", "SandboxQueueMetrics"],
				"title": "TopScanMode"
			},
			"ibm.tm1.api.v1.TransactionLogEntry":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "The ID of the transaction log entry."
					},
					"ChangeSetID":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the changeset in the transaction log entry."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the transaction log entry."
					},
					"ReplicationTime":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The replication time of the TM1 server for the transaction log entry."
					},
					"User":
					{
						"type": "string",
						"nullable": true,
						"description": "The user who completed the changeset in the transaction."
					},
					"Cube":
					{
						"type": "string",
						"nullable": true,
						"description": "The cube that was acted on in the transaction."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of tuples that were acted on in the transaction."
					},
					"OldValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The previous value of the changed tuple in the transaction."
					},
					"NewValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The new value of the changed tuple in the transaction."
					},
					"StatusMessage":
					{
						"type": "string",
						"nullable": true,
						"description": "The status message of the transaction."
					}
				},
				"title": "TransactionLogEntry",
				"description": "An entry in the transaction log.  \nThe transaction log displays the transactions recorded in the Tm1s.log file when a TM1 client changes a cube value."
			},
			"ibm.tm1.api.v1.TransactionLogEntry-create":
			{
				"type": "object",
				"properties":
				{
					"ID":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"format": "int64",
						"example": "42",
						"description": "The ID of the transaction log entry."
					},
					"ChangeSetID":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the changeset in the transaction log entry."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the transaction log entry."
					},
					"ReplicationTime":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The replication time of the TM1 server for the transaction log entry."
					},
					"User":
					{
						"type": "string",
						"nullable": true,
						"description": "The user who completed the changeset in the transaction."
					},
					"Cube":
					{
						"type": "string",
						"nullable": true,
						"description": "The cube that was acted on in the transaction."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of tuples that were acted on in the transaction."
					},
					"OldValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The previous value of the changed tuple in the transaction."
					},
					"NewValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The new value of the changed tuple in the transaction."
					},
					"StatusMessage":
					{
						"type": "string",
						"nullable": true,
						"description": "The status message of the transaction."
					}
				},
				"required": ["ID"],
				"title": "TransactionLogEntry (for create)",
				"description": "An entry in the transaction log.  \nThe transaction log displays the transactions recorded in the Tm1s.log file when a TM1 client changes a cube value."
			},
			"ibm.tm1.api.v1.TransactionLogEntry-update":
			{
				"type": "object",
				"properties":
				{
					"ChangeSetID":
					{
						"type": "string",
						"nullable": true,
						"description": "The ID of the changeset in the transaction log entry."
					},
					"TimeStamp":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The date and time of the transaction log entry."
					},
					"ReplicationTime":
					{
						"type": "string",
						"nullable": true,
						"format": "date-time",
						"example": "2017-04-13T15:51:04Z",
						"description": "The replication time of the TM1 server for the transaction log entry."
					},
					"User":
					{
						"type": "string",
						"nullable": true,
						"description": "The user who completed the changeset in the transaction."
					},
					"Cube":
					{
						"type": "string",
						"nullable": true,
						"description": "The cube that was acted on in the transaction."
					},
					"Tuple":
					{
						"type": "array",
						"items":
						{
							"type": "string"
						},
						"description": "A collection of tuples that were acted on in the transaction."
					},
					"OldValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The previous value of the changed tuple in the transaction."
					},
					"NewValue":
					{
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "The new value of the changed tuple in the transaction."
					},
					"StatusMessage":
					{
						"type": "string",
						"nullable": true,
						"description": "The status message of the transaction."
					}
				},
				"title": "TransactionLogEntry (for update)",
				"description": "An entry in the transaction log.  \nThe transaction log displays the transactions recorded in the Tm1s.log file when a TM1 client changes a cube value."
			},
			"ibm.tm1.api.v1.TupleMember":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Member"
					},
					{
						"type": "object",
						"properties":
						{
							"DisplayInfo":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis.  \nThe DisplayInfo property contains various items of information that help an application render the axis. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that preceded the member, hence those ancestors being drilled down, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down. That is, at least one descendant of this member appears on the axis, immediately following all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member preceding all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis following zero or more descendants of the member."
							},
							"DisplayInfoAbove":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis, presuming children are expanded before their parent.  \nThe DisplayInfoAbove property contains various items of information that help an application render the axis, looking at the content of the axis in reverse order, useful in cases where children are presumed to be expanded before their parent/ancestors. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that follow the member, hence those ancestors being drilled down, or rather up in this case, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down, or up in this case. That is, at least one descendant of this member appears on the axis, immediately preceding all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member following all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis preceding zero or more descendants of the member."
							}
						}
					}
				],
				"title": "TupleMember",
				"description": "Represents a member in a tuple on an axis in a query result."
			},
			"ibm.tm1.api.v1.TupleMember-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-create"
					},
					{
						"type": "object",
						"properties":
						{
							"DisplayInfo":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis.  \nThe DisplayInfo property contains various items of information that help an application render the axis. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that preceded the member, hence those ancestors being drilled down, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down. That is, at least one descendant of this member appears on the axis, immediately following all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member preceding all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis following zero or more descendants of the member."
							},
							"DisplayInfoAbove":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis, presuming children are expanded before their parent.  \nThe DisplayInfoAbove property contains various items of information that help an application render the axis, looking at the content of the axis in reverse order, useful in cases where children are presumed to be expanded before their parent/ancestors. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that follow the member, hence those ancestors being drilled down, or rather up in this case, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down, or up in this case. That is, at least one descendant of this member appears on the axis, immediately preceding all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member following all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis preceding zero or more descendants of the member."
							}
						}
					}
				],
				"title": "TupleMember (for create)",
				"description": "Represents a member in a tuple on an axis in a query result."
			},
			"ibm.tm1.api.v1.TupleMember-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Member-update"
					},
					{
						"type": "object",
						"properties":
						{
							"DisplayInfo":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis.  \nThe DisplayInfo property contains various items of information that help an application render the axis. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that preceded the member, hence those ancestors being drilled down, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down. That is, at least one descendant of this member appears on the axis, immediately following all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member preceding all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis following zero or more descendants of the member."
							},
							"DisplayInfoAbove":
							{
								"type": "integer",
								"format": "int32",
								"description": "This property contains various items of information that help an application render the axis, presuming children are expanded before their parent.  \nThe DisplayInfoAbove property contains various items of information that help an application render the axis, looking at the content of the axis in reverse order, useful in cases where children are presumed to be expanded before their parent/ancestors. It is a 4-byte value. The value of the least-significant byte of the least significant word contains the so called drill level. The drill level effectively represents the number of ancestors of a member that follow the member, hence those ancestors being drilled down, or rather up in this case, without breaking ancestry. The most significant byte of the least significant word represents the level in the ancestry relative to the ancestor at the root of the tree. In the most-significant 2 bytes, each bit potentially conveys one piece of display information, however for only 3 bits (the least-significant bits) a meaning has been defined. The least-significant bit (rightmost bit), if set, indicates that this member is drilled down, or up in this case. That is, at least one descendant of this member appears on the axis, immediately preceding all occurrences of that member. The next bit (the second least-significant bit), if set, indicates that the parent of this member is the same as the parent of the member following all occurrences of the current member. The last bit (the third least-significant bit), if set, indicates that, with the exception of members that appear at/are at the root, at least one sibling of this member appears on the axis preceding zero or more descendants of the member."
							}
						}
					}
				],
				"title": "TupleMember (for update)",
				"description": "Represents a member in a tuple on an axis in a query result."
			},
			"ibm.tm1.api.v1.UpdateOrder":
			{
				"type": "string",
				"enum": ["NoOrder", "ByLevel"],
				"title": "UpdateOrder"
			},
			"ibm.tm1.api.v1.User":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The unique name of the user."
					},
					"FriendlyName":
					{
						"type": "string",
						"description": "The friendly name, also known as the display name, of the user."
					},
					"Password":
					{
						"type": "string",
						"nullable": true,
						"description": "The password for the user."
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.UserType",
						"description": "The type of the user."
					},
					"IsActive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is currently logged in to the TM1 server."
					},
					"Enabled":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is enabled."
					},
					"Groups":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Group"
						},
						"description": "The defined groups that the user belongs to. A user can belong to multiple groups."
					},
					"Sessions":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Session"
						},
						"description": "The set of currently active sessions of this user."
					}
				},
				"title": "User",
				"description": "A user on a TM1 server."
			},
			"ibm.tm1.api.v1.User-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The unique name of the user."
					},
					"FriendlyName":
					{
						"type": "string",
						"description": "The friendly name, also known as the display name, of the user."
					},
					"Password":
					{
						"type": "string",
						"nullable": true,
						"description": "The password for the user."
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.UserType",
						"description": "The type of the user."
					},
					"IsActive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is currently logged in to the TM1 server."
					},
					"Enabled":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is enabled."
					},
					"Groups":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Group-create"
						},
						"description": "The defined groups that the user belongs to. A user can belong to multiple groups."
					},
					"Sessions":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.Session-create"
						},
						"description": "The set of currently active sessions of this user."
					}
				},
				"required": ["Name"],
				"title": "User (for create)",
				"description": "A user on a TM1 server."
			},
			"ibm.tm1.api.v1.User-update":
			{
				"type": "object",
				"properties":
				{
					"FriendlyName":
					{
						"type": "string",
						"description": "The friendly name, also known as the display name, of the user."
					},
					"Password":
					{
						"type": "string",
						"nullable": true,
						"description": "The password for the user."
					},
					"Type":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.UserType",
						"description": "The type of the user."
					},
					"IsActive":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is currently logged in to the TM1 server."
					},
					"Enabled":
					{
						"type": "boolean",
						"description": "A Boolean that indicates whether the user is enabled."
					}
				},
				"title": "User (for update)",
				"description": "A user on a TM1 server."
			},
			"ibm.tm1.api.v1.UserType":
			{
				"type": "string",
				"enum": ["User", "SecurityAdmin", "DataAdmin", "Admin", "OperationsAdmin"],
				"title": "UserType"
			},
			"ibm.tm1.api.v1.View":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the view."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes"
							}
						],
						"description": "The attributes of the view."
					},
					"Cube":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube",
						"description": "The parent cube of the view."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes"
						},
						"description": "Translated string values for properties of the view."
					}
				},
				"title": "View",
				"description": "A view of data in a cube."
			},
			"ibm.tm1.api.v1.View-create":
			{
				"type": "object",
				"properties":
				{
					"Name":
					{
						"type": "string",
						"description": "The name of the view."
					},
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-create"
							}
						],
						"description": "The attributes of the view."
					},
					"Cube":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Cube-create",
						"description": "The parent cube of the view."
					},
					"LocalizedAttributes":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/ibm.tm1.api.v1.LocalizedAttributes-create"
						},
						"description": "Translated string values for properties of the view."
					}
				},
				"required": ["Name"],
				"title": "View (for create)",
				"description": "A view of data in a cube."
			},
			"ibm.tm1.api.v1.View-update":
			{
				"type": "object",
				"properties":
				{
					"Attributes":
					{
						"nullable": true,
						"anyOf": [
							{
								"$ref": "#/components/schemas/ibm.tm1.api.v1.Attributes-update"
							}
						],
						"description": "The attributes of the view."
					}
				},
				"title": "View (for update)",
				"description": "A view of data in a cube."
			},
			"ibm.tm1.api.v1.ViewAxisSelection":
			{
				"type": "object",
				"properties":
				{
					"Subset":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
					}
				},
				"title": "ViewAxisSelection"
			},
			"ibm.tm1.api.v1.ViewAxisSelection-create":
			{
				"type": "object",
				"properties":
				{
					"Subset":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
					}
				},
				"title": "ViewAxisSelection (for create)"
			},
			"ibm.tm1.api.v1.ViewAxisSelection-update":
			{
				"type": "object",
				"title": "ViewAxisSelection (for update)"
			},
			"ibm.tm1.api.v1.ViewCalculationSettings":
			{
				"type": "object",
				"properties":
				{
					"MagnitudeDifferenceToBeZero":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CheckFeedersMaximumCells":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"CalculationThresholdForStorage":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"ViewConsolidationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"ViewConsolidationOptimizationMethod":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "ViewCalculationSettings"
			},
			"ibm.tm1.api.v1.ViewCalculationSettings-create":
			{
				"type": "object",
				"properties":
				{
					"MagnitudeDifferenceToBeZero":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CheckFeedersMaximumCells":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"CalculationThresholdForStorage":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"ViewConsolidationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"ViewConsolidationOptimizationMethod":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "ViewCalculationSettings (for create)"
			},
			"ibm.tm1.api.v1.ViewCalculationSettings-update":
			{
				"type": "object",
				"properties":
				{
					"MagnitudeDifferenceToBeZero":
					{
						"type": "integer",
						"nullable": true,
						"format": "int32"
					},
					"CheckFeedersMaximumCells":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"CalculationThresholdForStorage":
					{
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"format": "int64",
						"example": "42"
					},
					"ViewConsolidationOptimization":
					{
						"type": "boolean",
						"nullable": true
					},
					"ViewConsolidationOptimizationMethod":
					{
						"type": "string",
						"nullable": true
					}
				},
				"title": "ViewCalculationSettings (for update)"
			},
			"ibm.tm1.api.v1.ViewConsolidationOptimizationMethod":
			{
				"type": "string",
				"enum": ["Tree", "Array"],
				"title": "ViewConsolidationOptimizationMethod"
			},
			"ibm.tm1.api.v1.ViewReference":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry"
					},
					{
						"type": "object",
						"properties":
						{
							"View":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.View"
									}
								],
								"description": "The view that is referenced."
							}
						}
					}
				],
				"title": "ViewReference",
				"description": "A reference to a view."
			},
			"ibm.tm1.api.v1.ViewReference-create":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-create"
					},
					{
						"type": "object",
						"properties":
						{
							"View":
							{
								"nullable": true,
								"anyOf": [
									{
										"$ref": "#/components/schemas/ibm.tm1.api.v1.View-create"
									}
								],
								"description": "The view that is referenced."
							}
						}
					}
				],
				"title": "ViewReference (for create)",
				"description": "A reference to a view."
			},
			"ibm.tm1.api.v1.ViewReference-update":
			{
				"allOf": [
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Entry-update"
					},
					{
						"type": "object"
					}
				],
				"title": "ViewReference (for update)",
				"description": "A reference to a view."
			},
			"ibm.tm1.api.v1.ViewTitle":
			{
				"type": "object",
				"properties":
				{
					"Subset":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset"
					},
					"Selected":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element"
					}
				},
				"title": "ViewTitle"
			},
			"ibm.tm1.api.v1.ViewTitle-create":
			{
				"type": "object",
				"properties":
				{
					"Subset":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Subset-create"
					},
					"Selected":
					{
						"$ref": "#/components/schemas/ibm.tm1.api.v1.Element-create"
					}
				},
				"title": "ViewTitle (for create)"
			},
			"ibm.tm1.api.v1.ViewTitle-update":
			{
				"type": "object",
				"title": "ViewTitle (for update)"
			},
			"odata.error":
			{
				"type": "object",
				"required": ["error"],
				"properties":
				{
					"error":
					{
						"$ref": "#/components/schemas/odata.error.main"
					}
				}
			},
			"odata.error.main":
			{
				"type": "object",
				"required": ["code", "message"],
				"properties":
				{
					"code":
					{
						"type": "string"
					},
					"message":
					{
						"type": "string"
					},
					"target":
					{
						"type": "string"
					},
					"details":
					{
						"type": "array",
						"items":
						{
							"$ref": "#/components/schemas/odata.error.detail"
						}
					},
					"innererror":
					{
						"type": "object",
						"description": "The structure of this object is service-specific"
					}
				}
			},
			"odata.error.detail":
			{
				"type": "object",
				"required": ["code", "message"],
				"properties":
				{
					"code":
					{
						"type": "string"
					},
					"message":
					{
						"type": "string"
					},
					"target":
					{
						"type": "string"
					}
				}
			}
		},
		"parameters":
		{
			"top":
			{
				"name": "$top",
				"in": "query",
				"description": "Show only the first n items, see [OData Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
				"schema":
				{
					"type": "integer",
					"minimum": 0
				},
				"example": 50
			},
			"skip":
			{
				"name": "$skip",
				"in": "query",
				"description": "Skip the first n items, see [OData Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
				"schema":
				{
					"type": "integer",
					"minimum": 0
				}
			},
			"count":
			{
				"name": "$count",
				"in": "query",
				"description": "Include count of items, see [OData Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
				"schema":
				{
					"type": "boolean"
				}
			},
			"search":
			{
				"name": "$search",
				"in": "query",
				"description": "Search items by search phrases, see [OData Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
				"schema":
				{
					"type": "string"
				}
			}
		},
		"responses":
		{
			"error":
			{
				"description": "Error",
				"content":
				{
					"application/json":
					{
						"schema":
						{
							"$ref": "#/components/schemas/odata.error"
						}
					}
				}
			}
		}
	}
}