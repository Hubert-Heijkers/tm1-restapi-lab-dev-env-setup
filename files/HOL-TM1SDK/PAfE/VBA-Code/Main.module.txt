Option Explicit

Sub populateTopGrid()

    Dim oAPI As New tm1api
    Dim oSheet As Worksheet
    Dim bScreenupdating As Boolean
    Dim request As String
    Dim response As Object
        
    'get a reference to the first worksheet
    Set oSheet = ThisWorkbook.Sheets("Sheet1")
    
    'remember screenupdating property and turn it off to avoid flickering
    bScreenupdating = Application.ScreenUpdating
    Application.ScreenUpdating = False

    'the request URL will be sent to the server
    request = "/tm1/Planning Sample/api/v1/Threads?$expand=Session($expand=User($select=Name,FriendlyName))"

    'sending the request to the server
    Set response = Reporting.ActiveConnection.Get(request)

    'checking for a response
    If Not response Is Nothing Then
    
        'the response contains a collection wrapped in a JSON object and stored in a 'value' property
        If Not response.Properties Is Nothing And response.Properties.Count() > 0 Then
        
            Dim threadsJSON As Object
            Set threadsJSON = response.Properties.Item("value")
            Dim threadsCollection As Collection
            Set threadsCollection = oAPI.DeserializeThreadCollection(threadsJSON)

            'print the headers for the columns
            With oSheet.Cells(5, 1)
                .Value = "SessionID"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 2)
                .Value = "User"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 3)
                .Value = "TheadID"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 4)
                .Value = "Type"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 5)
                .Value = "Name"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 6)
                .Value = "Context"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 7)
                .Value = "State"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 8)
                .Value = "Function"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 9)
                .Value = "Object Type"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 10)
                .Value = "Object Name"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 11)
                .Value = "RLocks"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 12)
                .Value = "IXLocks"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 13)
                .Value = "WLocks"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 14)
                .Value = "Elapsed Time"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 15)
                .Value = "Wait Time"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            With oSheet.Cells(5, 16)
                .Value = "Info"
                .Font.Bold = True
                .Font.Color = RGB(150, 0, 0)
            End With
            
            'print the details for the individual threads
            Dim threadCount As Integer
            threadCount = threadsCollection.Count
            Dim iThread As Long
            For iThread = 1 To threadCount
            
                Dim oThread As TM1Thread
                Set oThread = threadsCollection.Item(iThread)
                Dim oSession As TM1Session
                Set oSession = oThread.Session()
                If Not oSession Is Nothing Then
                    oSheet.Cells(5 + iThread, 1) = oSession.ID
                    Dim oUser As TM1User
                    Set oUser = oSession.User()
                    If Not oUser Is Nothing Then
                        oSheet.Cells(5 + iThread, 2) = oUser.FriendlyName
                    End If
                Else
                    oSheet.Cells(5 + iThread, 1).ClearContents
                    oSheet.Cells(5 + iThread, 2).ClearContents
                End If
                oSheet.Cells(5 + iThread, 3) = oThread.ID
                oSheet.Cells(5 + iThread, 4) = oThread.ThreadType
                oSheet.Cells(5 + iThread, 5) = oThread.Name
                oSheet.Cells(5 + iThread, 6) = oThread.Context
                oSheet.Cells(5 + iThread, 7) = oThread.State
                oSheet.Cells(5 + iThread, 8) = oThread.FunctionName
                oSheet.Cells(5 + iThread, 9) = oThread.ObjectType
                oSheet.Cells(5 + iThread, 10) = oThread.ObjectName
                oSheet.Cells(5 + iThread, 11) = oThread.RLocks
                oSheet.Cells(5 + iThread, 12) = oThread.IXLocks
                oSheet.Cells(5 + iThread, 13) = oThread.WLocks
                oSheet.Cells(5 + iThread, 14) = oThread.ElapsedTime
                oSheet.Cells(5 + iThread, 15) = oThread.WaitTime
                oSheet.Cells(5 + iThread, 16) = oThread.Info
            
            Next iThread

            'setting the columns to autofit
            oSheet.Columns("A:P").AutoFit

        End If
    
    End If

    'resetting screenupdating
    Application.ScreenUpdating = bScreenupdating

End Sub
